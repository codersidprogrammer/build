{"version":3,"sources":["Pages/BoxPage/Components/loadingBar.js","Pages/BoxPage/Redux/WidgetDataSlice.ts","Pages/SettingsPage/Redux/BoxSettingsSlice.ts","Redux/AppSlice.ts","Pages/BoxPage/Redux/WidgetSlice.ts","Service/apiService.js","Pages/BoxPage/Redux/BoxUISlice.ts","Context/AuthContext.js","Pages/BoxPage/Redux/BoxSlice.ts","Components/AlertBar.tsx","Pages/LoginPage/Styles.js","Image/codersbox-white.png","Image/codersbox-original.png","Image/codersbox-gray.png","Image/originalicon.png","Components/Styles.js","Components/Logo.js","Pages/LoginPage/Login.js","Image/cardbox-whiteblue.png","Pages/DashboardPage/CardBox.js","Pages/DashboardPage/Components/Styles.js","Pages/DashboardPage/Components/CardBoxLoading.js","Pages/DashboardPage/Components/QuickAddDialog.js","Service/CodersboxService.js","Service/mqttService.js","Service/firebaseService.js","Pages/BoxPage/BoxConnectionManager.js","Pages/BoxPage/Components/Styles.js","Pages/BoxPage/Components/AddWidget/AddWidgetProvider.js","Pages/BoxPage/hooks/WidgetDataHandler.ts","Pages/BoxPage/Components/widgets/ChartLine/index.js","Pages/BoxPage/Components/widgets/ChartLine/WidgetForm.js","Pages/BoxPage/Components/widgets/ChartLine/Component.js","Pages/BoxPage/Context/widgetContextTracked.js","Pages/BoxPage/Components/widgets/WidgetFormOptions.js","Pages/BoxPage/Components/widgets/ChartRadial/index.js","Pages/BoxPage/Components/widgets/ChartRadial/WidgetForm.js","Pages/BoxPage/Components/widgets/ChartRadial/Component.tsx","Pages/BoxPage/hooks/WidgetControlHandler.js","Pages/BoxPage/Components/widgets/Button/Styles.js","Pages/BoxPage/Components/widgets/Button/index.js","Pages/BoxPage/Components/widgets/Button/WidgetForm.js","Pages/BoxPage/Components/widgets/Button/Component.js","Pages/BoxPage/Components/widgets/Led/Styles.js","Pages/BoxPage/Components/widgets/Led/index.js","Pages/BoxPage/Components/widgets/Led/Component.js","Pages/BoxPage/Components/widgets/Display/index.js","Pages/BoxPage/Components/widgets/Display/WidgetForm.js","Pages/BoxPage/Components/widgets/Display/Component.js","Pages/BoxPage/Components/widgets/Slider/Styles.js","Pages/BoxPage/Components/widgets/Slider/Component.tsx","Pages/BoxPage/Components/widgets/Slider/index.js","Pages/BoxPage/Components/widgets/Slider/WidgetForm.js","Pages/BoxPage/Components/widgets/Map/Styles.js","Pages/BoxPage/Components/widgets/Map/Component.js","Pages/BoxPage/Components/widgets/Map/index.js","Pages/BoxPage/Components/widgets/Map/WidgetForm.js","Pages/BoxPage/Components/widgets/Stepper/Styles.js","Pages/BoxPage/Components/widgets/Stepper/index.js","Pages/BoxPage/Components/widgets/Stepper/WidgetForm.js","Pages/BoxPage/Components/widgets/Stepper/Component.js","Pages/BoxPage/Components/AddWidget/AddWidgetsCatalog.js","Pages/BoxPage/Components/AddWidget/AddWidget.js","Pages/BoxPage/Components/boxContainer.js","Pages/BoxPage/Components/EditWidget/EditWidgetForm.js","Pages/BoxPage/Components/EditWidget/EditWidgetDrawer.js","Pages/BoxPage/Components/boxHeader.js","Image/no-widget.svg","Pages/BoxPage/Components/WidgetContainer/NoWidgetFound.js","Pages/BoxPage/Components/EditWidget/EditWidget.js","Pages/BoxPage/hooks/useWidgetBoxUtility.js","Pages/BoxPage/Components/WidgetContainer/WidgetCardContainer.js","Pages/BoxPage/Components/WidgetContainer/WidgetResponsiveGrid.js","Pages/BoxPage/Components/WidgetContainer/WidgetContainer.js","Pages/SettingsPage/Styles.js","Pages/SettingsPage/Components/formBoxName.js","Pages/SettingsPage/Components/formDataField.js","Pages/SettingsPage/Components/formConnection.js","Pages/SettingsPage/Components/Tabs.js","Pages/SettingsPage/Components/SettingBoxPageContainer.js","Pages/SettingsPage/index.js","Image/profilebackground.png","Pages/CodersPage/Styles.js","Pages/SignUpPage/Styles.js","Pages/SignUpPage/SignUp.js","Pages/AccountPage/Styles.js","Pages/AccountPage/Components/FormPassword.tsx","Pages/AccountPage/Components/FormProfile.js","Pages/AccountPage/Components/FormTelegram.js","Pages/AccountPage/Components/HeaderPage.js","Pages/UtilPage/Styles.js","Pages/UtilPage/NotFound.js","Image/dashboard-image.svg","Components/Drawer.js","Route.js","Components/RightMenu.js","Components/Header.js","Container.js","Pages/BoxTrashPage/Components/BoxTrashTable.js","Pages/BoxTrashPage/Components/HeaderPage.js","Pages/BoxTrashPage/Styles.js","Pages/BoxAPIPage/Components/BoxApiTable.js","Pages/BoxAPIPage/Components/HeaderPage.js","Pages/BoxAPIPage/Styles.js","Pages/LoginPage/index.js","Pages/SignUpPage/index.js","Pages/DashboardPage/index.js","Pages/BoxAPIPage/index.js","Pages/BoxPage/index.js","Pages/BoxTrashPage/index.js","Pages/CodersPage/index.js","Pages/AccountPage/index.js","App.js","reportWebVitals.js","index.js","Pages/BoxPage/Redux/WidgetUISlice.ts","Pages/BoxPage/Context/boxContextTracked.js","Pages/DashboardPage/Redux/DashboardSlice.ts","Context/AppContextTracked.js","Redux/AuthSlice.ts","Redux/Store.ts"],"names":["Loading","height","width","style","marginTop","variant","WidgetDataSlice","createSlice","name","initialState","widgetDataContainer","reducers","setWidgetDataContainer","state","action","payload","actions","BoxSettingsSlice","connectionsList","connectionFields","setBoxSettingsConnectionFields","setBoxSettingsConnectionList","AppSlice","shouldBoxRefresh","isDrawerOpen","useOwnDataField","fetchingStatus","fetchingMessage","message","severity","isOpen","shouldRender","setDrawerState","setFetchingState","setFetchingMessage","setFetchingStatus","setAppReRender","setBoxShouldRefresh","setUseOwnDataField","data","source","value","layout","x","y","w","h","minW","minH","i","moved","static","options","properties","title","subtitle","self","type","widgetId","WidgetSlice","setWidgetData","setWidgetDataSource","setWidgetDataValue","setWidgetArrayDataValue","index","resetWidgetDataValueArray","deleteWidgetArrayDataValue","arrayState","filter","field","setWidgetLayout","setWidgetOption","setWidgetArrayOption","optionName","resetWidgetOptionArray","deleteWidgetArrayOption","setWidgetProperties","metric","setWidgetTitle","setWidgetSubtitle","setWidgetSelf","setWidgetSelfVariant","setWidgetSelfType","setWidgetId","resetWidgetSlice","API_URL","CODERSBOX_URL","API_BOX_URL","API_WIDGET_URL","generateCancelToken","axios","CancelToken","ApiService","canceltoken","undefined","this","http","create","baseURL","withCredentials","xsrfCookieName","xsrfHeaderName","cancelToken","token","interceptors","response","use","error","status","Cookie","remove","COOKIE_LOGIN_STATE","expires","sameSite","window","location","href","Promise","reject","args","all","isWidget","get","withFeed","idWidget","userName","boxToken","boxDeviceToken","post","patch","delete","BoxUISlice","isBoxEditMode","isBoxEditModePrev","isEditWidget","isAddNewWidget","isNewWidgetChoosed","setBoxUIEditMode","setBoxUIEditWidget","setBoxUIAddNewWidget","setBoxUIShouldRefresh","setBoxUINewWidgetChoosed","resetBoxUIEditMode","COOKIE_LOGIN_TOKEN","isLoggedIn","userEmail","userId","authToken","userTelegramID","handleLogout","a","handleLogin","credentials","handleAutoLogin","AuthContext","React","createContext","AuthContextProvider","props","apiCancelToken","api","useState","Boolean","setIsLoggedIn","setUserName","setUserEmail","setUserId","setTelegramID","getUserCookie","findUser","userData","email","telegramID","set","console","log","userLogout","userAutoLoginCheck","useEffect","cancel","Provider","children","boxId","boxName","boxTagName","boxDescription","boxActiveStatus","boxSettings","dataField","activeConnection","connection","mqtt","broker","subscribeTopic","publishTopic","authentication","firebase","databaseType","firebaseToken","codersbox","deviceToken","boxWidgets","createdTime","updatedTime","BoxSlice","setBoxId","setBoxState","setBoxByFieldName","addBoxNewDataField","setBoxNewDataFieldValue","replace","deleteBoxDataField","setBoxActiveConnection","setBoxConnectionProperties","selectedConnection","connectionPropsName","addBoxNewWidget","deleteBoxWidgetByIndex","localDelete","JSON","parse","String","localStorage","getItem","widget","setItem","stringify","findIndex","splice","resetBoxSlice","Alert","elevation","AlertBar","appState","useTypedReduxSelector","app","dispatch","useAppDispatch","handleSnackBar","event","reason","Fragment","Snackbar","open","autoHideDuration","onClose","useStyles","makeStyles","theme","paper","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","main","form","submit","toolbar","appBarMenuButtonHide","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","logoImageSmall","breakpoints","down","logoImage","logoImageMedium","logoImageLarge","grow","flexGrow","sectionDesktop","up","sectionMobile","flexShrink","whiteSpace","color","drawerDivider","drawerDividerTitle","drawerListContainer","drawerList","drawerOpen","drawerClose","overflowX","drawerToolbar","justifyContent","padding","mixins","drawerPaper","search","position","borderRadius","shape","fade","common","white","marginRight","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","Logo","logoType","logoSize","classes","sizeConfig","src","brandImageWhite","alt","className","brandImageGray","originalBox","brandImageOriginal","Copyright","Typography","align","Link","Date","getFullYear","Login","route","useHistory","auth","useContext","isFetching","isAlert","loginFetchinStatus","setLoginFetchinStatus","useForm","mode","reValidateMode","defaultValues","password","remember","register","getValues","errors","handleErrorSnackBar","onButtonLoginClick","dataUser","Object","keys","length","then","push","catch","onLoginFailed","Container","component","maxWidth","CssBaseline","method","TextField","required","fullWidth","id","label","autoComplete","autoFocus","disabled","inputRef","pattern","minLength","FormControlLabel","control","Checkbox","Button","onClick","CircularProgress","Grid","container","item","xs","Box","mt","require","React2","React1","root","media","CardBox","description","dashboardState","dashboardPage","openDialog","setOpenDialog","isDeleting","setIsDeleting","handleCloseDialog","boxes","Card","CardActionArea","CardMedia","image","codersLogo","CardContent","gutterBottom","CardActions","startIcon","to","size","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteBox","deleteUserBox","cardLoading","disabledBackground","minHeight","cardLoadingContent","fabQuickAdd","bottom","right","quickAddform","flex","CardBoxLoading","QuickAddNewBox","login","useTheme","fullscreen","useMediaQuery","onCloseHandler","setAddNewBox","handleAddNewBox","dataSave","c","r","Math","random","toString","newBoxCreator","boxUserId","userUniqueId","saveNewBox","getBoxUser","refresh","setUserBoxes","handleFieldChange","setNewBoxCreator","Fab","isAddNewBox","aria-label","fullScreen","md","lg","onBlur","target","multiline","rows","CodersboxService","setAuth","setSSL","publish","subscribe","setTopic","client","hostName","port","clientID","uuidv4","Paho","Client","host","isSSL","topicPub","topicSubs","connectedState","username","responseObject","errorCode","errorMessage","qos","onSuccess","context","disconnect","Message","destinationName","send","payloadString","connect","useSSL","handleConnectionConnect","bind","callback","onConnectionLost","handleConnectionLost","onMessageArrived","handleMessageArived","initFirebase","config","apps","initializeApp","cdbservice","BoxConnectionManager","boxState","box","firebaseConnection","firebaseConfig","refDocs","database","ref","firebaseRTDB","on","snapshot","widgetData","val","firestore","firebaseFireStore","collection","orderBy","limit","onSnapshot","doc","setBoxToken","handle","codersboxConnection","close","fieldFlex","widgetRoot","widgetComponentSpacing","paddingTop","widgetFormEditMargin","widgetFormEditAppBar","top","widgetFormEditToolbar","overflow","widgetCatalogCard","cursor","widgetCatalogCardChoosed","minWidth","dragOn","opacity","dragOff","choosedWidget","unChoosedWidget","chartRoot","colorPicker","left","withWidget","widgetName","FormComponent","WidgetIcon","boxUIState","boxPageUI","widgetUI","CardHeader","subheader","clsx","direction","justify","WidgetForm","ChoosedAction","widgetState","widgetUIState","handleDataValue","e","now","boxCols","setWidgetIndexLayout","FormControl","FormHelperText","InputLabel","Select","labelId","onChange","MenuItem","map","handleWidgetSave","dataWidget","widgetUniqueId","widgetProperties","widgetLayout","widgetIndexLayout","widgetOptions","saveWidgetOnBox","saveResult","widgetCreator","id_box_widget","useWidgetDataHandler","widgetType","defaultData","widgetDataState","useTrackedSelector","setData","isNaN","dataObject","dataValue","Form","isMultiSeries","setMultiSeries","chartSeries","setChartSeries","chartSeriesCount","setChartSeriesCount","checked","multiSeriesCheck","prev","setWidgetUIuseOwnDataField","fontSize","newData","idCount","fieldName","labelName","count","seriesIndex","seriesField","copy","slice","seriesLabel","IconButton","dataFieldName","series","ChartLineIcon","Component","chart","animations","enabled","dynamicAnimation","speed","zoom","autoScaleYaxis","stroke","curve","grid","row","colors","xaxis","range","getTime","subHours","tickPlacement","tickAmount","labels","format","formatter","timestamp","opts","tooltip","noData","text","verticalAlign","offsetX","offsetY","chartOptions","dataChart","setDataChart","setSeries","Array","isArray","widgetEditStatus","widgetIndex","widgetTitle","widgetSubTitle","widgetFieldName","widgetMetricUnit","widgetMaxValue","widgetSlot","widgetSequence","isChoosed","WidgetDataContainer","selectedWidget","widgetsLayout","useOwnDatafield","widgetVariant","createContainer","useTracked","useUpdate","useTrackedState","WidgetFormLabel","WidgetColorPicker","WidgetMinMaxValue","WidgetMetricUnit","WidgetFormOrientation","Tooltip","helperText","arrow","captionText","minValue","parseInt","InputLabelProps","shrink","maxValue","isPickerShow","setPickerShow","hexColor","onFocus","hex","onChangeComplete","isMultiLabel","defaultOrientation","setOrientation","orientation","defaultProps","numOfLabels","WidgetFormOptions","ChartRadialIcon","plotOptions","radialBar","dataLabels","show","hollow","Number","chartData","toFixed","useWidgetControlHandler","setNewData","handleControl","updates","update","getInstance","isConnected","sendData","buttonRoot","success","dark","buttonOn","buttonOff","grey","buttonIcon","isToggleOptions","setToggleOptions","Switch","toggleButton","ButtonIcon","handler","ledRoot","ledOnGreen","ledOff","ledOnRed","ledIcon","LedIcon","alignContent","DisplayIcon","input","textAlign","inputSetpoint","PrettoSlider","withStyles","thumb","border","boxShadow","active","valueLabel","track","rail","Slider","TuneIcon","max","min","valueLabelDisplay","newValue","InputBase","inputProps","mapContainer","sidebar","fontFamily","mapboxgl","accessToken","MapIcon","defaultLong","defaultLat","mapContainerRef","useRef","setZoom","dataLong","dataLat","Map","current","center","addControl","NavigationControl","Marker","setLngLat","addTo","getCenter","lng","lat","getZoom","iconButton","divider","buttonIconAdd","buttonIconMin","buttonIconDisabled","StepperIcon","isLimit","setIsLimit","limitControl","dataControl","Paper","Divider","WidgetsCatalog","ChartLine","ChartRadial","Display","Led","Stepper","AddWidget","dialogOnClose","BoxContainer","isBoxFound","setBoxFound","boxFetchingStatus","getUrlParams","matchPath","pathname","path","exact","strict","fetchBox","uniqueToken","getBox","boxData","params","uniqueBoxToken","SkeletonLoading","ld","Skeleton","EditWidgetForm","handleColorChange","handleValueChange","key","handleSaveButton","updateWidgetBoxSettings","header","flexItem","handleDataValueArray","EditWidgetDrawer","classess","Drawer","anchor","BoxHeader","url","useRouteMatch","thickness","noImage","backgroundImage","NoWidgetImage","backgroundRepeat","backgroundPosition","backgroundSize","NoWidgetFound","EditWidget","indexLayoutWidget","anchorEl","setAnchorEl","setDraft","useSetBoxDraft","useCallback","draft","useDeleteWidget","handleDeleteWidget","deleteWidgetOnBox","handleEditWidget","getWidgetOnBox","widgetAPIData","currentTarget","Menu","keepMounted","TransitionComponent","Fade","WidgetCardContainer","widgetSubtitle","indexWidget","ResponsiveReactGridLayout","WidthProvider","Responsive","WidgetResponsiveGrid","timerOut","allLayoutsState","setAllLayouts","currentBreakpoint","compactType","mounted","testState","setStateTest","setTimeout","dispatchEvent","Event","clearTimeout","initialLayout","layouts","isDraggable","isResizable","sm","xxs","cols","onBreakpointChange","breakpoint","onLayoutChange","currentLayouts","allLayouts","info","measureBeforeMount","useCSSTransforms","preventCollision","l","data-grid","WidgetContainer","updateWidgetLayout","dataUpdate","widgetBoxLayout","updateWidgetBoxLayout","resetWidgetUILayout","setWidgetUILayout","rowHeight","formConnection","formConnectionField","marginBottom","formConnectionTextField","FormBoxName","stateKey","FormDataField","confirmDelete","setConfirmDelete","confirmDeleteFieldName","setConfirmDeleteField","ConfirmDeleteField","onOpenChange","InputProps","endAdornment","InputAdornment","setOpen","handleClose","FormConnection","boxSettingsState","handleConnectionFieldChange","connectionName","FormGroup","toUpperCase","fieldIndex","TabPanel","other","role","hidden","p","a11yProps","background","SettingsTabs","setValue","AppBar","Tabs","indicatorColor","textColor","scrollButtons","Tab","icon","SettingBoxPageContainer","loadAvailableConnectionField","getConnectionList","connectionList","dataList","SettingsHeader","lazy","rootBackgroundCard","ProfileBackgroundImage","codersBackground","userAvatar","borderColor","SignUpPage","firstName","lastName","passwordConfirmation","onRegisterSuccess","onRegisterFailed","fullName","floor","password_confirmation","saveNewUser","handleOnSignUp","accountContainer","accountFieldContainer","accountCardAction","typography","button","FormPassword","activePassword","setActivePassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","visibilityPassword","setVisibilityPassword","handleUpdatePassword","updateUserPassword","FormProfile","Avatar","FormTelegram","setUserTelegramID","visibilityTelegramID","setVisibilityTelegramID","handleUpdateTelegram","updateUserTelegramID","HeaderPage","ListItemLink","ListItem","DrawerMenu","routeGroup","test","routes","isDrawerMenu","reduce","group","Set","groupset","GetRouteGroup","mobile","ListItemIcon","ListItemText","RightMenu","router","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","transformOrigin","mobileMenuId","renderMobileMenu","aria-controls","aria-haspopup","edge","Header","trigger","useScrollTrigger","ElevationScroll","Toolbar","optStyles","disableHysteresis","threshold","cloneElement","whiteColor","content","contentShift","easeOut","paddingBottom","appBarSpacer","dashboard","DashboardImage","ContainerApps","useLocation","BoxImage","offset","setOffset","handleScroll","pageYOffset","addEventListener","removeEventListener","transform","table","BasicTable","boxTrashState","setBoxTrashState","fetchBoxTrash","getBoxTrash","handleRestore","getBoxTrashRestore","handleRemove","getBoxTrashDelete","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","hover","scope","deleteTime","ButtonGroup","animation","colSpan","visibilityContent","setVisbility","getBoxAPI","navigator","clipboard","writeText","boxStatus","Chip","isPrivate","isExact","handleGetUserBox","Suspense","fallback","timer","RoutePage","WithLoginPage","render","loginState","WrappedPage","createMuiTheme","blue","secondary","red","App","store","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","WidgetUISlice","concat","boxWidgetCreator","useBoxSetState","draftUpdater","produce","BoxStateProvider","DashboardSlice","AuthSlice","configureStore","reducer","useReduxSelector","createTrackedSelector","useReduxDispatch"],"mappings":"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","file":"static/js/main.4fa9b952.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\nexport default function Loading({height, width}) {\r\n  return (\r\n    <Skeleton style={{marginTop: 10, width: '100%'}} variant='rect' width={width} height={height} />\r\n  );\r\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface WidgetDataState {\r\n  widgetDataContainer: Object;\r\n}\r\n\r\nconst initialState: WidgetDataState = {\r\n  widgetDataContainer: {},\r\n}\r\n\r\nconst WidgetDataSlice = createSlice({\r\n  name: 'WidgetDataSlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    setWidgetDataContainer: (state, action: PayloadAction<Object>) => {\r\n      state.widgetDataContainer = {...state.widgetDataContainer, ...action.payload};\r\n    },\r\n  },\r\n});\r\n\r\nexport const {setWidgetDataContainer} = WidgetDataSlice.actions\r\nexport default WidgetDataSlice.reducer;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport interface BoxSettingsInitialState {\r\n  connectionsList: string[];\r\n  connectionFields: string[];\r\n}\r\n\r\nexport const initialState: BoxSettingsInitialState = {\r\n  connectionsList: [],\r\n  connectionFields: [],\r\n}\r\n\r\nconst BoxSettingsSlice = createSlice({\r\n  name: 'BoxSettingsSlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    setBoxSettingsConnectionFields: (state, action: PayloadAction<string[]>) => {\r\n      state.connectionFields = action.payload;\r\n    },\r\n    setBoxSettingsConnectionList: (state, action: PayloadAction<string[]>) => {\r\n      state.connectionsList = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\n\r\nexport const {\r\n  setBoxSettingsConnectionFields,\r\n  setBoxSettingsConnectionList\r\n} = BoxSettingsSlice.actions;\r\nexport default BoxSettingsSlice.reducer;\r\n\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ntype Severity = 'error' | 'success' | 'info' | 'warning';\r\n\r\nexport interface AppFetchingMessage {\r\n  message: string;\r\n  severity: Severity;\r\n  isOpen: boolean;\r\n}\r\n\r\n\r\nexport interface AppInitialState {\r\n  shouldBoxRefresh: boolean;\r\n  isDrawerOpen: boolean;\r\n\r\n  //widget\r\n  useOwnDataField: boolean;\r\n\r\n  //fetching\r\n  fetchingStatus: boolean;\r\n  fetchingMessage: AppFetchingMessage;\r\n  shouldRender: boolean;\r\n}\r\n\r\nconst initialState: AppInitialState = {\r\n  shouldBoxRefresh: false,\r\n  isDrawerOpen: true,\r\n  useOwnDataField: false,\r\n  fetchingStatus: false,\r\n  fetchingMessage: {\r\n    message: \"\",\r\n    severity: \"info\",\r\n    isOpen: false,\r\n  },\r\n  shouldRender: false,\r\n};\r\n\r\nconst AppSlice = createSlice({\r\n  name: \"AppSlice\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setDrawerState: (state, action: PayloadAction<boolean>) => {\r\n      state.isDrawerOpen = action.payload;\r\n    },\r\n    setFetchingState: (state, action: PayloadAction<AppFetchingMessage & {fetchingStatus: boolean}>) => {\r\n      state.fetchingMessage = action.payload;\r\n      state.fetchingStatus = action.payload.fetchingStatus;\r\n    },\r\n    setFetchingMessage: (state, action: PayloadAction<AppFetchingMessage>) => {\r\n      state.fetchingMessage = action.payload;\r\n    },\r\n    setFetchingStatus: (state, action: PayloadAction<boolean>) => {\r\n      state.fetchingStatus = action.payload;\r\n    },\r\n    setAppReRender: (state, action: PayloadAction<boolean>) => {\r\n      state.shouldRender = action.payload;\r\n    },\r\n    setBoxShouldRefresh: (state, action: PayloadAction<boolean>) => {\r\n      state.shouldBoxRefresh = action.payload;\r\n    },\r\n    setUseOwnDataField: (state, action: PayloadAction<boolean>) => {\r\n      state.useOwnDataField = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { \r\n  setDrawerState, \r\n  setFetchingState, \r\n  setAppReRender,\r\n  setFetchingMessage,\r\n  setFetchingStatus,\r\n  setBoxShouldRefresh,\r\n} = AppSlice.actions;\r\nexport default AppSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { WritableDraft } from \"immer/dist/internal\";\r\n\r\nexport type datasource = \"datafield\" | \"manual\" | \"\";\r\nexport type orientation = \"horizontal\" | \"vertical\" | \"\";\r\n\r\nexport interface WidgetSelf {\r\n  type: string;\r\n  variant: string;\r\n}\r\n\r\nexport interface WidgetProperties {\r\n  title: string;\r\n  subtitle: string;\r\n  metric?: string;\r\n}\r\n\r\nexport interface WidgetOptions {\r\n  color?: string;\r\n  label?: string | string[];\r\n  minValue?: number;\r\n  maxValue?: number;\r\n  orientation?: orientation;\r\n  isMultiSeries?: boolean;\r\n}\r\n\r\nexport interface WidgetLayout {\r\n  w: number;\r\n  h: number;\r\n  x: number;\r\n  y: number;\r\n  i: string;\r\n  minW: number;\r\n  minH: number;\r\n  moved: boolean;\r\n  static: boolean;\r\n}\r\n\r\nexport interface WidgetData {\r\n  source: datasource;\r\n  value: string | number | string[] | number[];\r\n}\r\n\r\nexport interface Widget {\r\n  data: WidgetData;\r\n  layout: WidgetLayout;\r\n  options: WidgetOptions;\r\n  properties: WidgetProperties;\r\n  self: WidgetSelf;\r\n  widgetId: number;\r\n}\r\n\r\nconst initialState: Widget = {\r\n  data: {\r\n    source: '',\r\n    value: ''\r\n  },\r\n  layout: {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n    minW: 2,\r\n    minH: 9,\r\n    i: '0',\r\n    moved: false,\r\n    static: false,\r\n  },\r\n  options: {},\r\n  properties: {\r\n    title: '',\r\n    subtitle: '',\r\n  },\r\n  self: {\r\n    type: '',\r\n    variant: '',\r\n  },\r\n  widgetId: 0,\r\n};\r\n\r\nconst WidgetSlice = createSlice({\r\n  name: 'WidgetSlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    setWidgetData: (state, action: PayloadAction<WidgetData>) => {\r\n      state.data.source = action.payload.source;\r\n      state.data.value = action.payload.value;\r\n    },\r\n    setWidgetDataSource: (state, action: PayloadAction<datasource>) => {\r\n      state.data.source = action.payload;\r\n    },\r\n    setWidgetDataValue: (state, action: PayloadAction<string | number>) => {\r\n      state.data.value = action.payload;\r\n    },\r\n    setWidgetArrayDataValue: (state, action: PayloadAction<{index: number, value: string | number}>) => {\r\n      state.data.value[action.payload.index] = action.payload.value;\r\n    },\r\n    resetWidgetDataValueArray: (state) => {\r\n      state.data.value = [];\r\n    },\r\n    deleteWidgetArrayDataValue: (state, action: PayloadAction<string | number>) => {\r\n      const arrayState: string[] = state.data.value as string[];\r\n      state.data.value = arrayState.filter(field => field !== action.payload);\r\n    },\r\n    setWidgetLayout: (state, action: PayloadAction<WidgetLayout>) => {\r\n      state.layout.x = action.payload.x;\r\n      state.layout.y = action.payload.y;\r\n      state.layout.w = action.payload.w;\r\n      state.layout.h = action.payload.h;\r\n      state.layout.minW = action.payload.minW;\r\n      state.layout.minH = action.payload.minH;\r\n      state.layout.i = action.payload.i;\r\n    },\r\n    setWidgetOption: <OptionType>(state:WritableDraft<Widget>, action: PayloadAction<OptionType>) => {\r\n      state.options = {...state.options, ...action.payload};\r\n    },\r\n    setWidgetArrayOption: (state, action: PayloadAction<{optionName: string; index: number; value: string | number}>) => {\r\n      state.options[action.payload.optionName][action.payload.index] = action.payload.value;\r\n    },\r\n    resetWidgetOptionArray: (state, action: PayloadAction<{optionName: string;}>) => {\r\n      state.options[action.payload.optionName] = [];\r\n    },\r\n    deleteWidgetArrayOption: (state, action: PayloadAction<{optionName: string; value: string | number}>) => {\r\n      state.options[action.payload.optionName] = state.options[action.payload.optionName].filter(value => value !== action.payload.value);\r\n    },\r\n    setWidgetProperties: (state, action: PayloadAction<WidgetProperties>) => {\r\n      state.properties.title = action.payload.title;\r\n      state.properties.subtitle = action.payload.subtitle;\r\n      state.properties.metric = action.payload.metric;\r\n    },\r\n    setWidgetTitle: (state, action: PayloadAction<string>) => {\r\n      state.properties.title = action.payload;\r\n    },\r\n    setWidgetSubtitle: (state, action: PayloadAction<string>) => {\r\n      state.properties.subtitle = action.payload;\r\n    },\r\n    setWidgetSelf: (state, action: PayloadAction<WidgetSelf>) => {\r\n      state.self.type = action.payload.type;\r\n      state.self.variant = action.payload.variant;\r\n    },\r\n    setWidgetSelfVariant: (state, action: PayloadAction<string>) => {\r\n      state.self.variant = action.payload;\r\n    },\r\n    setWidgetSelfType: (state, action: PayloadAction<string>) => {\r\n      state.self.type = action.payload;\r\n    },\r\n    setWidgetId: (state, action: PayloadAction<number>) => {\r\n      state.widgetId = action.payload;\r\n    },\r\n    resetWidgetSlice: (state) => {\r\n      state = initialState;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setWidgetData,\r\n  setWidgetDataSource,\r\n  setWidgetDataValue,\r\n  setWidgetArrayDataValue,\r\n  resetWidgetDataValueArray,\r\n  deleteWidgetArrayDataValue,\r\n  setWidgetLayout,\r\n  setWidgetOption,\r\n  setWidgetArrayOption,\r\n  resetWidgetOptionArray,\r\n  deleteWidgetArrayOption,\r\n  setWidgetProperties,\r\n  setWidgetTitle,\r\n  setWidgetSubtitle,\r\n  setWidgetSelf,\r\n  setWidgetId,\r\n  setWidgetSelfVariant,\r\n  setWidgetSelfType,\r\n  resetWidgetSlice,\r\n} = WidgetSlice.actions;\r\nexport default WidgetSlice.reducer;","import axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport { COOKIE_LOGIN_STATE } from '../Context/AuthContext';\r\n\r\n// export const API_URL = 'https://api.codersbox.net/api/v2';\r\n// export const CODERSBOX_URL = 'https://api.codersbox.net';\r\n// export const API_URL = 'http://192.168.8.102:8000/api/v2';\r\n// export const CODERSBOX_URL = 'http://192.168.8.102:8000';\r\nexport const API_URL = 'http://54.169.179.39/api/v1';\r\nexport const CODERSBOX_URL = 'http://54.169.179.39';\r\nexport const API_BOX_URL = `${API_URL}/box`;\r\nexport const API_WIDGET_URL = `${API_URL}/widget`;\r\n\r\n// /**\r\n//  *  For same domain connection\r\n//  */\r\n// export const this.http = axios.create({\r\n//   baseURL: CODERSBOX_URL,\r\n//   withCredentials: true,\r\n//   xsrfCookieName: 'XSRF-TOKEN',\r\n//   xsrfHeaderName: 'X-XSRF-TOKEN',\r\n// });\r\n\r\n/**\r\n *  For different domain connection\r\n */\r\n// export const this.http = axios.create({\r\n//   baseURL:CODERSBOX_URL,\r\n//   withCredentials: true,\r\n//   xsrfCookieName: 'XSRF-TOKEN',\r\n//   xsrfHeaderName:'X-XSRF-TOKEN',\r\n//   headers: {\r\n//     'X-Requested-With': 'XMLHttpRequest', \r\n//     'Authorization': 'Bearer 84|709CeMCurIMSWTj5tSVrjvLq4C7FtPeti177jDid',\r\n//   }\r\n// });\r\n\r\nexport function generateCancelToken() {\r\n  return axios.CancelToken.source();\r\n}\r\n\r\nexport default class ApiService {\r\n  constructor(canceltoken) {\r\n    if (canceltoken === undefined) {\r\n      this.canceltoken = generateCancelToken();\r\n    }\r\n    this.canceltoken = canceltoken;\r\n    this.http = axios.create({\r\n      baseURL: CODERSBOX_URL,\r\n      withCredentials: true,\r\n      xsrfCookieName: 'XSRF-TOKEN',\r\n      xsrfHeaderName: 'X-XSRF-TOKEN',\r\n      cancelToken: this.canceltoken.token,\r\n    });\r\n\r\n    this.http.interceptors.response.use(response => response, error => {\r\n      if (error.response?.status === 401) {\r\n        Cookie.remove(COOKIE_LOGIN_STATE, { expires: 1, sameSite: 'Lax' });\r\n        window.location.href = '/login';\r\n        Promise.reject();\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n * \r\n * General\r\n * \r\n */\r\n  fetchAll([...args]) {\r\n    return axios.all([...args]);\r\n  }\r\n\r\n  /**\r\n * \r\n *  GET\r\n * \r\n */\r\n  getBox(token, isWidget = true, canceltoken = '') {\r\n    if (isWidget) {\r\n      return this.http.get(`${API_BOX_URL}/${token}?widgets=1&settings=1`);\r\n    }\r\n    return this.http.get(`${API_BOX_URL}/${token}`);\r\n  }\r\n\r\n  getBoxData(token, withFeed = false, canceltoken = '') {\r\n    if (withFeed) {\r\n      return this.http.get(`${API_BOX_URL}/${token}/data/get?withFeed=${withFeed}`);\r\n    }\r\n    return this.http.get(`${API_BOX_URL}/${token}/data/get`);\r\n  }\r\n\r\n  getBoxSettings(token) {\r\n    return this.http.get(`${API_BOX_URL}/${token}/settings`);\r\n  }\r\n\r\n  getWidgetOnBox(idWidget, token) {\r\n    return this.http.get(`${API_BOX_URL}/${token}/widgets/${idWidget}`)\r\n  }\r\n\r\n  getConnectionList() {\r\n    return this.http.get(`${API_BOX_URL}/connection/list`);\r\n  }\r\n\r\n  getBoxUser() {\r\n    return this.http.get(`${API_BOX_URL}`);\r\n  }\r\n\r\n  getUserCookie() {\r\n    return this.http.get(`${CODERSBOX_URL}/api/set/csrf-cookie`);\r\n  }\r\n\r\n  getCodersProfile(userName) {\r\n    return this.http.get(`${API_URL}/user/coders/${userName}`);\r\n  }\r\n\r\n  getBoxTrash() {\r\n    return this.http.get(`${API_BOX_URL}/trash`);\r\n  }\r\n\r\n  getBoxAPI() {\r\n    return this.http.get(`${API_BOX_URL}/boxapi`);\r\n  }\r\n\r\n  getBoxTrashRestore(boxToken) {\r\n    return this.http.get(`${API_BOX_URL}/${boxToken}/restore`);\r\n  }\r\n\r\n  getBoxDataCodersbox(boxToken) {\r\n    return this.http.get(`${API_BOX_URL}/${boxToken}/data`);\r\n  }\r\n\r\n  getBoxTrashDelete(boxToken, boxDeviceToken) {\r\n    return this.http.get(`${API_BOX_URL}/${boxToken}/${boxDeviceToken}/remove`);\r\n  }\r\n\r\n  userLogout() {\r\n    return this.http.get(`${API_URL}/logout`);\r\n  }\r\n\r\n  /**\r\n * \r\n *  POST\r\n * \r\n */\r\n\r\n  saveWidgetBoxSettings(data, canceltoken = '') {\r\n    return this.http.post(`${API_WIDGET_URL}/box/addnew`, data);\r\n  }\r\n\r\n  saveWidgetOnBox(data, canceltoken = '') {\r\n    return this.http.post(`${API_BOX_URL}/widgets`, data);\r\n  }\r\n\r\n  saveNewBox(data, canceltoken = '') {\r\n    return this.http.post(`${API_BOX_URL}`, data);\r\n  }\r\n\r\n  saveNewUser(data, canceltoken = '') {\r\n    return this.http.post(`${CODERSBOX_URL}/signup`, data);\r\n  }\r\n\r\n  saveDataFromDashboard(boxToken,data) {\r\n    return this.http.post(`${API_BOX_URL}/${boxToken}/data`, data);\r\n  }\r\n\r\n  findUser(data, canceltoken = '') {\r\n    // return this.http.post(`${CODERSBOX_URL}/api/v2/user/login`, data);\r\n    return this.http.post(`${API_URL}/login`, data);\r\n  }\r\n\r\n  userAutoLoginCheck(token, canceltoken = '') {\r\n    return this.http.get(`${API_URL}/usercheck`);\r\n  }\r\n\r\n  /**\r\n   * \r\n   *  UPDATE\r\n   * \r\n   */\r\n  updateBox(token, data, canceltoken = '') {\r\n    return this.http.patch(`${API_BOX_URL}`, data);\r\n  }\r\n\r\n  updateBoxSettings(token, data, canceltoken = '') {\r\n    return this.http.patch(`${API_BOX_URL}/settings`, data);\r\n  }\r\n\r\n  updateWidgetBoxSettings(data, canceltoken = '') {\r\n    return this.http.patch(`${API_BOX_URL}/widgets`, data);\r\n  }\r\n\r\n  updateWidgetBoxLayout(data, canceltoken = '') {\r\n    return this.http.patch(`${API_BOX_URL}/widgets?update=layout`, data);\r\n  }\r\n\r\n  updateWidgetCount(data, cancelToken = '') {\r\n    return this.http.patch(`${API_WIDGET_URL}/user/update`, data);\r\n  }\r\n\r\n  updateUserPassword(data) {\r\n    return this.http.patch(`${API_URL}/users/password`, data);\r\n  }\r\n\r\n  updateUserTelegramID(data) {\r\n    return this.http.patch(`${API_URL}/users/telegram`, data);\r\n  }\r\n\r\n  updateAll([...args]) {\r\n    return axios.all([...args]);\r\n  }\r\n\r\n\r\n  /**\r\n * \r\n *  DELETE\r\n * \r\n */\r\n  deleteWidgetOnBox(idWidget, token) {\r\n    return this.http.delete(`${API_BOX_URL}/${token}/widgets/${idWidget}`);\r\n  }\r\n\r\n  deleteBox(token) {\r\n    return this.http.delete(`${API_BOX_URL}/${token}`);\r\n  }\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface BoxUINewWidgetChoose {\r\n  state: boolean;\r\n  name: string;\r\n}\r\n\r\nexport interface BoxUIInitialState {\r\n  isBoxEditMode: boolean;\r\n  isBoxEditModePrev: boolean;\r\n  isEditWidget: boolean;\r\n  isAddNewWidget: boolean;\r\n  shouldBoxRefresh: boolean;\r\n  isNewWidgetChoosed: BoxUINewWidgetChoose;\r\n}\r\n\r\nexport const initialState: BoxUIInitialState = {\r\n  isBoxEditMode: false,\r\n  isBoxEditModePrev: false,\r\n  isEditWidget: false,\r\n  isAddNewWidget: false,\r\n  shouldBoxRefresh: false,\r\n  isNewWidgetChoosed: {\r\n    state: false,\r\n    name: '',\r\n  },\r\n}\r\n\r\nconst BoxUISlice = createSlice({\r\n  name: 'BoxUISlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    setBoxUIEditMode: (state, action: PayloadAction<boolean>) => {\r\n      state.isBoxEditModePrev = state.isBoxEditMode;\r\n      state.isBoxEditMode = action.payload;\r\n    },\r\n    setBoxUIEditWidget: (state, action: PayloadAction<boolean>) => {\r\n      state.isEditWidget = action.payload;\r\n    },\r\n    setBoxUIAddNewWidget: (state, action: PayloadAction<boolean>) => {\r\n      state.isAddNewWidget = action.payload;\r\n    },\r\n    setBoxUIShouldRefresh: (state, action: PayloadAction<boolean>) => {\r\n      state.shouldBoxRefresh = action.payload;\r\n    },\r\n    setBoxUINewWidgetChoosed: (state, action: PayloadAction<BoxUINewWidgetChoose>) => {\r\n      state.isNewWidgetChoosed.name = action.payload.name;\r\n      state.isNewWidgetChoosed.state = action.payload.state;\r\n    },\r\n    resetBoxUIEditMode: (state) => {\r\n      state.isBoxEditMode = false;\r\n      state.isBoxEditModePrev = false;\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport const {\r\n  setBoxUIAddNewWidget, \r\n  setBoxUIEditMode, \r\n  setBoxUIEditWidget,\r\n  setBoxUIShouldRefresh,\r\n  setBoxUINewWidgetChoosed,\r\n  resetBoxUIEditMode,\r\n} = BoxUISlice.actions;\r\nexport default BoxUISlice.reducer;\r\n\r\n","import ApiService, { generateCancelToken } from '@services/apiService';\r\nimport Cookie from 'js-cookie';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport const COOKIE_LOGIN_STATE = 'codersbox_state';\r\nexport const COOKIE_LOGIN_TOKEN = 'codersbox_session';\r\n\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  userName: '',\r\n  userEmail: '',\r\n  userId: 0,\r\n  authToken: '',\r\n  userTelegramID: 0,\r\n  handleLogout: async () => { },\r\n  handleLogin: async (credentials) => { },\r\n  handleAutoLogin: async () => { },\r\n}\r\n\r\n\r\nexport const AuthContext = React.createContext(initialState);\r\n\r\nexport default function AuthContextProvider(props) {\r\n\r\n  const apiCancelToken = generateCancelToken();\r\n  const api = new ApiService(apiCancelToken);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(() => Boolean(Cookie.get(COOKIE_LOGIN_STATE)));\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userId, setUserId] = useState(0);\r\n  const [userTelegramID, setTelegramID] = useState(0);\r\n  // const [authToken, setAuthToken] = useState(undefined);\r\n\r\n\r\n  /**\r\n   * ---------------------------------\r\n   *  Login Handler\r\n   * ---------------------------------\r\n   *  Set User to Login. If success redirect to dashbox Page.\r\n   * \r\n   * @param {*} credentials \r\n   */\r\n  const handleLogin = async (credentials) => {\r\n    try {\r\n      await api.getUserCookie();\r\n      const response = await api.findUser(credentials);\r\n      const userData = response.data.data;\r\n\r\n      setIsLoggedIn(true);\r\n      setUserName(userData.userName);\r\n      setUserEmail(userData.email);\r\n      setUserId(userData.userId);\r\n      setTelegramID(userData.telegramID);\r\n\r\n\r\n      Cookie.set(COOKIE_LOGIN_STATE, true, { expires: 1, sameSite: 'Lax' });\r\n\r\n    } catch (error) {\r\n      setIsLoggedIn(false);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ---------------------------------\r\n   *  Logout Handler\r\n   * ---------------------------------\r\n   *  Set User to Logout. If success redirect to Login page.\r\n   * \r\n   * @param {*} credentials \r\n   */\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await api.userLogout();\r\n      const userData = response.data.data;\r\n\r\n      Cookie.remove(COOKIE_LOGIN_STATE, { expires: 1, sameSite: 'Lax' });\r\n      Cookie.remove(COOKIE_LOGIN_TOKEN, { expires: 1, sameSite: 'Lax' });\r\n\r\n      setIsLoggedIn(false);\r\n      setUserName('');\r\n      setUserEmail('');\r\n      setUserId(0);\r\n      // setAuthToken('');\r\n      console.log(userData)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ---------------------------------\r\n   *  Auto Login Handler\r\n   * ---------------------------------\r\n   *  Set User to Login If Cookie was set. If success redirect to dashbox Page.\r\n   * \r\n   */\r\n  const handleAutoLogin = async () => {\r\n    try {\r\n      const response = await api.userAutoLoginCheck(Cookie.get(COOKIE_LOGIN_TOKEN));\r\n      const userData = response.data.data;\r\n\r\n      setIsLoggedIn(true);\r\n      setUserName(userData.userName);\r\n      setUserEmail(userData.email);\r\n      setUserId(userData.userId);\r\n      setTelegramID(userData.telegramID);\r\n\r\n      Cookie.set(COOKIE_LOGIN_STATE, true, { expires: 1, sameSite: 'Lax' });\r\n    } catch (error) {\r\n      setIsLoggedIn(false);\r\n      Cookie.remove(COOKIE_LOGIN_STATE, { expires: 1, sameSite: 'Lax' });\r\n      Cookie.remove(COOKIE_LOGIN_TOKEN, { expires: 1, sameSite: 'Lax' });\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (Boolean(Cookie.get(COOKIE_LOGIN_STATE)) === true) {\r\n      handleAutoLogin();\r\n    }\r\n\r\n    if (Boolean(Cookie.get(COOKIE_LOGIN_STATE)) === false && Cookie.get(COOKIE_LOGIN_STATE) !== undefined) {\r\n      handleLogout();\r\n    }\r\n\r\n    return () => apiCancelToken.cancel();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        userName,\r\n        userId,\r\n        userEmail,\r\n        userTelegramID,\r\n        handleLogin,\r\n        handleLogout,\r\n        handleAutoLogin,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Widget } from \"./WidgetSlice\";\r\n\r\nexport interface BoxInitialState {\r\n  boxId: number;\r\n  boxToken: string;\r\n  boxDeviceToken: string;\r\n  boxName: string;\r\n  boxTagName: string;\r\n  boxDescription: string;\r\n  boxActiveStatus: boolean;\r\n  boxSettings: BoxSettings;\r\n  boxWidgets: Widget[];\r\n  createdTime: string;\r\n  updatedTime: string;\r\n}\r\n\r\nexport interface BoxSettings {\r\n  dataField: string[];\r\n  layout: Object;\r\n  activeConnection: string;\r\n  connection: Object;\r\n}\r\n\r\nexport const initialState: BoxInitialState = {\r\n  boxId: 0,\r\n  boxToken: '',\r\n  boxDeviceToken: '',\r\n  boxName: '',\r\n  boxTagName: '',\r\n  boxDescription: '',\r\n  boxActiveStatus: true,\r\n  boxSettings: {\r\n    dataField: [],\r\n    layout: {},\r\n    activeConnection: '',\r\n    connection: {\r\n      mqtt: {\r\n        broker: '',\r\n        subscribeTopic: '',\r\n        publishTopic: '',\r\n        authentication: ''\r\n      },\r\n      firebase: {\r\n        databaseType: '',\r\n        firebaseToken: '',\r\n      },\r\n      codersbox: {\r\n        deviceToken: '',\r\n      }\r\n    }\r\n  },\r\n  boxWidgets: [],\r\n  createdTime: '',\r\n  updatedTime: '',\r\n};\r\n\r\nconst BoxSlice = createSlice({\r\n  name: 'BoxSlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    setBoxId: (state, action: PayloadAction<number>) => {\r\n      state.boxId = action.payload;\r\n    },\r\n    setBoxState: (state, action: PayloadAction<BoxInitialState>) => {\r\n      state.boxId = action.payload.boxId;\r\n      state.boxToken = action.payload.boxToken;\r\n      state.boxDeviceToken = action.payload.boxDeviceToken;\r\n      state.boxName = action.payload.boxName;\r\n      state.boxTagName = action.payload.boxTagName;\r\n      state.boxDescription = action.payload.boxDescription;\r\n      state.boxActiveStatus = action.payload.boxActiveStatus;\r\n      state.boxSettings = action.payload.boxSettings;\r\n      state.boxWidgets = action.payload.boxWidgets;\r\n    },\r\n    setBoxByFieldName: (state, action: PayloadAction<{field: string; value: string;}>) => {\r\n      state[action.payload.field] = action.payload.value;\r\n    },\r\n    addBoxNewDataField: (state) => {\r\n      state.boxSettings.dataField = [...state.boxSettings.dataField, ''];\r\n    },\r\n    setBoxNewDataFieldValue: (state, action:PayloadAction<{index: number; value: string}>) => {\r\n      state.boxSettings.dataField[action.payload.index] = action.payload.value.replace(/ /g,\"_\");\r\n    },\r\n    deleteBoxDataField: (state, action: PayloadAction<string>) => {\r\n      state.boxSettings.dataField = state.boxSettings.dataField.filter(field => field !== action.payload);\r\n    },\r\n    setBoxActiveConnection: (state, action: PayloadAction<string>) => {\r\n      state.boxSettings.activeConnection = action.payload;\r\n    },\r\n    setBoxConnectionProperties: (state, action: PayloadAction<{selectedConnection: string; connectionPropsName: string; value: string;}>) => {\r\n      state.boxSettings.connection[action.payload.selectedConnection][action.payload.connectionPropsName] = action.payload.value;\r\n    },\r\n    addBoxNewWidget: (state, action: PayloadAction<Widget>) => {\r\n      state.boxWidgets = [...state.boxWidgets, action.payload];\r\n    },\r\n    deleteBoxWidgetByIndex: (state, action: PayloadAction<string>) => {\r\n      const localDelete = JSON.parse(String(localStorage.getItem(`boxLayout-${state.boxToken}`))).filter(widget => widget.i !== action.payload);\r\n      localStorage.setItem(`boxLayout-${state.boxToken}`, JSON.stringify(localDelete));\r\n      const index = state.boxWidgets.findIndex(widget => widget.layout.i === action.payload);\r\n      if (index >= 0) state.boxWidgets.splice(index, 1);\r\n    },\r\n    resetBoxSlice: (state) => {\r\n      state = initialState;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setBoxId,\r\n  setBoxState,\r\n  setBoxByFieldName,\r\n  addBoxNewDataField,\r\n  setBoxNewDataFieldValue,\r\n  deleteBoxDataField,\r\n  setBoxActiveConnection,\r\n  setBoxConnectionProperties,\r\n  addBoxNewWidget,\r\n  deleteBoxWidgetByIndex,\r\n  resetBoxSlice\r\n} = BoxSlice.actions;\r\nexport default BoxSlice.reducer;\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { setFetchingState } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React from 'react';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n/**\r\n *\r\n * Giving some alert and snackbar in every event in apps\r\n * especially when user did some data fetch\r\n * \r\n * @returns JSX\r\n */\r\nexport default function AlertBar() {\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    dispatch(\r\n      setFetchingState({\r\n        fetchingStatus: false,\r\n        message: '',\r\n        severity: 'info',\r\n        isOpen: false,\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar open={appState.fetchingMessage.isOpen} autoHideDuration={6000} onClose={handleSnackBar}>\r\n        <Alert onClose={handleSnackBar} severity={appState.fetchingMessage.severity}>\r\n          {appState.fetchingMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={appState.fetchingMessage.isOpen} autoHideDuration={6000} onClose={handleSnackBar}>\r\n        <Alert onClose={handleSnackBar} severity={appState.fetchingMessage.severity}>\r\n          {appState.fetchingMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","export default __webpack_public_path__ + \"static/media/codersbox-white.9dd07551.png\";","export default __webpack_public_path__ + \"static/media/codersbox-original.831d2965.png\";","export default __webpack_public_path__ + \"static/media/codersbox-gray.64a25638.png\";","export default __webpack_public_path__ + \"static/media/originalicon.423e2497.png\";","import { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  // AppBar\r\n  toolbar: {\r\n    backgroundColor: '#1976D2',\r\n  },\r\n  appBarMenuButtonHide: {\r\n    display: 'none',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: 0,\r\n    // width: `calc(100% - ${20}px)`,\r\n    width: `100%`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  // General\r\n\r\n  logoImageSmall: {\r\n    height: '30px',\r\n    marginLeft: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n\r\n  logoImage: {\r\n    height: '60px',\r\n    marginLeft: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n\r\n  logoImageMedium: {\r\n    height: '120px',\r\n    marginLeft: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n\r\n  logoImageLarge: {\r\n    height: '240px',\r\n    marginLeft: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  // Drawer Menu\r\n  drawer: {\r\n    width: 240,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    '& .MuiDrawer-paper': {\r\n      backgroundColor: '#051e34',\r\n      color: 'white',\r\n    }\r\n  },\r\n  drawerDivider: {\r\n    backgroundColor: '#255279',\r\n  },\r\n  drawerDividerTitle: {\r\n    marginLeft: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    color: '#2f79b9',\r\n\r\n  },\r\n  drawerListContainer: {\r\n    '& :hover':{\r\n      backgroundColor: 'rgba(220,25,33,1)' //rgba(220,25,33,1) = #dc1921\r\n    },\r\n  },\r\n  drawerList: {\r\n    '& .MuiListItemIcon-root': {\r\n      color: 'white',\r\n    },\r\n    '& :hover':{\r\n      backgroundColor: 'rgba(220,25,33,0)' //rgba(220,25,33,1) = #dc1921\r\n    },\r\n    color: 'white',\r\n  },\r\n  drawerOpen: {\r\n    width: 240,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  drawerToolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n\r\n  //Drawer Persistent\r\n  drawerPaper: {\r\n    width: 240,\r\n  },\r\n\r\n  //Search Bar & it's input\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      marginLeft: theme.spacing(3),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport brandImageWhite from '../Image/codersbox-white.png';\r\nimport brandImageOriginal from '../Image/codersbox-original.png';\r\nimport brandImageGray from '../Image/codersbox-gray.png';\r\nimport originalBox from '../Image/originalicon.png';\r\nimport useStyles from './Styles';\r\n\r\nexport default function Logo({logoType, logoSize}) {\r\n  const classes = useStyles();\r\n  const sizeConfig = () => {\r\n    switch(logoSize) {\r\n      case 'small':\r\n        return classes.logoImageSmall;\r\n        \r\n      case 'medium':\r\n        return classes.logoImageMedium;\r\n      \r\n      case 'large':\r\n        return classes.logoImageLarge;\r\n\r\n      default:\r\n        return classes.logoImage;\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <React.Fragment>\r\n      {logoType === 'white' ? <img src={brandImageWhite} alt=\"Codersbox-Logo\" className={sizeConfig()} />\r\n        : logoType === 'gray' ? <img src={brandImageGray} alt=\"Codersbox-Logo\" className={sizeConfig()} />\r\n          : logoType === 'boxicon' ? <img src={originalBox} alt=\"Codersbox-Logo\" className={sizeConfig()} />\r\n            : <img src={brandImageOriginal} alt=\"Codersbox-Logo\" className={sizeConfig()} /> }\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useContext, useEffect, useState } from \"react\"; //ini urang tambahin titik koma\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport useStyles from \"./Styles.js\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Logo from \"../../Components/Logo.js\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"@globalContext/AuthContext.js\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Coders box\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const route = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const [loginFetchinStatus, setLoginFetchinStatus] = useState({\r\n    isFetching: false,\r\n    isAlert: false,\r\n    message: \"\",\r\n  });\r\n  const { register, getValues, errors } = useForm({\r\n    mode: \"all\",\r\n    reValidateMode: \"all\",\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      remember: false,\r\n    },\r\n  });\r\n\r\n  /** Handler */\r\n  const handleErrorSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setLoginFetchinStatus({ isFetching: false, isAlert: false, message: \"\" });\r\n  };\r\n\r\n  /**\r\n   *\r\n   *  Login Handler\r\n   */\r\n\r\n  const onLoginSuccess = loginStatus => {\r\n    console.log('Redirecting...')\r\n    setLoginFetchinStatus({ isFetching: false, isAlert: false, message: \"\" });\r\n    route.push('/dashbox');\r\n  };\r\n\r\n  const onLoginFailed = (error) => {\r\n    console.log(error);\r\n    setLoginFetchinStatus({\r\n      isFetching: false,\r\n      isAlert: true,\r\n      message: `Login error, code: ${error.response?.status}`,\r\n    });\r\n  };\r\n\r\n  const onButtonLoginClick = () => {\r\n    let dataUser = {\r\n      email: getValues().email,\r\n      password: getValues().password,\r\n      remember: getValues().remember,\r\n    };\r\n    if (Object.keys(errors).length === 0) {\r\n      setLoginFetchinStatus({ isFetching: true, isAlert: false, message: \"\" });\r\n      auth.handleLogin(dataUser).then(() => onLoginSuccess()).catch(error => onLoginFailed(error));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.isLoggedIn) {\r\n      route.push('/dashbox');\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Logo />\r\n        <form method=\"post\" className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            disabled={loginFetchinStatus.isFetching}\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"You must provide a valid email address!\",\r\n              },\r\n            })}\r\n            error={errors.email}\r\n            className={classes.margin}\r\n          />\r\n          {errors.email && (\r\n            <span className={classes.error}>{errors.email.message}</span>\r\n          )}\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            disabled={loginFetchinStatus.isFetching}\r\n            inputRef={register({\r\n              required: true,\r\n              minLength: {\r\n                value: 8,\r\n                message: \"Your password must be greater than 8 characters\",\r\n              },\r\n            })}\r\n            error={errors.password}\r\n          />\r\n          {errors.password && (\r\n            <span className={classes.error}>{errors.password.message}</span>\r\n          )}\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"primary\" />}\r\n            label=\"Remember me\"\r\n            name=\"remember\"\r\n            inputRef={register}\r\n            disabled={loginFetchinStatus.isFetching}\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => onButtonLoginClick()}\r\n            disabled={loginFetchinStatus.isFetching}\r\n          >\r\n            {loginFetchinStatus.isFetching ? (\r\n              <CircularProgress color=\"primary\" />\r\n            ) : (\r\n              \"Login\"\r\n            )}\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      <Snackbar\r\n        open={loginFetchinStatus.isAlert}\r\n        autoHideDuration={6000}\r\n        onClose={handleErrorSnackBar}\r\n      >\r\n        <Alert onClose={handleErrorSnackBar} severity=\"error\">\r\n          {loginFetchinStatus.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nrequire(\"react-dom\");\r\nwindow.React2 = require(\"react\");\r\nconsole.log(window.React1 === window.React2);\r\n","export default __webpack_public_path__ + \"static/media/cardbox-whiteblue.b86493af.png\";","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteBoxIcon from '@material-ui/icons/Delete';\r\nimport ShareBoxIcon from '@material-ui/icons/Share';\r\nimport ViewBoxIcon from '@material-ui/icons/Visibility';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n/** ICONS */\r\nimport codersLogo from '../../Image/cardbox-whiteblue.png';\r\nimport { deleteUserBox } from './Redux/DashboardSlice';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport default function CardBox({ name, description, boxToken }) {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const dashboardState = useTypedReduxSelector(state => state.dashboardPage);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const handleDeleteBox = () => {\r\n    setIsDeleting(true);\r\n\r\n    api.deleteBox(boxToken)\r\n      .then(() => {\r\n        dispatch(deleteUserBox(boxToken));\r\n      })\r\n      .then(() => {\r\n        setIsDeleting(false);\r\n        setOpenDialog(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setIsDeleting(false);\r\n      })\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if(dashboardState.boxes.length === 0){\r\n        apiCancelToken.cancel('request canceled');\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={codersLogo}\r\n            title={`Codersbox project: ${name}`}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button startIcon={<ShareBoxIcon />} component={Link} to=\"/test\" size=\"small\" color=\"primary\">\r\n            Share\r\n          </Button>\r\n          <Button startIcon={<ViewBoxIcon />} component={Link} to={`/box/${boxToken}`} size=\"small\" color=\"primary\">\r\n            View\r\n          </Button>\r\n          <Button startIcon={<DeleteBoxIcon />} onClick={handleOpenDialog} size=\"small\" color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-delete-box\"\r\n        aria-describedby=\"alert-confirmation-for-delete-box\"\r\n      >\r\n        <DialogTitle id=\"alert-delete-box\">{\"You want to delete this Box?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-confirmation-for-delete-box\">\r\n            Its ok if you want to delete, you can add other box nicely in the next time!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button disabled={isDeleting} onClick={handleCloseDialog} color=\"primary\">\r\n            Wait a minute\r\n          </Button>\r\n          <Button disabled={isDeleting} onClick={() => handleDeleteBox()} color=\"primary\" autoFocus>\r\n            {isDeleting ? <CircularProgress color=\"primary\" /> : 'Delete'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardLoading: {\r\n    backgroundColor: theme.palette.action.disabledBackground,\r\n    height: '100%',\r\n    minHeight: '280px',\r\n  },\r\n  cardLoadingContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  fabQuickAdd: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  quickAddform: {\r\n    flex: 1,\r\n    '& .MuiTextField-root': {\r\n      // margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport useStyles from './Styles';\r\nimport { CircularProgress, Typography } from '@material-ui/core';\r\n\r\nexport default function CardBoxLoading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.cardLoading}>\r\n        <CardContent className={classes.cardLoadingContent}>\r\n          <CircularProgress color={\"primary\"} />\r\n          <Typography component=\"h4\" color=\"textSecondary\">\r\n            Box is making... Wait..\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}","import { AuthContext } from '@globalContext/AuthContext';\r\nimport {\r\n  Button,\r\n  Dialog, DialogActions, DialogContent, DialogContentText,\r\n  DialogTitle, Fab, Grid, TextField, useMediaQuery,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport AddIcons from '@material-ui/icons/Add';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useContext } from 'react';\r\nimport { setAddNewBox, setNewBoxCreator, setUserBoxes } from '../Redux/DashboardSlice';\r\nimport useStyles from './Styles';\r\n\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport function uuidv4() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport default function QuickAddNewBox() {\r\n  const dispatch = useAppDispatch();\r\n  const dashboardState = useTypedReduxSelector(state => state.dashboardPage);\r\n  const login = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const fullscreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const fabHandler = () => {\r\n    dispatch(setAddNewBox(!dashboardState.isAddNewBox));\r\n  }\r\n\r\n  const onCloseHandler = () => {\r\n    dispatch(setAddNewBox(false));\r\n  }\r\n\r\n  const handleAddNewBox = async () => {\r\n\r\n    const dataSave = {\r\n      boxToken: uuidv4(),\r\n      boxName: dashboardState.newBoxCreator.boxName,\r\n      boxTagName: dashboardState.newBoxCreator.boxTagName,\r\n      boxDescription: dashboardState.newBoxCreator.boxDescription,\r\n      boxUserId: login.userUniqueId,\r\n    };\r\n\r\n    try {\r\n      dispatch(setFetchingStatus(true));\r\n      await api.saveNewBox(dataSave);\r\n      \r\n      //Refreshing\r\n      const refresh = await api.getBoxUser();\r\n      let userData = refresh.data.data;\r\n      dispatch(setUserBoxes(userData.boxes));\r\n\r\n      dispatch(setFetchingState({\r\n        message: 'New Box has been created, Congratulation!',\r\n        severity: 'success',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n\r\n    } catch (error) {\r\n      console.error('Add New Box',error);\r\n      dispatch(setFetchingState({\r\n        message: 'Failed while making box!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    };\r\n  }\r\n\r\n  const handleFieldChange = (field, value) => {\r\n    dispatch(setNewBoxCreator({field, value}));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Fab onClick={fabHandler} className={classes.fabQuickAdd} aria-label=\"add\" color=\"secondary\">\r\n        <AddIcons />\r\n      </Fab>\r\n      <Dialog onClose={onCloseHandler} open={dashboardState.isAddNewBox} fullScreen={fullscreen}>\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Add new: Box\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add new box here. Just write your project name and its description. We'll work for you to make it simple. Happy box!\r\n          </DialogContentText>\r\n          <form className={classes.quickAddform}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={12} lg={12}>\r\n                <TextField onBlur={event => handleFieldChange('boxName', event.target.value)} variant=\"outlined\" id=\"standard-basic\" label=\"Box Name\" />\r\n              </Grid>\r\n              <Grid item xs={12} md={12} lg={12}>\r\n                <TextField onBlur={event => handleFieldChange('boxTagName', event.target.value)} variant=\"outlined\" id=\"standard-basic\" label=\"Box Tag Name\" />\r\n              </Grid>\r\n              <Grid item xs={12} md={12} lg={12}>\r\n                <TextField onBlur={event => handleFieldChange('boxDescription', event.target.value)} variant=\"outlined\" multiline rows={4} id=\"standard-basic\" label=\"Box Description\" />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={onCloseHandler} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => {\r\n            handleAddNewBox();\r\n            onCloseHandler();\r\n          }} color=\"primary\" autoFocus>\r\n            Save Box\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}","import { MQTTService } from \"./mqttService\";\r\n\r\nconst hostname = '1d0a4037d8f645b9ab69895b4d041632.s1.eu.hivemq.cloud';\r\nconst port = 8884;\r\n\r\nclass CodersboxService extends MQTTService {\r\n\r\n  constructor() {\r\n    super(hostname, port);\r\n    this.boxToken = '';\r\n    this.setAuth('akun.unduhan21@gmail.com', 'b4ndun9em4ng@Hivemq');\r\n    this.setSSL(true);\r\n    ;\r\n  }\r\n\r\n  setBoxToken(boxToken) {\r\n    this.boxToken = boxToken;\r\n    const publish = `/codersbox/nodemcu/sub/${this.boxToken}`;\r\n    const subscribe = `/codersbox/nodemcu/pub/${this.boxToken}`;\r\n    this.setTopic(publish, subscribe);\r\n  }\r\n\r\n  getInstance()\r\n  {\r\n    return this.client;\r\n  }\r\n}\r\n\r\nexport default CodersboxService;","import Paho from 'paho-mqtt';\r\n\r\nexport class MQTTService {\r\n\r\n\r\n  constructor(hostName, port) {\r\n    this.clientID = this.uuidv4();\r\n    this.client = new Paho.Client(hostName, port, this.clientID);\r\n    this.host = hostName;\r\n    this.port = port;\r\n    this.isSSL = false;\r\n    this.message = {};\r\n    this.topicPub = '';\r\n    this.topicSubs = '';\r\n    this.connectedState = false;\r\n    this.username = '';\r\n    this.password = '';\r\n  }\r\n\r\n  uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n  \r\n\r\n  handleConnectionLost(responseObject) {\r\n    if (responseObject.errorCode !== 0) {\r\n      console.log(\"onConnectionLost:\" + responseObject.errorMessage);\r\n    }\r\n  }\r\n\r\n  handleConnectionConnect() {\r\n    try {\r\n      const options = { qos: 0, onSuccess: function (context) { console.log(\"subscribed\", context); } }\r\n      this.client.subscribe(this.topicSubs, options);\r\n      console.log('MQTT Connected. Client ID = ', this.clientID);\r\n      this.connectedState = true;\r\n    } catch (error) {\r\n      console.log('connection mqtt state false')\r\n      this.connectedState = false;\r\n    }\r\n  }\r\n\r\n  getSubscribe() {\r\n    const options = { qos: 0, onSuccess: function (context) { console.log(\"subscribed\", context); } }\r\n    this.client.subscribe(this.topicSubs, options);\r\n  }\r\n\r\n  close() {\r\n    this.client.disconnect();\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} data \r\n   */\r\n  sendData(data) {\r\n    const message = new Paho.Message(data);\r\n    message.destinationName = this.topicPub;\r\n    message.qos = 1;\r\n    this.client.send(message);\r\n  }\r\n\r\n  setSSL(isSSL) {\r\n    this.isSSL = isSSL;\r\n  }\r\n\r\n\r\n  setTopic(publish, subscribe) {\r\n    this.topicPub = publish;\r\n    this.topicSubs = subscribe;\r\n  }\r\n\r\n  setAuth(username, password) {\r\n    this.username = username;\r\n    this.password = password;\r\n  }\r\n\r\n  handleMessageArived(message) {\r\n    // this.message = JSON.parse(message.payloadString);\r\n    console.log('MQTT ', message.payloadString);\r\n  }\r\n\r\n  getMessage() {\r\n    return this.message;\r\n  }\r\n\r\n  connect() {\r\n    this.client.connect({\r\n      userName: this.username,\r\n      password: this.password,\r\n      useSSL: this.isSSL,\r\n      onSuccess: this.handleConnectionConnect.bind(this)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Function} callback \r\n   */\r\n  handle(callback) {\r\n    this.client.onConnectionLost = this.handleConnectionLost.bind(this);\r\n    this.client.onMessageArrived = callback === undefined ? this.handleMessageArived.bind(this) : (message) => callback(message);\r\n  }\r\n}","import firebase from 'firebase';\r\n\r\nexport function initFirebase(config = null) {\r\n  if(!firebase.apps.length) {\r\n    return firebase.initializeApp(config);\r\n  }\r\n  return firebase.app();\r\n}\r\n\r\nexport function firebaseFireStore(firebaseConfig) {\r\n  const codersboxFirebase = initFirebase(firebaseConfig);\r\n  const db = codersboxFirebase.firestore();\r\n  return db;\r\n}\r\n\r\nexport function firebaseRTDB(firebaseConfig, refDocs) {\r\n  const codersboxFirebase = initFirebase(firebaseConfig);\r\n  const db = codersboxFirebase.database().ref(refDocs);\r\n  return db;\r\n}\r\n","import CodersboxService from '@services/CodersboxService';\r\nimport { firebaseFireStore, firebaseRTDB } from '@services/firebaseService';\r\nimport { setFetchingMessage } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport { useEffect } from 'react';\r\nimport { setWidgetDataContainer } from './Redux/WidgetDataSlice';\r\n\r\nexport const cdbservice = new CodersboxService();\r\n\r\nexport default function BoxConnectionManager() {\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n\r\n  const firebaseConnection = () => {\r\n    if (Object.keys(boxState.boxSettings).length !== 0) {\r\n      const firebaseConfig = JSON.parse(boxState.boxSettings.connection.firebase.firebaseToken);\r\n      const dbtype = boxState.boxSettings.connection.firebase.databaseType;\r\n      if (dbtype === 'rtdb') {\r\n        try {\r\n          const codersboxFirebase = firebaseRTDB(firebaseConfig, boxState.boxToken);\r\n          codersboxFirebase.on('value', snapshot => {\r\n            let widgetData = { ...snapshot.val().data, ...snapshot.val().control };\r\n            dispatch(setWidgetDataContainer(widgetData));\r\n          });\r\n          dispatch(\r\n            setFetchingMessage({\r\n              message: `Connected to firebase RTDB! `,\r\n              severity: 'success',\r\n              isOpen: true,\r\n            })\r\n          );\r\n        }\r\n        catch (error) {\r\n          console.log(error);\r\n          dispatch(\r\n            setFetchingMessage({\r\n              message: `Failed to firebase RTDB! `,\r\n              severity: 'error',\r\n              isOpen: true,\r\n            })\r\n          );\r\n        }\r\n      } else {\r\n        try {\r\n          const codersboxFirebase = firebaseFireStore(firebaseConfig);\r\n          codersboxFirebase.collection(boxState.boxToken).orderBy('create_at', 'desc').limit(1)\r\n            .onSnapshot(doc => {\r\n              // doc.forEach(item => setWidgetState(state => ({ ...state, widgetData: item.data() })));\r\n              dispatch(setFetchingMessage({\r\n                message: `Connected to firebase RTDB! `,\r\n                severity: 'success',\r\n                isOpen: true,\r\n              }));\r\n            });\r\n          dispatch(\r\n            setFetchingMessage({\r\n              message: `Connected to firebase Firestore! `,\r\n              severity: 'success',\r\n              isOpen: true,\r\n            })\r\n          );\r\n        }\r\n        catch (error) {\r\n          console.log(error);\r\n          dispatch(\r\n            setFetchingMessage({\r\n              message: `Failed to firebase Firestore! `,\r\n              severity: 'error',\r\n              isOpen: true,\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const codersboxConnection = () => {\r\n    try {\r\n      cdbservice.setBoxToken(boxState.boxToken);\r\n      cdbservice.connect();\r\n\r\n      dispatch(\r\n        setFetchingMessage({\r\n          message: `Connected with Codersbox! `,\r\n          severity: 'success',\r\n          isOpen: true,\r\n        })\r\n      );\r\n\r\n      cdbservice.handle(message => {\r\n        // console.log('topic subs', JSON.parse(message.payloadString), cdbservice.getInstance().isConnected());\r\n        dispatch(setWidgetDataContainer(JSON.parse(message.payloadString)));\r\n      });\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        setFetchingMessage({\r\n          message: `Failed connect to Codersbox!`,\r\n          severity: 'success',\r\n          isOpen: true,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (boxState.boxSettings.activeConnection) {\r\n      default:\r\n        return;\r\n\r\n      case 'codersbox':\r\n        codersboxConnection();\r\n        break;\r\n\r\n      case 'firebase':\r\n        firebaseConnection();\r\n        break;\r\n\r\n      case 'mqtt':\r\n        // let defaultPort = 8081;\r\n        // let defaultBroker = '';\r\n\r\n        // const getParse = boxState.boxSettings.connection.mqtt.broker.split(\":\");\r\n        // if (getParse[1] !== undefined) {\r\n        //   defaultPort = parseInt(getParse[1]);\r\n        //   defaultBroker = getParse[0];\r\n        // }\r\n        // else {\r\n        //   defaultBroker = boxState.boxSettings.connection.mqtt.broker;\r\n        // }\r\n\r\n        // const mqtt = new MQTTService(\r\n        //   defaultBroker,\r\n        //   defaultPort,\r\n        //   boxState.boxToken,\r\n        //   boxState.boxSettings.connection.mqtt.publishTopic,\r\n        //   boxState.boxSettings.connection.mqtt.subscribeTopic,\r\n        //   false,\r\n        // );\r\n\r\n        // if (mqtt.connectedState) {\r\n        //   console.log('MQTT Connected');\r\n        //   setAppState(state => ({\r\n        //     ...state,\r\n        //     fetchingMessage: {\r\n        //       message: `Connected to ${defaultBroker} on ${defaultPort} `,\r\n        //       severity: 'success',\r\n        //       isOpen: true,\r\n        //     }\r\n        //   }))\r\n        // }\r\n\r\n        // mqtt.handle(message => setWidgetState(\r\n        //   state => ({\r\n        //     ...state,\r\n        //     WidgetDataContainer: JSON.parse(message.payloadString)\r\n        //   })));\r\n        break;\r\n    }\r\n\r\n    return () => {\r\n      if (cdbservice.connectedState) {\r\n        cdbservice.close();\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [boxState.boxSettings.activeConnection]);\r\n\r\n  return null;\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  /** Widget */\r\n  fieldFlex : {\r\n    flex: 1,\r\n    '& .MuiTextField-root': {\r\n      // margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n    '& .MuiSelect-root': {\r\n      // margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n  widgetRoot: {\r\n    height: 'inherit',\r\n  },\r\n  widgetComponentSpacing: {\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  widgetFormEditMargin: {\r\n    maxWidth: 300,\r\n    margin: theme.spacing(3),\r\n  },\r\n  widgetFormEditAppBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n\r\n  widgetFormEditToolbar: {\r\n    width: '100%',\r\n    overflow:'hidden',\r\n  },\r\n\r\n  widgetCatalogCard: {\r\n    flexGrow: 1,\r\n    cursor: 'pointer',\r\n  },\r\n\r\n  widgetCatalogCardChoosed: {\r\n    flexGrow: 1,\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n    minWidth: 240,\r\n    backgroundColor: '#fafafa',\r\n  },\r\n\r\n  /** Dragging */\r\n  dragOn:{\r\n    opacity: 0,\r\n  },\r\n  dragOff: {\r\n    opacity: 1,\r\n  },\r\n\r\n  /** Animation */\r\n  choosedWidget: {\r\n    minHeight: 250,\r\n    transition: theme.transitions.create('height', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  unChoosedWidget: {\r\n    display: 'none',\r\n    transition: theme.transitions.create('height', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    minHeight: 120,\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n\r\n  /** Chart */\r\n  chartRoot: {\r\n    flex: 1,\r\n    minHeight: 200,\r\n    minWidth: 200,\r\n    flexGrow: 1,\r\n  },\r\n\r\n  /** Form Options */\r\n  colorPicker:{\r\n    position: 'absolute',\r\n    zIndex: 100,\r\n    left: 5,\r\n    top: 200\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import { Button, Card, CardActions, CardContent, CardHeader, CircularProgress, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport { addBoxNewWidget } from '@pages/BoxPage/Redux/BoxSlice';\r\nimport { setBoxUINewWidgetChoosed } from '@pages/BoxPage/Redux/BoxUISlice';\r\nimport { resetWidgetSlice, setWidgetDataSource, setWidgetDataValue, setWidgetId, setWidgetLayout, setWidgetSelfVariant, setWidgetSubtitle, setWidgetTitle } from '@pages/BoxPage/Redux/WidgetSlice';\r\nimport { setWidgetIndexLayout } from '@pages/BoxPage/Redux/WidgetUISlice';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport clsx from 'clsx';\r\nimport React, { useEffect } from 'react';\r\nimport useStyles from '../Styles';\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\n/**\r\n * \r\n * @param {string} widgetName\r\n * @param {JSX} FormComponent\r\n * @returns \r\n */\r\nexport const withWidget = (widgetName = '') => FormComponent => WidgetIcon => ({ ...props }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const widgetUIState = useTypedReduxSelector(state => state.widgetUI);\r\n\r\n  const handlewidgetChoosed = () => {\r\n    dispatch(setBoxUINewWidgetChoosed({ state: true, name: widgetName }));\r\n    dispatch(setWidgetId(props.widgetId));\r\n    dispatch(setWidgetSelfVariant(widgetName));\r\n  }\r\n\r\n  //Reset to catalog\r\n  useEffect(() => {\r\n    dispatch(setBoxUINewWidgetChoosed({ state: false, name: '' }));\r\n    return () => dispatch(setBoxUINewWidgetChoosed({ state: false, name: '' }));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={boxUIState.isNewWidgetChoosed.state && boxUIState.isNewWidgetChoosed.name === widgetName ? 12 : 4} lg={boxUIState.isNewWidgetChoosed.state && boxUIState.isNewWidgetChoosed.name === widgetName ? 12 : 4}>\r\n        <Card className={\r\n          boxUIState.isNewWidgetChoosed.state && boxUIState.isNewWidgetChoosed.name === widgetName ?\r\n            classes.widgetCatalogCardChoosed\r\n            : boxUIState.isNewWidgetChoosed.state && boxUIState.isNewWidgetChoosed.name !== widgetName ?\r\n              classes.unChoosedWidget : classes.widgetCatalogCard}>\r\n          {boxUIState.isNewWidgetChoosed.state && boxUIState.isNewWidgetChoosed.name === widgetName ? <CardHeader title=\"Add new widget\" subheader={widgetName} /> : null}\r\n          <CardContent\r\n            className={\r\n              clsx({\r\n                [classes.choosedWidget]: boxUIState.isNewWidgetChoosed.state && boxUIState.isNewWidgetChoosed.name === widgetName,\r\n              })\r\n            }\r\n            onClick={handlewidgetChoosed}>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n              {boxUIState.isNewWidgetChoosed.state && boxUIState.isNewWidgetChoosed.name === widgetName ? (\r\n                <WidgetForm>\r\n                  {FormComponent !== null ? <FormComponent /> : null}\r\n                </WidgetForm>\r\n              )\r\n                : (\r\n                  <React.Fragment>\r\n                    <Grid item xs={12}>\r\n                      <WidgetIcon />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {widgetName}\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                )}\r\n\r\n            </Grid>\r\n          </CardContent>\r\n          {boxUIState.isNewWidgetChoosed.state ? <ChoosedAction type={widgetName} /> : null}\r\n        </Card>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction WidgetForm(props) {\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n  const widgetUIState = useTypedReduxSelector(state => state.widgetUI);\r\n  const classes = useStyles();\r\n\r\n  const handleWidgetTitle = (e) => {\r\n    dispatch(setWidgetTitle(e.target.value));\r\n  }\r\n\r\n  const handleWidgetSubTitle = (e) => {\r\n    dispatch(setWidgetSubtitle(e.target.value));\r\n  }\r\n\r\n  const handleDataSourceSelection = (e) => {\r\n    dispatch(setWidgetDataSource(e.target.value));\r\n  }\r\n\r\n  const handleDataValue = (e) => {\r\n    dispatch(setWidgetDataValue(e.target.value));\r\n  }\r\n\r\n  const generateDefaultWidgetLayout = () => {\r\n    dispatch(setWidgetLayout({\r\n      w: 4,\r\n      h: 6,\r\n      i: Date.now().toString(),\r\n      minW: 2,\r\n      minH: 6,\r\n      x: (boxState.boxWidgets.length * 2) % (boxState.boxCols || 12),\r\n      y: 0,\r\n    }));\r\n    dispatch(setWidgetIndexLayout(Date.now()));\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateDefaultWidgetLayout();\r\n    return () => {\r\n      dispatch(setWidgetId(0));\r\n      dispatch(resetWidgetSlice());\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormControl>\r\n        <form className={classes.fieldFlex}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <TextField required onBlur={handleWidgetTitle} variant=\"outlined\" id=\"widget-title\" label=\"Widget Title\" aria-describedby=\"widget-title-error\" />\r\n              <FormHelperText id=\"widget-title-error\">This field is required</FormHelperText>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <TextField required onBlur={handleWidgetSubTitle} variant=\"outlined\" id=\"widget-subtitle\" label=\"Widget Subtitle\" />\r\n            </Grid>\r\n\r\n\r\n            {/* DataField Section */}\r\n            {!widgetUIState.useOwnDataField &&\r\n              <Grid item xs={12} md={12} lg={12}>\r\n                <FormControl variant=\"outlined\" style={{ minWidth: 220 }}>\r\n                  <InputLabel id=\"data-source-selection-input\">Data Source</InputLabel>\r\n                  <Select\r\n                    labelId=\"data-source-selection\"\r\n                    id=\"data-source-selection\"\r\n                    onChange={handleDataSourceSelection}\r\n                    label=\"Data Source\"\r\n                  >\r\n                    <MenuItem value={null}>\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={'manual'}>\r\n                      <em>Manual</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={'datafield'}>\r\n                      <em>Data Field</em>\r\n                    </MenuItem>\r\n\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl required variant=\"outlined\" style={{ minWidth: 220, marginLeft: 20, display: widgetState.data?.source === 'datafield' ? null : 'none' }}>\r\n                  <InputLabel id=\"widget-data-field-value\">Field Name</InputLabel>\r\n                  <Select\r\n                    labelId=\"field-value-type\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    onChange={handleDataValue}\r\n                    label=\"Field Name\"\r\n                  >\r\n                    {\r\n                      boxState.boxSettings.dataField?.length !== 0 ?\r\n                        boxState.boxSettings.dataField.map((field, i) => (\r\n                          <MenuItem key={i} value={field}>{field}</MenuItem>\r\n                        ))\r\n                        : <MenuItem value={0}><em>None</em></MenuItem>\r\n                    }\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={{ minWidth: 220, marginLeft: 20, display: widgetState.data?.source === 'manual' ? null : 'none' }}>\r\n                  <TextField onBlur={handleDataValue} variant=\"outlined\" id=\"widget-data-manual-value\" label=\"Data Manual Value\" />\r\n                </FormControl>\r\n              </Grid>\r\n            }\r\n            {/* End Of DataField Section */}\r\n\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                Widget options\r\n              </Typography>\r\n            </Grid>\r\n            {/* Optional form goes here */}\r\n            {props.children}\r\n          </Grid>\r\n        </form>\r\n      </FormControl>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nfunction ChoosedAction({ type }) {\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n\r\n  const handleCancelButton = () => {\r\n    dispatch(setBoxUINewWidgetChoosed({state: false, name: ''}));\r\n  }\r\n\r\n  const handleWidgetSave = async () => {\r\n    dispatch(setFetchingStatus(true));\r\n\r\n    try {\r\n      const dataWidget = {\r\n        boxToken: boxState.boxToken,\r\n        widgetUniqueId: widgetState.widgetId,\r\n        widgetProperties: JSON.stringify(widgetState.properties),\r\n        widgetLayout: JSON.stringify(widgetState.layout),\r\n        widgetIndexLayout: `${widgetState.layout.i}`,\r\n        widgetOptions: JSON.stringify(widgetState.options),\r\n        widgetData: JSON.stringify(widgetState.data),\r\n      }\r\n\r\n      const saveResult = await api.saveWidgetOnBox(dataWidget, apiCancelToken);\r\n\r\n      const widgetCreator = {\r\n        data: widgetState.data,\r\n        layout: widgetState.layout,\r\n        options: widgetState.options,\r\n        properties: widgetState.properties,\r\n        self: { type: null, variant: type },\r\n        widgetId: saveResult.data.data.id_box_widget,\r\n      }\r\n\r\n      dispatch(addBoxNewWidget(widgetCreator));\r\n      dispatch(setFetchingState({\r\n        message: 'Congratulations! Widget has been added to your box!',\r\n        severity: 'success',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Add Widget', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Somethings went wrong while adding widget to your box!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CardActions>\r\n        <Button onClick={() => {\r\n          handleWidgetSave();\r\n        }\r\n        } size=\"small\" color=\"primary\">\r\n          {appState.fetchingStatus ? <CircularProgress size={35} /> : 'Save'}\r\n        </Button>\r\n        <Button onClick={() => handleCancelButton()} size=\"small\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </CardActions>\r\n    </React.Fragment>\r\n  );\r\n}","import { useTrackedSelector } from \"@store/Store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { WidgetData, WidgetOptions } from \"../Redux/WidgetSlice\";\r\n\r\nexport default function useWidgetDataHandler(\r\n  widgetType: string,\r\n  widgetData: WidgetData,\r\n  widgetOptions: WidgetOptions,\r\n  widgetId: number,\r\n  defaultData?: number | string\r\n) {\r\n  const widgetDataState = useTrackedSelector().widgetData;\r\n  const [data, setData] = useState<any>(defaultData || 0);\r\n\r\n  //Change Every widgetDataState updated\r\n  useEffect(() => {\r\n    if (widgetData?.source === \"manual\") {\r\n      setData(String(widgetData?.value));\r\n    }\r\n\r\n    if (widgetData?.source === \"datafield\") {\r\n      if (typeof widgetData.value !== \"object\") {\r\n        setData(\r\n          isNaN(widgetDataState.widgetDataContainer[String(widgetData?.value)])\r\n            ? 0\r\n            : widgetDataState.widgetDataContainer[String(widgetData?.value)]\r\n        );\r\n      } else {\r\n        const dataObject: Object = {};\r\n        widgetData?.value.map((dataValue, index) => {\r\n          dataObject[dataValue] = isNaN(\r\n            widgetDataState.widgetDataContainer[String(dataValue)]\r\n          )\r\n            ? 0\r\n            : widgetDataState.widgetDataContainer[String(dataValue)];\r\n        });\r\n        setData(dataObject);\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [widgetDataState.widgetDataContainer]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      `lastData${widgetType}${widgetOptions?.label}-${widgetId}`,\r\n      String(data)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  return [data, setData];\r\n}\r\n","import { withWidget } from '../../AddWidget/AddWidgetProvider';\r\nimport ChartLineComponent from './Component';\r\nimport ChartLineIcon from '@material-ui/icons/ShowChart';\r\nimport ChartLineWidgetForm from './WidgetForm';\r\n\r\nconst ChartLineForm = withWidget('line')(ChartLineWidgetForm)(ChartLineIcon);\r\n\r\nexport default {\r\n  Form: ChartLineForm,\r\n  Component: ChartLineComponent,\r\n}","import { Button, Checkbox, FormControl, FormControlLabel, Grid, IconButton, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport AddIcons from '@material-ui/icons/AddBox';\r\nimport DeleteIcons from '@material-ui/icons/Clear';\r\nimport { deleteWidgetArrayDataValue, deleteWidgetArrayOption, resetWidgetDataValueArray, resetWidgetOptionArray, setWidgetArrayDataValue, setWidgetArrayOption, setWidgetDataSource, setWidgetOption } from '@pages/BoxPage/Redux/WidgetSlice';\r\nimport { setWidgetUIuseOwnDataField } from '@pages/BoxPage/Redux/WidgetUISlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function ChartLineWidgetForm() {\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n  const [isMultiSeries, setMultiSeries] = useState(false);\r\n  const [chartSeries, setChartSeries] = useState([]);\r\n  const [chartSeriesCount, setChartSeriesCount] = useState(0);\r\n\r\n\r\n  const handleWidgetFieldName = (seriesIndex, seriesField) => {\r\n\r\n    setChartSeries(state => {\r\n      let copy = state.slice();\r\n      copy[seriesIndex].dataField = seriesField;\r\n      state = copy;\r\n      return state;\r\n    });\r\n\r\n    dispatch(setWidgetArrayDataValue({\r\n      index: seriesIndex,\r\n      value: seriesField\r\n    }));\r\n  }\r\n\r\n  const handleMultiSeries = multiSeriesCheck => {\r\n    setMultiSeries(prev => prev = !prev);\r\n    dispatch(setWidgetUIuseOwnDataField(!multiSeriesCheck));\r\n    dispatch(setWidgetOption({isMultiSeries: !multiSeriesCheck}));\r\n  }\r\n\r\n  const handleSeriesLabel = (seriesIndex, seriesLabel) => {\r\n\r\n    setChartSeries(state => {\r\n      let copy = state.slice();\r\n      copy[seriesIndex].labelName = seriesLabel;\r\n      state = copy;\r\n      return state;\r\n    });\r\n    dispatch(setWidgetArrayOption({\r\n      optionName: 'label',\r\n      index: seriesIndex,\r\n      value: seriesLabel,\r\n    }));\r\n  }\r\n\r\n  const handleAddNewSeries = () => {\r\n    let newData = {\r\n      idCount: chartSeriesCount,\r\n      dataField: 0,\r\n      fieldName: `Field Series - ${chartSeriesCount}`,\r\n      labelName: `Series ${chartSeriesCount} label`,\r\n    };\r\n    setChartSeriesCount(count => count + 1);\r\n    setChartSeries(state => ([...state, newData]));\r\n  }\r\n\r\n  const handleDeleteSeries = (idCount, dataFieldName, labelName) => {\r\n    setChartSeries(state => state.filter(series => series.idCount !== idCount));\r\n    dispatch(deleteWidgetArrayDataValue(dataFieldName));\r\n    dispatch(deleteWidgetArrayOption({\r\n      optionName: 'label',\r\n      value: labelName\r\n    }));\r\n  }\r\n\r\n\r\n  //set to initial if series data = 0\r\n  useEffect(() => {\r\n    if (chartSeries.length === 0) {\r\n      setChartSeriesCount(0);\r\n      dispatch(setWidgetDataSource(\"datafield\"));\r\n      dispatch(resetWidgetDataValueArray());\r\n      dispatch(resetWidgetOptionArray({ optionName: 'label' }));\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [chartSeries]);\r\n\r\n\r\n  //Set for the first loading\r\n  useEffect(() => {\r\n    dispatch(setWidgetDataSource(\"datafield\"));\r\n    dispatch(resetWidgetDataValueArray());\r\n    dispatch(resetWidgetOptionArray({ optionName: 'label' }));\r\n    dispatch(setWidgetOption({\r\n      isMultiSeries: false\r\n    }));\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isMultiSeries}\r\n              onChange={() => handleMultiSeries(isMultiSeries)}\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Multi Series\"\r\n        />\r\n      </Grid>\r\n      <Grid style={{ display: isMultiSeries ? null : 'none' }} item xs={12} md={12} lg={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ display: isMultiSeries ? null : 'none' }}\r\n          color=\"primary\"\r\n          startIcon={<AddIcons fontSize=\"large\" />}\r\n          onClick={handleAddNewSeries} aria-label=\"Add new series\"\r\n        >\r\n          Add New Data Series\r\n        </Button>\r\n      </Grid>\r\n      {\r\n        isMultiSeries ?\r\n          chartSeries.map((value, index) => (\r\n            <React.Fragment key={index}>\r\n              <Grid container spacing={2} direction=\"row\" style={{ marginTop: 10 }}>\r\n                <Grid item xs={5} md={5} lg={5}>\r\n                  <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                    <InputLabel id=\"field-value-type\">{value.fieldName}</InputLabel>\r\n                    <Select\r\n                      labelId=\"field-value-type\"\r\n                      id={`${widgetState.data.value[index]}-outlined`}\r\n                      value={chartSeries[index].dataField || 0}\r\n                      onChange={e => handleWidgetFieldName(index, e.target.value)}\r\n                      label={value.fieldName}\r\n                    >\r\n                      <MenuItem value={0}>\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      {\r\n                        boxState.boxSettings.dataField?.length !== 0 ?\r\n                          boxState.boxSettings.dataField.map((field, i) => (\r\n                            <MenuItem key={i} value={field}>{field}</MenuItem>\r\n                          ))\r\n                          : <MenuItem value={0}><em>None</em></MenuItem>\r\n                      }\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={5} md={5} lg={5}>\r\n                  <TextField value={widgetState.options?.label[index]} onChange={e => handleSeriesLabel(index, e.target.value)} variant=\"outlined\" id={`series-${value.idCount}-label`} label={value.labelName} />\r\n                </Grid>\r\n                <Grid item xs={2} md={2} lg={2}>\r\n                  <IconButton onClick={() => handleDeleteSeries(value.idCount, widgetState.data.value[index], widgetState.options.label[index])}>\r\n                    <DeleteIcons />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          ))\r\n          :\r\n          null\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}","import useWidgetDataHandler from '@pages/BoxPage/hooks/WidgetDataHandler';\r\nimport format from 'date-fns/format';\r\nimport getTime from 'date-fns/getTime';\r\nimport subHours from 'date-fns/subHours';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n\r\nexport default function ChartLineComponent({ widgetId, widgetProperties, widgetData, widgetOptions }) {\r\n  const [data,] = useWidgetDataHandler('ChartLine', widgetData, widgetOptions, widgetId,[0,0]);\r\n\r\n  const [chartOptions, setChartOptions] = useState({\r\n    chart: {\r\n      id: 'LineChart',\r\n      type: 'line',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'linear',\r\n        dynamicAnimation: {\r\n          speed: 300\r\n        }\r\n      },\r\n      zoom: {\r\n        enabled: true,\r\n        autoScaleYaxis: true\r\n      }\r\n    },\r\n    stroke: {\r\n      curve: 'straight'\r\n    },\r\n    grid: {\r\n      row: {\r\n        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n        opacity: 0.5\r\n      },\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      range: Date.now() - getTime(subHours(Date.now(), 1)),\r\n      tickPlacement: 'on',\r\n      tickAmount: 6,\r\n      labels: {\r\n        format: 'MM yyyy',\r\n        formatter: function (value, timestamp, opts) {\r\n          return format(new Date(timestamp), \"dd LLL | kk:mm:ss\");\r\n        },\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: 'dd MMM yyyy | hh:mm:ss'\r\n      }\r\n    },\r\n    noData: {\r\n      text: 'No Data Available',\r\n      align: 'center',\r\n      verticalAlign: 'middle',\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n    },\r\n\r\n  });\r\n\r\n  const [dataChart, setDataChart] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (widgetData.source === 'datafield' && series.length === 0) {\r\n      if (Array.isArray(widgetData.value) && widgetOptions.isMultiSeries) {\r\n        widgetOptions.label.map((label, index) => {\r\n          let newData = {\r\n            name: label,\r\n            data: [],\r\n          };\r\n\r\n          setDataChart(state => [...state, newData]);\r\n        });\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [widgetOptions]);\r\n\r\n\r\n  useEffect(() => {\r\n    let newData = [];\r\n    if (Array.isArray(widgetData.value) && widgetOptions.isMultiSeries) {\r\n\r\n      widgetOptions.label.map((label, index) => {\r\n        if (dataChart[index]?.name === label) {\r\n          newData[index] = {\r\n            name: label,\r\n            data: [...dataChart[index]?.data, { x: new Date().getTime(), y: data[widgetData.value[index]] }],\r\n          }\r\n          setDataChart(newData);\r\n        }\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setSeries(dataChart);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dataChart]);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactApexChart style={{ marginTop: -40 }} options={chartOptions} series={series} type=\"line\" height={350} width={'100%'} />\r\n    </React.Fragment>\r\n  )\r\n}","import produce from 'immer';\r\nimport { useCallback } from 'react';\r\nimport { useState } from 'react';\r\nimport { createContainer } from 'react-tracked';\r\n\r\nconst initialState = {\r\n  // Widget Editing Resource\r\n  widgetEditStatus: false,\r\n  isAddNewWidget: false,\r\n  widgetIndex: 1,\r\n  widgetUniqueId: 0,\r\n  widgetTitle: '',\r\n  widgetSubTitle: '',\r\n  widgetFieldName: '',\r\n  widgetMetricUnit: '',\r\n  widgetMaxValue: 100,\r\n  widgetSlot: 0,\r\n  widgetSequence: 0,\r\n  widgetOptions: {},\r\n\r\n  //AddWidgetSection\r\n  isChoosed: {\r\n    state: false,\r\n    name: '',\r\n  },\r\n\r\n  //Widget Data Section \r\n  WidgetDataContainer: {},\r\n\r\n  //Widget Container\r\n  selectedWidget: [],\r\n  fetchingMessage: { message: '', severity: '', isOpen: false },\r\n  fetchingStatus: false,\r\n\r\n\r\n  /**\r\n   *  --------------\r\n   *  State based on databox from API\r\n   *  --------------\r\n   */\r\n  widgetId: 0,\r\n  properties: {},\r\n  layout: {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n    minW: 2,\r\n    minH: 9,\r\n    i: 0\r\n  },\r\n  data:{},\r\n  options: {},\r\n  self: {},\r\n\r\n   /**\r\n   *  --------------\r\n   *  State based on widgets from API\r\n   *  --------------\r\n   */\r\n\r\n  widgetIndexLayout: 0,\r\n\r\n  /**\r\n   *  --------------\r\n   *  Derivative state databox from API\r\n   *  --------------\r\n   */\r\n  widgetsLayout: [],\r\n\r\n  useOwnDatafield: false,\r\n\r\n  //self\r\n  widgetType: '',\r\n  widgetVariant: '',\r\n};\r\n\r\nconst useAllWidgetState = () => useState(initialState);\r\n\r\n\r\nexport const {\r\n  Provider: WidgetStateProvider,\r\n  useTracked: useWidgetState,\r\n  useUpdate: useWidgetSetState,\r\n  useTrackedState: useWidgetStateValue,\r\n} = createContainer(useAllWidgetState);\r\n\r\nexport const useSetWidgetDraft = () => {\r\n  const setWidgetState = useWidgetSetState();\r\n  return useCallback(\r\n    (draftUpdater) => {\r\n      setWidgetState(produce(draftUpdater));\r\n    },\r\n    [setWidgetState],\r\n  );\r\n};\r\n","import { FormControl, Grid, InputLabel, MenuItem, Select, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport useStyles from '@pages/BoxPage/Components/Styles';\r\nimport { useWidgetState } from '@pages/BoxPage/Context/widgetContextTracked';\r\nimport { setWidgetOption, setWidgetProperties } from '@pages/BoxPage/Redux/WidgetSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nexport default {\r\n  FormLabel: WidgetFormLabel,\r\n  ColorPicker: WidgetColorPicker,\r\n  MinMaxValue: WidgetMinMaxValue,\r\n  MetricUnit: WidgetMetricUnit,\r\n  Orientation: WidgetFormOrientation,\r\n}\r\n\r\n/**\r\n * Widget Form for determine Min-Max Value range \r\n *  \r\n * \r\n * @param {any} props \r\n * @returns {JSX} React Element\r\n */\r\nfunction WidgetMetricUnit(props) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleMetricChange = (e) => {\r\n    dispatch(\r\n      setWidgetProperties({\r\n        metric: e.target.value,\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <Tooltip title={props.helperText} arrow>\r\n          <TextField onBlur={handleMetricChange} variant=\"outlined\" id=\"widget-metric-unit\" label=\"Widget Metric Unit\" />\r\n        </Tooltip>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWidgetMetricUnit.defaultProps = {\r\n  helperText: 'This could be C for Celcius. Or F for Fahrenheit, or else. Even only percentage'\r\n}\r\n\r\n\r\n/**\r\n * Widget Form for determine Min-Max Value range \r\n *  \r\n * \r\n * @param {any} props \r\n * @returns {JSX} React Element\r\n */\r\nfunction WidgetMinMaxValue(props) {\r\n  const dispatch = useAppDispatch();\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n\r\n  const handleMinValue = (value) => {\r\n    dispatch(\r\n      setWidgetOption({\r\n        minValue: parseInt(value, 10),\r\n      })\r\n    );\r\n  }\r\n\r\n  const handleMaxValue = (value) => {\r\n    dispatch(\r\n      setWidgetOption({\r\n        maxValue: parseInt(value, 10),\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\r\n          {props.captionText}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <FormControl variant=\"outlined\" style={props.style || { minWidth: 220 }}>\r\n          <Tooltip title={props.helperText} arrow>\r\n            <TextField value={widgetState.options?.minValue || null} type=\"number\" onChange={(event) => handleMinValue(event.target.value)} variant=\"outlined\" id=\"minimum-value-range\" label=\"Minimum Value Range\" InputLabelProps={{ shrink: true }} />\r\n          </Tooltip>\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" style={props.style || { minWidth: 220, marginLeft: 20 }}>\r\n          <Tooltip title={props.helperText} arrow>\r\n            <TextField value={widgetState.options?.maxValue || null} type=\"number\" onChange={(event) => handleMaxValue(event.target.value)} variant=\"outlined\" id=\"maximum-value-range\" label=\"Maximum Value Range\" InputLabelProps={{ shrink: true }} />\r\n          </Tooltip>\r\n        </FormControl>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWidgetMinMaxValue.defaultProps = {\r\n  captionText: null,\r\n  style: null,\r\n  helperText: 'This value will be your range value. If widget use percentage to display the value, data value will be re-mapped to this range'\r\n}\r\n\r\n/**\r\n * Widget Form for color change. Especially for background\r\n * \r\n * \r\n * @param {any} props \r\n * @returns {JSX} React Element\r\n */\r\nfunction WidgetColorPicker(props) {\r\n  const dispatch = useAppDispatch();\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n  const [isPickerShow, setPickerShow] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleColorChange = color => {\r\n    dispatch(\r\n      setWidgetOption({\r\n        color: color.hex,\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleColorFieldChange = e => {\r\n    dispatch(\r\n      setWidgetOption({\r\n        color: e.target.value,\r\n      })\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setWidgetOption({\r\n        color: props.hexColor,\r\n      })\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <Tooltip title={props.helperText} arrow>\r\n          <TextField value={widgetState.options?.color || props.hexColor} onChange={handleColorFieldChange} onFocus={() => setPickerShow(true)} variant=\"outlined\" id=\"background-color\" label=\"Background Color\" />\r\n        </Tooltip>\r\n      </Grid>\r\n      {isPickerShow && <SketchPicker\r\n        color={widgetState.options?.color}\r\n        onChange={handleColorChange}\r\n        onChangeComplete={() => setPickerShow(false)}\r\n        className={classes.colorPicker}\r\n      />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWidgetColorPicker.defaultProps = {\r\n  labelName: 'background',\r\n  hexColor: '#ffffff',\r\n  helperText: 'If you want to change background color on widget card panel',\r\n}\r\n\r\n/**\r\n * Widget Form for label. Single or multiple\r\n * \r\n * \r\n * @param {any} props \r\n * @returns {JSX} React Element\r\n */\r\nfunction WidgetFormLabel(props) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleLabelChange = e => {\r\n    dispatch(\r\n      setWidgetOption({\r\n        label: e.target.value,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.isMultiLabel ? null : (\r\n        <Grid item xs={12} md={12} lg={12}>\r\n          <Tooltip title={props.helperText} arrow>\r\n            <TextField onBlur={handleLabelChange} variant=\"outlined\" id=\"label-name\" label=\"Label Name\" />\r\n          </Tooltip>\r\n        </Grid>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWidgetFormLabel.defaultProps = {\r\n  isMultiLabel: false,\r\n  numOfLabels: 1,\r\n  helperText: 'Used for renaming widget that different with field name',\r\n}\r\n\r\n/**\r\n * Widget Form for label. Single or multiple\r\n * \r\n * \r\n * @param {any} props \r\n * @returns {JSX} React Element\r\n */\r\nfunction WidgetFormOrientation(props) {\r\n  const dispatch = useAppDispatch();\r\n  const [defaultOrientation, setOrientation] = useState('horizontal');\r\n\r\n  const handleOrientationChange = e => {\r\n    dispatch(\r\n      setWidgetOption({\r\n        orientation: e.target.value,\r\n      })\r\n    )\r\n    setOrientation(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <FormControl required variant=\"outlined\" style={{ minWidth: 220, width: '100%' }}>\r\n          <InputLabel id=\"widget-orientation\">Widget Orientation</InputLabel>\r\n          <Select\r\n            value={defaultOrientation}\r\n            labelId=\"widget-orientation\"\r\n            id=\"widget-orientation-selection\"\r\n            onChange={handleOrientationChange}\r\n            label=\"Widget Orientation\"\r\n          >\r\n            <MenuItem value={'horizontal'}>Horizontal</MenuItem>\r\n            <MenuItem value={'vertical'}>Vertical</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWidgetFormOrientation.defaultProps = {\r\n  orientation: 'horizontal'\r\n}","import { withWidget } from '../../AddWidget/AddWidgetProvider';\r\nimport ChartRadialIcon from '@material-ui/icons/DataUsage';\r\nimport ChartRadialComponent from './Component';\r\nimport ChartRadialWidgetForm from './WidgetForm';\r\n\r\nconst ChartRadialForm = withWidget('radial')(ChartRadialWidgetForm)(ChartRadialIcon);\r\nexport default {\r\n  Form: ChartRadialForm, \r\n  Component: ChartRadialComponent,\r\n};","import { setWidgetUIuseOwnDataField } from '@pages/BoxPage/Redux/WidgetUISlice';\r\nimport { useAppDispatch } from '@store/Store';\r\nimport React, { useEffect } from 'react';\r\nimport WidgetFormOptions from '../WidgetFormOptions';\r\n\r\nexport default function ChartRadialWidgetForm() {\r\n  const dispatch = useAppDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(setWidgetUIuseOwnDataField(false));\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <WidgetFormOptions.FormLabel />\r\n      <WidgetFormOptions.ColorPicker />\r\n      <WidgetFormOptions.MetricUnit />\r\n      <WidgetFormOptions.MinMaxValue captionText=\"Radial Widget use this values to be remapped from 0% to 100%. For example, if you have 10 as your minimum value, and 60 as your maximum value, so 0% is equal to 10, and 100% is equal to 60.\" />\r\n    </React.Fragment>\r\n  );\r\n}","import { useTrackedSelector } from \"@store/Store\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { WidgetProps } from \"../widgetPropsInterface\";\r\n\r\nexport default function ChartRadialComponent({\r\n  widgetId,\r\n  widgetData,\r\n  widgetOptions,\r\n  widgetProperties\r\n}: WidgetProps) {\r\n  const widgetDataState = useTrackedSelector().widgetData;\r\n  const [chartOptions] = useState({\r\n    chart: {\r\n      id: \"realtimeRadialChart\",\r\n      height: 200,\r\n      type: \"radialBar\",\r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        dataLabels: {\r\n          value: {\r\n            show: true,\r\n            fontSize: \"14px\",\r\n            formatter: function (val) {\r\n              return `${val} ${widgetProperties?.metric}`;\r\n            },\r\n          },\r\n        },\r\n        hollow: {\r\n          size: \"60%\",\r\n        },\r\n      },\r\n    },\r\n    labels: [widgetOptions?.label],\r\n  });\r\n\r\n  const [data, setData] = useState(() => {\r\n    if (\r\n      localStorage.getItem(\r\n        `lastDataChartCircular${widgetOptions?.label}-${widgetId}`\r\n      ) !== \"undefined\" &&\r\n      localStorage.getItem(\r\n        `lastDataChartCircular${widgetOptions?.label}-${widgetId}`\r\n      ) !== null\r\n    ) {\r\n      return [\r\n        (Number(\r\n          localStorage.getItem(\r\n            `lastDataChartCircular${widgetOptions?.label}-${widgetId}`\r\n          )\r\n        ) /\r\n          Number(widgetOptions?.maxValue)) *\r\n          100,\r\n      ];\r\n    }\r\n    return [0];\r\n  });\r\n\r\n  useEffect(() => {\r\n    let chartData = 0;\r\n    if (widgetData.source === \"manual\") {\r\n      chartData =\r\n        (Number(widgetData.value) / Number(widgetOptions.maxValue)) * 100;\r\n      setData([Number(chartData.toFixed(1))]);\r\n    }\r\n\r\n    if (\r\n      widgetData.source === \"datafield\" &&\r\n      Object.keys(widgetDataState.widgetDataContainer).length !== 0\r\n    ) {\r\n      chartData =\r\n        (widgetDataState.widgetDataContainer[String(widgetData.value)] /\r\n          Number(widgetOptions?.maxValue)) *\r\n        100;\r\n      setData([Number(chartData.toFixed(1))]);\r\n    }\r\n\r\n    /** Set Last Data */\r\n    localStorage.setItem(\r\n      `lastDataChartCircular${widgetOptions?.label}-${widgetId}`,\r\n      String(chartData)\r\n    );\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [widgetDataState.widgetDataContainer]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactApexChart\r\n        options={chartOptions}\r\n        series={[data]}\r\n        type=\"radialBar\"\r\n        height={250}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { initFirebase } from '@services/firebaseService';\r\nimport { useTypedReduxSelector } from '@store/Store';\r\nimport { useState } from 'react';\r\nimport { cdbservice } from '../BoxConnectionManager';\r\n\r\nexport default function useWidgetControlHandler(widgetType, widgetData, widgetOptions, widgetId) {\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const [newData, setNewData] = useState(0);\r\n\r\n  const handleControl = e => {\r\n    if (boxState.boxSettings.activeConnection === 'firebase') {\r\n\r\n      if (widgetData.source === 'manual') {\r\n        let updates = {};\r\n        updates[`/control/${widgetType}${widgetId}`] = widgetData.value;\r\n        initFirebase(null).database().ref(boxState.boxToken).update(updates);\r\n        return;\r\n      }\r\n\r\n      if (widgetData.source === 'datafield') {\r\n        let updates = {};\r\n        updates[`/control/${widgetData.value}`] = e;\r\n        initFirebase(null).database().ref(boxState.boxToken).update(updates);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (boxState.boxSettings.activeConnection === 'codersbox') {\r\n      if (widgetData.source === 'datafield') {\r\n        let updates = {};\r\n        updates[widgetData.value] = e;\r\n        if (cdbservice.getInstance().isConnected()) {\r\n          console.log('Connect status = ', cdbservice.getInstance().isConnected());\r\n          console.log('update', updates);\r\n          setNewData(e);\r\n          cdbservice.sendData(JSON.stringify(updates));\r\n        } else {\r\n          console.log('Cannot publish, not connected = ', cdbservice.getInstance().isConnected());\r\n          cdbservice.setBoxToken(boxState.boxToken);\r\n          cdbservice.connect();\r\n        }\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  return { handleControl, newData };\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonRoot: {\r\n    width: 100,\r\n    height: 100,\r\n    backgroundColor: theme.palette.success.main,\r\n    \"&:hover\":{\r\n      backgroundColor: theme.palette.success.dark\r\n    }\r\n  },\r\n  \r\n  buttonOn: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  buttonOff: {\r\n    backgroundColor: theme.palette.grey[300],\r\n  },\r\n  buttonIcon: {\r\n    fontSize: 50,\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import { withWidget } from '../../AddWidget/AddWidgetProvider';\r\nimport ButtonIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport ButtonWidgetComponent from './Component';\r\nimport ButtonWidgetForm from './WidgetForm';\r\n\r\nconst ButtonForm = withWidget('button')(ButtonWidgetForm)(ButtonIcon);\r\nexport default {\r\n  Form: ButtonForm, \r\n  Component: ButtonWidgetComponent\r\n};","import { FormControlLabel, Grid, Switch, Tooltip } from '@material-ui/core';\r\nimport { setWidgetOption } from '@pages/BoxPage/Redux/WidgetSlice';\r\nimport { useAppDispatch } from '@store/Store';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function ButtonWidgetForm() {\r\n  const dispatch = useAppDispatch();\r\n  const [isToggleOptions, setToggleOptions] = useState(true);\r\n\r\n  const handleSwitchToggle = e => {\r\n    setToggleOptions(e.target.checked);\r\n    dispatch(setWidgetOption({\r\n      toggleButton: e.target.checked\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <Tooltip title=\"If this set as true, button \r\n                        will use internal value (true, false) \r\n                        as value that will be sent to your data. Default \r\n                        for this options is true.\r\n                        \">\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={isToggleOptions}\r\n                onChange={handleSwitchToggle}\r\n                name=\"toggleButton\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Set as toggle button\"\r\n          />\r\n        </Tooltip>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import { Grid, IconButton } from '@material-ui/core';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport useWidgetControlHandler from '@pages/BoxPage/hooks/WidgetControlHandler';\r\nimport useWidgetDataHandler from '@pages/BoxPage/hooks/WidgetDataHandler';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport useStyles from './Styles';\r\n\r\nexport default function ButtonWidgetComponent({ widgetId, widgetProperties, widgetData, widgetOptions }) {\r\n  const classes = useStyles();;\r\n  const [data, ] = useWidgetDataHandler('Button',widgetData, widgetOptions, widgetId);\r\n  const handler = useWidgetControlHandler('Button',widgetData, widgetOptions, widgetId);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={() => handler.handleControl(!data)}\r\n            className={clsx(classes.buttonRoot, {\r\n              [classes.buttonOn]: data,\r\n              [classes.buttonOff]: !data,\r\n            })}>\r\n            <PowerSettingsNewIcon className={classes.buttonIcon} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  ledRoot: {\r\n    width: 80,\r\n    height: 80,\r\n    backgroundColor: theme.palette.success.main,\r\n    \"&:hover\":{\r\n      backgroundColor: theme.palette.grey[300],\r\n      cursor: 'auto'\r\n    }\r\n  },\r\n  \r\n  ledOnGreen: {\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  ledOff: {\r\n    backgroundColor: theme.palette.grey[300],\r\n  },\r\n  ledOnRed: {\r\n    backgroundColor: theme.palette.error.main,\r\n  },\r\n  ledIcon: {\r\n    fontSize: 40,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import { withWidget } from '../../AddWidget/AddWidgetProvider';\r\nimport LedIcon from '@material-ui/icons/Brightness1';\r\nimport LedWidgetComponent from './Component';\r\n// import ButtonWidgetForm from './WidgetForm';\r\n\r\nconst LedForm = withWidget('led')(null)(LedIcon);\r\nexport default {\r\n  Form: LedForm, \r\n  Component: LedWidgetComponent\r\n};","import { Grid, IconButton } from '@material-ui/core';\r\nimport useWidgetDataHandler from '@pages/BoxPage/hooks/WidgetDataHandler';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport useStyles from './Styles';\r\n\r\nexport default function LedWidgetComponent({ widgetId, widgetProperties, widgetData, widgetOptions }) {\r\n  const classes = useStyles();;\r\n  const [data,] = useWidgetDataHandler('Led', widgetData, widgetOptions, widgetId);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid spacing={2} container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item justifyContent=\"center\" alignContent=\"center\" xs={6} md={6} lg={6}>\r\n          <IconButton\r\n            className={clsx(classes.ledRoot, {\r\n              [classes.ledOnRed]: !data,\r\n              [classes.ledOff]: data,\r\n            })}>\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item justifyContent=\"center\" alignContent=\"center\" xs={6} md={6} lg={6}>\r\n          <IconButton\r\n            className={clsx(classes.ledRoot, {\r\n              [classes.ledOnGreen]: data,\r\n              [classes.ledOff]: !data,\r\n            })}>\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import DisplayWidgetComponent from './Component';\r\nimport DisplayIcon from '@material-ui/icons/Airplay';\r\nimport DisplayWidgetForm from './WidgetForm';\r\nimport { withWidget } from '../../AddWidget/AddWidgetProvider';\r\n\r\nconst DisplayForm = withWidget('display')(DisplayWidgetForm)(DisplayIcon);\r\n\r\nexport default {\r\n  Form: DisplayForm,\r\n  Component: DisplayWidgetComponent,\r\n};","import React from 'react';\r\nimport WidgetFormOptions from '../WidgetFormOptions';\r\n\r\n\r\nexport default function DisplayWidgetForm() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <WidgetFormOptions.MetricUnit />\r\n    </React.Fragment>\r\n  )\r\n}","import { Grid, Typography } from '@material-ui/core';\r\nimport useWidgetDataHandler from '@pages/BoxPage/hooks/WidgetDataHandler';\r\nimport React from 'react';\r\n\r\nexport default function DisplayWidgetComponent({ widgetId, widgetProperties, widgetData, widgetOptions }) {\r\n  const [data, ] = useWidgetDataHandler('Display', widgetData, widgetOptions, widgetId);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography component=\"p\" variant=\"h2\">\r\n            {data}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography color=\"textSecondary\">\r\n            {widgetProperties.metric}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 40,\r\n    textAlign: 'center'\r\n  },\r\n  inputSetpoint:{\r\n    color: theme.palette.success.dark,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import { Grid, InputBase } from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport useWidgetControlHandler from \"@pages/BoxPage/hooks/WidgetControlHandler\";\r\nimport useWidgetDataHandler from \"@pages/BoxPage/hooks/WidgetDataHandler\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport useStyles from \"./Styles\";\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#52af77\",\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nexport default function SliderWidgetComponent({\r\n  widgetId,\r\n  widgetProperties,\r\n  widgetData,\r\n  widgetOptions,\r\n}) {\r\n  const [data] = useWidgetDataHandler(\r\n    \"Slider\",\r\n    widgetData,\r\n    widgetOptions,\r\n    widgetId,\r\n    0\r\n  );\r\n  const handler = useWidgetControlHandler(\r\n    \"Slider\",\r\n    widgetData,\r\n    widgetOptions,\r\n    widgetId\r\n  );\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <PrettoSlider\r\n          max={Number(widgetOptions?.maxValue)}\r\n          min={Number(widgetOptions?.minValue)}\r\n          orientation={widgetOptions.orientation || \"horizontal\"}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-label=\"codersbox-slider\"\r\n          value={handler.newData}\r\n          onChange={(event, newValue) => handler.handleControl(newValue)}\r\n        />\r\n      </Grid>\r\n      <Grid container item xs={12}>\r\n        <Grid item xs={6}>\r\n          Device Value:\r\n          <InputBase\r\n            className={classes.input}\r\n            inputProps={{ \"aria-label\": \"0\" }}\r\n            value={data}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          Setpoint:\r\n          <InputBase\r\n            className={clsx(classes.input, classes.inputSetpoint)}\r\n            inputProps={{ \"aria-label\": \"0\" }}\r\n            value={handler.newData}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import SliderWidgetComponent from './Component';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport { withWidget } from '../../AddWidget/AddWidgetProvider';\r\nimport SliderWidgetForm from './WidgetForm';\r\n\r\nconst SliderForm = withWidget('slider')(SliderWidgetForm)(TuneIcon);\r\n\r\nexport default {\r\n  Form: SliderForm,\r\n  Component: SliderWidgetComponent,\r\n};","import React from 'react';\r\nimport WidgetFormOptions from '../WidgetFormOptions';\r\n\r\n\r\nexport default function SliderWidgetForm() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <WidgetFormOptions.MinMaxValue />\r\n      <WidgetFormOptions.Orientation />\r\n      <WidgetFormOptions.FormLabel />\r\n    </React.Fragment>\r\n  )\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  mapContainer:{\r\n    minHeight: '400px',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  sidebar:{\r\n    backgroundColor: 'rgba(35, 55, 75, 0.9)',\r\n    color: '#ffffff',\r\n    padding: '6px 12px',\r\n    fontFamily: 'monospace',\r\n    zIndex: 1,\r\n    position: 'absolute',\r\n    top: 100,\r\n    left: 10,\r\n    margin: '12px',\r\n    borderRadius: '4px',\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React, { useEffect, useState, useRef } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport useStyles from './Styles';\r\nimport useWidgetDataHandler from '@pages/BoxPage/hooks/WidgetDataHandler';\r\nmapboxgl.accessToken = \"pk.eyJ1IjoiZGltYXNiZGcyMSIsImEiOiJja3JuaGEyODQxdDhjMm9ydmJtcWxnZnJ0In0.UfDYxhu-L9LP9WqiLcI53g\";\r\n\r\nexport default function MapWidgetComponent({ widgetId, widgetProperties, widgetData, widgetOptions }) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useWidgetDataHandler('Maps', widgetData, widgetOptions, widgetId, [106.8731, -6.1837]);\r\n  const defaultLong = 106.8731;\r\n  const defaultLat = -6.1837;\r\n  const mapContainerRef = useRef(null);\r\n  const [zoom, setZoom] = useState(12.00);\r\n\r\n  // Initialize map when component mounts\r\n  useEffect(() => {\r\n\r\n    let dataLong = data[widgetData.value[0]];\r\n    let dataLat = data[widgetData.value[1]];\r\n\r\n    if(\r\n      (dataLong === undefined && dataLat === undefined)\r\n      || (dataLong === 0 && dataLat === 0)\r\n    ) \r\n    {\r\n      dataLong = defaultLong;\r\n      dataLat = defaultLat;\r\n    }\r\n\r\n    console.log('maps', data);\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [defaultLong, defaultLat],\r\n      zoom: zoom\r\n    });\r\n\r\n    // Add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n\r\n    const marker = new mapboxgl.Marker().setLngLat([dataLong, dataLat]).addTo(map);\r\n\r\n    map.on('move', () => {\r\n      map.getCenter().lng.toFixed(4);\r\n      map.getCenter().lat.toFixed(4);\r\n      setZoom(map.getZoom().toFixed(2));\r\n    });\r\n\r\n    // Clean up on unmount\r\n    return () =>{ \r\n      map.remove();\r\n    };\r\n  }, [data]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.sidebar}>\r\n        Longitude: {data[widgetData.value[0]]} | Latitude: {data[widgetData.value[1]]} | Zoom: {zoom}\r\n      </div>\r\n      <div ref={mapContainerRef} className={classes.mapContainer} />\r\n    </React.Fragment>\r\n  )\r\n}","import MapWidgetComponent from './Component';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport MapWidgetForm from './WidgetForm';\r\nimport { withWidget } from '../../AddWidget/AddWidgetProvider';\r\n\r\nconst MapForm = withWidget('maps')(MapWidgetForm)(MapIcon);\r\n\r\nexport default {\r\n  Form: MapForm,\r\n  Component: MapWidgetComponent,\r\n};","import { FormControl, Grid, TextField, Select, InputLabel, MenuItem } from '@material-ui/core';\r\nimport { useBoxState } from '@pages/BoxPage/Context/boxContextTracked';\r\nimport { useWidgetState } from '@pages/BoxPage/Context/widgetContextTracked';\r\nimport { resetWidgetDataValueArray, resetWidgetOptionArray, setWidgetArrayDataValue, setWidgetDataSource, setWidgetOption } from '@pages/BoxPage/Redux/WidgetSlice';\r\nimport { setWidgetUIuseOwnDataField } from '@pages/BoxPage/Redux/WidgetUISlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\n/**\r\n * Widget Form for label. Single or multiple\r\n * \r\n * \r\n * @param {any} props \r\n * @returns {JSX} React Element\r\n */\r\nexport default function MapWidgetForm(props) {\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n\r\n  const handleDataSourceSelection = (e) => {\r\n    dispatch(setWidgetDataSource(e.target.value));\r\n  }\r\n\r\n  const handleDataValue = (value, index) => {\r\n    dispatch(setWidgetArrayDataValue({\r\n      index: index,\r\n      value: value,\r\n    }));\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setWidgetDataSource(\"datafield\"));\r\n    dispatch(resetWidgetDataValueArray());\r\n    dispatch(resetWidgetOptionArray({optionName: 'label'}));\r\n    dispatch(setWidgetOption({\r\n      isMultiSeries: false,\r\n    }));\r\n    dispatch(setWidgetUIuseOwnDataField(true));\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <FormControl variant=\"outlined\" style={{ minWidth: 220, width: '100%' }}>\r\n          <InputLabel id=\"data-source-selection-input\">Coordinate Data Source</InputLabel>\r\n          <Select\r\n            labelId=\"data-source-selection\"\r\n            id=\"data-source-selection\"\r\n            onChange={handleDataSourceSelection}\r\n            label=\"Coordinate Data Source\"\r\n          >\r\n            <MenuItem value={null}>\r\n              <em>None</em>\r\n            </MenuItem>\r\n            <MenuItem value={'manual'}>\r\n              <em>Manual</em>\r\n            </MenuItem>\r\n            <MenuItem value={'datafield'}>\r\n              <em>Data Field</em>\r\n            </MenuItem>\r\n\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} md={6} lg={6}>\r\n        <FormControl disabled={widgetState.data?.source === undefined} required variant=\"outlined\" style={{ minWidth: 220, display: widgetState.data?.source === 'datafield' ? null : 'none' }}>\r\n          <InputLabel id=\"widget-data-field-value\">Longitude Field Name</InputLabel>\r\n          <Select\r\n            labelId=\"field-value-type\"\r\n            id=\"demo-simple-select-outlined\"\r\n            onChange={event => handleDataValue(event.target.value, 0)}\r\n            label=\"Longitude Field Name\"\r\n          >\r\n            {\r\n              boxState.boxSettings.dataField?.length !== 0 ?\r\n                boxState.boxSettings.dataField.map((field, i) => (\r\n                  <MenuItem key={i} value={field}>{field}</MenuItem>\r\n                ))\r\n                : <MenuItem value={0}><em>None</em></MenuItem>\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" style={{ minWidth: 220, display: widgetState.data?.source === 'manual' ? null : 'none' }}>\r\n          <TextField onBlur={event => handleDataValue(event.target.value, 1)} variant=\"outlined\" id=\"widget-data-manual-value\" label=\"Longitude Manual Value\" />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} md={6} lg={6}>\r\n        <FormControl required variant=\"outlined\" style={{ minWidth: 220, display: widgetState.data?.source === 'datafield' ? null : 'none' }}>\r\n          <InputLabel id=\"widget-data-field-value\">Latitude Field Name</InputLabel>\r\n          <Select\r\n            labelId=\"field-value-type\"\r\n            id=\"demo-simple-select-outlined\"\r\n            onChange={event => handleDataValue(event.target.value, 1)}\r\n            label=\"Latitude Field Name\"\r\n          >\r\n            {\r\n              boxState.boxSettings.dataField?.length !== 0 ?\r\n                boxState.boxSettings.dataField.map((field, i) => (\r\n                  <MenuItem key={i} value={field}>{field}</MenuItem>\r\n                ))\r\n                : <MenuItem value={0}><em>None</em></MenuItem>\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" style={{ minWidth: 220, display: widgetState.data?.source === 'manual' ? null : 'none' }}>\r\n          <TextField onBlur={event => handleDataValue(event.target.value, 1)} variant=\"outlined\" id=\"widget-data-manual-value\" label=\"Latitude Manual Value\" />\r\n        </FormControl>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '4px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 40,\r\n    textAlign: 'center'\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  buttonIcon: {\r\n    fontSize: 50,\r\n  },\r\n  buttonIconAdd: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  buttonIconMin: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  buttonIconDisabled: {\r\n    color: theme.palette.grey[300],\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import { withWidget } from '../../AddWidget/AddWidgetProvider';\r\nimport StepperIcon from '@material-ui/icons/Iso';\r\nimport StepperWidgetComponent from './Component';\r\nimport StepperWidgetForm from './WidgetForm';\r\n\r\nconst StepperForm = withWidget('stepper')(StepperWidgetForm)(StepperIcon);\r\nexport default {\r\n  Form: StepperForm, \r\n  Component: StepperWidgetComponent\r\n};","import { FormControlLabel, Grid, Switch, Tooltip } from '@material-ui/core';\r\nimport { useWidgetState } from '@pages/BoxPage/Context/widgetContextTracked';\r\nimport React, { useState } from 'react';\r\nimport WidgetFormOptions from '../WidgetFormOptions';\r\n\r\nexport default function StepperWidgetForm() {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <WidgetFormOptions.MinMaxValue />\r\n    </React.Fragment>\r\n  );\r\n}","import { Divider, Grid, IconButton, InputBase, Paper } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport useWidgetControlHandler from '@pages/BoxPage/hooks/WidgetControlHandler';\r\nimport useWidgetDataHandler from '@pages/BoxPage/hooks/WidgetDataHandler';\r\nimport clsx from 'clsx';\r\nimport React, { useState } from 'react';\r\nimport useStyles from './Styles';\r\n\r\nexport default function StepperWidgetComponent({ widgetId, widgetProperties, widgetData, widgetOptions }) {\r\n  const classes = useStyles();;\r\n  const [data] = useWidgetDataHandler(\"Stepper\",\r\n    widgetData,\r\n    widgetOptions,\r\n    widgetId,\r\n    0);\r\n  const handler = useWidgetControlHandler('Stepper', widgetData, widgetOptions, widgetId);\r\n  const [isLimit, setIsLimit] = useState([false, false]);\r\n\r\n  const limitControl = (dataControl) => {\r\n    if (dataControl < widgetOptions.minValue) {\r\n      setIsLimit([true, false]);\r\n      return;\r\n    }\r\n\r\n    if (dataControl > widgetOptions.maxValue) {\r\n      setIsLimit([false, true]);\r\n      return;\r\n    }\r\n\r\n    setIsLimit([false, false]);\r\n    handler.handleControl(dataControl);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid spacing={1} container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          Device Value: {data} of {widgetOptions.maxValue}\r\n        </Grid>\r\n        <Grid item justifyContent=\"center\" alignContent=\"center\" >\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <IconButton\r\n              disabled={isLimit[0]}\r\n              onClick={() => limitControl(handler.newData - 1)}\r\n              className={classes.iconButton}>\r\n              <RemoveCircleIcon className={clsx(classes.buttonIcon, {\r\n                [classes.buttonIconMin]: !isLimit[0],\r\n                [classes.buttonIconDisabled]: isLimit[0],\r\n              })} />\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n            <InputBase\r\n              className={classes.input}\r\n              inputProps={{ 'aria-label': '0' }}\r\n              value={handler.newData}\r\n            />\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n            <IconButton\r\n              disabled={isLimit[1]}\r\n              onClick={() => limitControl(handler.newData + 1)}\r\n              className={clsx(classes.iconButton, classes.buttonIconAdd)}>\r\n              <AddCircleIcon className={clsx(classes.buttonIcon, {\r\n                [classes.buttonIconAdd]: !isLimit[1],\r\n                [classes.buttonIconDisabled]: isLimit[1],\r\n              })} />\r\n            </IconButton>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nimport ChartLineWidget from '../widgets/ChartLine';\r\nimport ChartRadialWidget from '../widgets/ChartRadial';\r\nimport ButtonWidget from '../widgets/Button';\r\nimport LedWidget from '../widgets/Led';\r\nimport DisplayWidget from '../widgets/Display';\r\nimport SliderWidget from '../widgets/Slider';\r\nimport MapWidget from '../widgets/Map';\r\nimport StepperWidget from '../widgets/Stepper';\r\n\r\n\r\nexport const choosenWidget = (widgetId, widgetVariant, widgetProperties, widgetData, widgetOptions) => {\r\n\r\n  if (widgetVariant === \"radial\") {\r\n    return <ChartRadialWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n  if (widgetVariant === \"button\") {\r\n    return <ButtonWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n  if (widgetVariant === \"display\") {\r\n    return <DisplayWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n  if (widgetVariant === \"line\") {\r\n    return <ChartLineWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n  if (widgetVariant === \"slider\") {\r\n    return <SliderWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n  if (widgetVariant === \"map\") {\r\n    return <MapWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n  if (widgetVariant === \"led\") {\r\n    return <LedWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n  if (widgetVariant === \"stepper\") {\r\n    return <StepperWidget.Component \r\n                                widgetId={widgetId} \r\n                                widgetData={widgetData} \r\n                                widgetProperties={widgetProperties} \r\n                                widgetOptions={widgetOptions}/>\r\n  }\r\n\r\n}\r\n\r\nexport default function WidgetsCatalog(props) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n      <ChartLineWidget.Form widgetId={2} />\r\n      <ButtonWidget.Form widgetId={5}/>\r\n      <ChartRadialWidget.Form widgetId={4}/>\r\n      <DisplayWidget.Form widgetId={1}/>\r\n      <SliderWidget.Form widgetId={7}/>\r\n      <MapWidget.Form widgetId={8} />\r\n      <LedWidget.Form widgetId={9} />\r\n      <StepperWidget.Form widgetId={10} />\r\n    </Grid>\r\n  );\r\n}","import {\r\n  Button,\r\n  Dialog, DialogActions, DialogContent, DialogContentText,\r\n  DialogTitle, useMediaQuery,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport { setBoxUIAddNewWidget } from '@pages/BoxPage/Redux/BoxUISlice';\r\nimport { setAddNewWidget } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React from 'react';\r\nimport WidgetsCatalog from './AddWidgetsCatalog';\r\n\r\nexport default function AddWidget(props) {\r\n  const theme = useTheme();\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const fullscreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const dialogOnClose = () => {\r\n    dispatch(\r\n      setBoxUIAddNewWidget(false)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog onClose={dialogOnClose} open={boxUIState.isAddNewWidget} fullScreen={fullscreen}>\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Add new: Widget\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add new widget here. Just click and choose your data field. We'll make it for you.\r\n          </DialogContentText>\r\n          {/** Widgets catalogue goes here */}\r\n          <WidgetsCatalog />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={dialogOnClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  )\r\n}","import { Grid, Typography } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setBoxShouldRefresh, setFetchingMessage, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { matchPath } from 'react-router';\r\nimport { setBoxState, initialState } from '../Redux/BoxSlice';\r\nimport { resetBoxUIEditMode, setBoxUIShouldRefresh } from '../Redux/BoxUISlice';\r\n\r\n\r\nexport default function BoxContainer(props) {\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const apiCancelToken = generateCancelToken();\r\n  const api = new ApiService(apiCancelToken);\r\n  const [isBoxFound, setBoxFound] = useState(true);\r\n  const [boxFetchingStatus, setFetchingStatus] = useState(true);\r\n\r\n  const getUrlParams = matchPath(window.location.pathname, {\r\n    path: '/box/:uniqueBoxToken',\r\n    exact: false,\r\n    strict: false,\r\n  });\r\n\r\n  /**\r\n   * Fetching new box data by using its token\r\n   * \r\n   * @param {string} uniqueToken \r\n   * @returns Promise|void\r\n   */\r\n  const fetchBox = async (uniqueToken) => {\r\n    if (uniqueToken === null || uniqueToken === undefined) {\r\n      return Promise.reject();\r\n    }\r\n    // dispatch(setFetchingStatus(true));s\r\n    setFetchingStatus(true);\r\n    try {\r\n      const getBox = await api.getBox(uniqueToken);\r\n      const boxData = getBox.data.data;\r\n      dispatch(\r\n        setBoxState({\r\n          boxId: boxData.boxId,\r\n          boxToken: boxData.boxToken,\r\n          boxDeviceToken: boxData.boxDeviceToken,\r\n          boxName: boxData.boxName,\r\n          boxTagName: boxData.boxTagName,\r\n          boxDescription: boxData.boxDescription,\r\n          boxActiveStatus: boxData.boxActiveStatus,\r\n          boxSettings: boxData.boxSettings,\r\n          boxWidgets: boxData.boxWidgets,\r\n        })\r\n      );\r\n      setBoxFound(true);\r\n      setFetchingStatus(false);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      setBoxFound(false);\r\n      setFetchingStatus(false);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   *  --------------\r\n   *  Get box data based on shouldRefresh\r\n   *  --------------\r\n   */\r\n  useEffect(() => {\r\n    if ((boxUIState.shouldBoxRefresh === true) && (boxUIState.isBoxEditMode === false) && (boxUIState.isBoxEditModePrev === true)) {\r\n      dispatch(setFetchingMessage({\r\n        message: 'Refreshing your dashbox..',\r\n        severity: 'info',\r\n        isOpen: true,\r\n      }));\r\n      fetchBox(boxState.boxToken);\r\n      dispatch(\r\n        setBoxUIShouldRefresh(false)\r\n      );\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [boxUIState.isBoxEditMode]);\r\n\r\n  /**\r\n   *  --------------\r\n   *  On First Loading Reset\r\n   *  when there are some reasons\r\n   *  --------------\r\n   */\r\n  useEffect(() => {\r\n    if (getUrlParams.params.uniqueBoxToken !== undefined) {\r\n      console.log('box fetching..');\r\n      fetchBox(getUrlParams.params.uniqueBoxToken);\r\n    }\r\n\r\n    return () => {\r\n        apiCancelToken.cancel();\r\n        dispatch(resetBoxUIEditMode());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {boxFetchingStatus ? <SkeletonLoading /> : isBoxFound ? props.children :\r\n        <Grid alignContent=\"center\" alignItems=\"center\" justify=\"center\" container spacing={3}>\r\n          <Grid item xs={12} md={12} ld={12}>\r\n            <Typography variant=\"h1\" gutterBottom>\r\n              404\r\n            </Typography>\r\n            <Typography variant=\"h2\" gutterBottom>\r\n              Box Not Found\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction SkeletonLoading() {\r\n  return (\r\n    <React.Fragment>\r\n      <Skeleton height={80} width=\"40%\" />\r\n      <Skeleton height={20} width=\"60%\" />\r\n      <Grid container direction=\"row\" spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Skeleton height={200} width=\"100%\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Skeleton height={200} width=\"100%\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Skeleton height={200} width=\"100%\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Skeleton height={200} width=\"100%\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Skeleton height={200} width=\"100%\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Skeleton height={200} width=\"100%\" />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import { useAppState } from '@globalContext/AppContextTracked';\r\nimport {\r\n  Button, CircularProgress, Divider, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Tooltip\r\n} from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useBoxState } from '@pages/BoxPage/Context/boxContextTracked';\r\nimport { useWidgetState } from '@pages/BoxPage/Context/widgetContextTracked';\r\nimport { resetWidgetSlice, setWidgetArrayDataValue, setWidgetDataSource, setWidgetDataValue, setWidgetOption, setWidgetProperties, setWidgetSubtitle, setWidgetTitle } from '@pages/BoxPage/Redux/WidgetSlice';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport useStyles from '../Styles';\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport default function EditWidgetForm() {\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n  const [isPickerShow, setPickerShow] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleWidgetTitle = (e) => {\r\n    dispatch(setWidgetTitle(e.target.value));\r\n  }\r\n\r\n  const handleWidgetSubTitle = (e) => {\r\n    dispatch(setWidgetSubtitle(e.target.value));\r\n\r\n  }\r\n\r\n  const handleDataSourceSelection = (e) => {\r\n    dispatch(setWidgetDataSource(e.target.value));\r\n  }\r\n\r\n  const handleDataValue = (e) => {\r\n    dispatch(setWidgetDataValue(e.target.value));\r\n  }\r\n\r\n  const handleDataValueArray = (value, index) => {\r\n    dispatch(setWidgetArrayDataValue({\r\n      index: index,\r\n      value: value,\r\n    }));\r\n  }\r\n\r\n  const handleColorChange = (color) => {\r\n    dispatch(setWidgetOption({\r\n      color: color.hex,\r\n    }));\r\n  }\r\n\r\n  const handleValueChange = (value, key) => {\r\n    dispatch(setWidgetOption({\r\n      [key]: parseInt(value, 10)\r\n    }));\r\n  }\r\n\r\n  const handleSaveButton = async () => {\r\n    dispatch(setFetchingStatus(true));\r\n    try {\r\n      let data = {\r\n        boxToken: boxState.boxToken,\r\n        widgetUniqueId: widgetState.widgetId,\r\n        widgetProperties: JSON.stringify(widgetState.properties),\r\n        widgetOptions: JSON.stringify(widgetState.options),\r\n        widgetData: JSON.stringify(widgetState.data),\r\n      }\r\n      const response = await api.updateWidgetBoxSettings(data);\r\n\r\n      if (response.data?.header?.status === 'failed') {\r\n        dispatch(setFetchingState({\r\n          message: 'Something wrong while update your widget! no data returned',\r\n          severity: 'error',\r\n          isOpen: true,\r\n          fetchingStatus: false,\r\n        }));\r\n        return;\r\n      }\r\n      dispatch(setFetchingState({\r\n        message: 'Congratulations! your widget has been updated',\r\n        severity: 'success',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setFetchingState({\r\n        message: 'Something wrong while update your widget!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(resetWidgetSlice());\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className={classes.fieldFlex}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <TextField disabled={appState.fetchingStatus} value={widgetState.properties?.title || 'waiting..'} required onChange={handleWidgetTitle} variant=\"outlined\" id=\"widget-title\" label=\"Widget Title\" aria-describedby=\"widget-title-error\" />\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <TextField disabled={appState.fetchingStatus} value={widgetState.properties?.subtitle || 'waiting..'} required onChange={handleWidgetSubTitle} variant=\"outlined\" id=\"widget-subtitle\" label=\"Widget Subtitle\" />\r\n          </Grid>\r\n          <Divider flexItem style={{ marginTop: 20 }} />\r\n\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <FormControl variant=\"outlined\" style={{ width: '100%', minWidth: 220 }}>\r\n              <InputLabel disabled={appState.fetchingStatus} id=\"data-source-selection-input\">Data Source</InputLabel>\r\n              <Select\r\n                disabled={appState.fetchingStatus}\r\n                labelId=\"data-source-selection\"\r\n                id=\"data-source-selection\"\r\n                onChange={handleDataSourceSelection}\r\n                value={widgetState.data?.source || 'none'}\r\n                label=\"Data Source\"\r\n              >\r\n                <MenuItem value={'none'}>\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={'manual'}>\r\n                  <em>Manual</em>\r\n                </MenuItem>\r\n                <MenuItem value={'datafield'}>\r\n                  <em>Data Field</em>\r\n                </MenuItem>\r\n\r\n              </Select>\r\n            </FormControl>\r\n            {typeof widgetState.data?.value === 'object' ?\r\n              widgetState.data?.value?.map((data, index) => (\r\n                <FormControl required variant=\"outlined\" style={{ width: '100%', marginTop: 20, minWidth: 220, display: widgetState.data?.source === 'datafield' ? null : 'none' }}>\r\n                  <InputLabel disabled={appState.fetchingStatus} id=\"widget-data-field-value\">Field Name</InputLabel>\r\n                  <Select\r\n                    disabled={appState.fetchingStatus}\r\n                    labelId=\"field-value-type\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={widgetState.data?.value[index] || 0}\r\n                    onChange={(event) => handleDataValueArray(event.target.value, index)}\r\n                    label=\"Field Name\"\r\n                  >\r\n                    {\r\n                      boxState.boxSettings.dataField?.length !== 0 ?\r\n                        boxState.boxSettings.dataField.map((field, i) => (\r\n                          <MenuItem key={i} value={field}>{field}</MenuItem>\r\n                        ))\r\n                        : <MenuItem value={0}><em>None</em></MenuItem>\r\n                    }\r\n                  </Select>\r\n                </FormControl>\r\n              )) :\r\n              <FormControl required variant=\"outlined\" style={{ width: '100%', marginTop: 20, minWidth: 220, display: widgetState.data?.source === 'datafield' ? null : 'none' }}>\r\n                <InputLabel disabled={appState.fetchingStatus} id=\"widget-data-field-value\">Field Name</InputLabel>\r\n                <Select\r\n                  disabled={appState.fetchingStatus}\r\n                  labelId=\"field-value-type\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={widgetState.data?.value || 0}\r\n                  onChange={handleDataValue}\r\n                  label=\"Field Name\"\r\n                >\r\n                  {\r\n                    boxState.boxSettings.dataField?.length !== 0 ?\r\n                      boxState.boxSettings.dataField.map((field, i) => (\r\n                        <MenuItem key={i} value={field}>{field}</MenuItem>\r\n                      ))\r\n                      : <MenuItem value={0}><em>None</em></MenuItem>\r\n                  }\r\n                </Select>\r\n              </FormControl>}\r\n            <FormControl variant=\"outlined\" style={{ minWidth: 220, marginTop: 20, width: '100%', display: widgetState.data?.source === 'manual' ? null : 'none' }}>\r\n              <TextField disabled={appState.fetchingStatus} value={widgetState.data?.value || 'waiting...'} onChange={handleDataValue} variant=\"outlined\" id=\"widget-data-manual-value\" label=\"Data Manual Value\" />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <TextField onFocus={() => setPickerShow(true)} disabled={appState.fetchingStatus} value={widgetState.options?.color || 'waiting..'} required onChange={handleColorChange} variant=\"outlined\" id=\"background-color\" label=\"Background Color\" aria-describedby=\"widget-color-error\" />\r\n            {isPickerShow && <SketchPicker\r\n              color={widgetState.options?.color}\r\n              onChange={handleColorChange}\r\n              onChangeComplete={() => setPickerShow(false)}\r\n              className={classes.colorPicker}\r\n            />}\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <FormControl variant=\"outlined\" style={{ minWidth: 220, width: '100%' }}>\r\n              <Tooltip title={\"Minimum limit widget value\"} arrow>\r\n                <TextField value={widgetState.options?.minValue === 0? '0' : widgetState.options?.minValue || null} type=\"number\" onChange={(event) => handleValueChange(event.target.value, \"minValue\")} variant=\"outlined\" id=\"minimum-value-range\" label=\"Minimum Value Range\" InputLabelProps={{ shrink: true }} />\r\n              </Tooltip>\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" style={{ minWidth: 220, width: '100%', marginTop: 20 }}>\r\n              <Tooltip title={\"Maximum limit widget value\"} arrow>\r\n                <TextField value={widgetState.options?.maxValue || null} type=\"number\" onChange={(event) => handleValueChange(event.target.value, \"maxValue\")} variant=\"outlined\" id=\"maximum-value-range\" label=\"Maximum Value Range\" InputLabelProps={{ shrink: true }} />\r\n              </Tooltip>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <input type=\"hidden\" value={boxState.shouldBoxRefresh} />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              style={{ width: '100%' }}\r\n              startIcon={appState.fetchingStatus ? null : <SaveIcon />}\r\n              disabled={appState.fetchingStatus}\r\n              onClick={handleSaveButton}\r\n            >\r\n              {appState.fetchingStatus ? (<CircularProgress color=\"primary\" />) : 'Save'}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}","import { useAppState } from '@globalContext/AppContextTracked';\r\nimport { Drawer, Grid, Typography } from '@material-ui/core';\r\nimport { useWidgetState } from '@pages/BoxPage/Context/widgetContextTracked';\r\nimport { setBoxUIEditWidget } from '@pages/BoxPage/Redux/BoxUISlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useState } from 'react';\r\nimport useStyles from '../Styles';\r\nimport EditWidgetForm from './EditWidgetForm';\r\n\r\n\r\nexport default function EditWidgetDrawer() {\r\n  const dispatch = useAppDispatch();\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n  const classess = useStyles();\r\n\r\n  const onDrawerClose = () => {\r\n    dispatch(setBoxUIEditWidget(false));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer anchor={'right'} open={boxUIState.isEditWidget} onClose={onDrawerClose}>\r\n        <Grid className={classess.widgetFormEditMargin} container direction='column'>\r\n          <Grid item xs={12}>\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Grid container spacing={3} justify=\"space-between\" alignItems=\"center\" direction=\"row\">\r\n                <Grid item xs={8} md={8} lg={10}>\r\n                  <Typography variant=\"h4\" component=\"h2\">\r\n                    Edit Widget\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n                    {widgetState.properties?.title || 'waiting...'}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} md={4} lg={2}>\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <EditWidgetForm />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}","import { useAppStateValue } from '@globalContext/AppContextTracked';\r\nimport { Button, CircularProgress, FormControlLabel, Grid, Switch, Tooltip, Typography, useTheme } from '@material-ui/core';\r\nimport AddIcons from '@material-ui/icons/AddBox';\r\nimport SettingBox from '@material-ui/icons/SettingsApplications';\r\nimport { setAddNewWidget, setBoxEditMode } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useBoxState } from '../Context/boxContextTracked';\r\nimport { useWidgetSetState } from '../Context/widgetContextTracked';\r\nimport { setBoxUIAddNewWidget, setBoxUIEditMode } from '../Redux/BoxUISlice';\r\nimport Loading from './loadingBar';\r\n\r\nexport default function BoxHeader() {\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const { url } = useRouteMatch();\r\n  const theme = useTheme();\r\n\r\n\r\n  const onAddWidgetClick = () => {\r\n    dispatch(\r\n      setBoxUIAddNewWidget(true)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={6} lg={6}>\r\n        <input type=\"hidden\" value={boxState.boxToken} name=\"boxToken\" id=\"boxToken\" />\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          {boxState.boxName === '' ? (<Loading width={400} height={40} />) : boxState.boxName}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n          {boxState.boxTagName === '' ? (<Loading width={300} height={20} />) : boxState.boxTagName}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} lg={6}>\r\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ display: boxUIState.isBoxEditMode ? null : 'none' }}\r\n              color=\"primary\"\r\n              startIcon={<AddIcons fontSize=\"large\" />}\r\n              onClick={onAddWidgetClick} aria-label=\"Add new widget\"\r\n            >\r\n              Add Widget\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ backgroundColor: theme.palette.success.main, color: 'white', display: boxUIState.isBoxEditMode ? null : 'none' }}\r\n              startIcon={<SettingBox fontSize=\"large\" />}\r\n              component={Link}\r\n              to={`${url}/settings`}\r\n              aria-label=\"Box settings\"\r\n            >\r\n              Settings\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <CircularProgress thickness={6} size={30} style={{ display: appState.fetchingStatus ? null : 'none' }} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title={boxUIState.isBoxEditMode ? \"Goes to Online mode\" : \"Goes to Edit mode. Arrange your widget here\"}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch checked={boxUIState.isBoxEditMode}\r\n                    onChange={() => dispatch(setBoxUIEditMode(!boxUIState.isBoxEditMode))}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\" />\r\n                }\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/no-widget.394702f1.svg\";","import { Box, makeStyles } from '@material-ui/core';\r\nimport NoWidgetImage from '@globalImages/no-widget.svg'\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  noImage: {\r\n    backgroundImage: `url(${NoWidgetImage})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: '50% 30%',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    height: '100%',\r\n    top: 20,\r\n    minHeight: 550,\r\n  },\r\n}));\r\n\r\nexport default function NoWidgetFound() {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <Box className={classes.noImage} />\r\n  )\r\n}","import { useAppState } from '@globalContext/AppContextTracked';\r\nimport { Button, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { useDeleteWidget } from '@pages/BoxPage/hooks/useWidgetBoxUtility';\r\nimport { deleteBoxWidgetByIndex } from '@pages/BoxPage/Redux/BoxSlice';\r\nimport { setBoxUIEditWidget } from '@pages/BoxPage/Redux/BoxUISlice';\r\nimport { setWidgetData, setWidgetId, setWidgetOption, setWidgetProperties } from '@pages/BoxPage/Redux/WidgetSlice';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useBoxState } from '../../Context/boxContextTracked';\r\nimport { useWidgetSetState } from '../../Context/widgetContextTracked';\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport default function EditWidget({ idWidget, indexLayoutWidget }) {\r\n  const dispatch = useAppDispatch();\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const open = Boolean(anchorEl);\r\n  const deleteWidgetFromBox = useDeleteWidget(boxState.boxToken);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  }\r\n\r\n  const handleDeleteWidget = async () => {\r\n\r\n    try {\r\n      dispatch(deleteBoxWidgetByIndex(indexLayoutWidget))\r\n      dispatch(setFetchingStatus(true));\r\n\r\n      await api.deleteWidgetOnBox(idWidget, boxState.boxToken);\r\n\r\n      dispatch(setFetchingState({\r\n        message: 'Widget succesfully deleted!',\r\n        severity: 'warning',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n      setOpenDialog(false);\r\n    } catch (error) {\r\n      console.error('Edit Widget', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Something wrong while delete your widget!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n      return;\r\n    }\r\n  }\r\n\r\n  const handleEditWidget = useCallback(async () => {\r\n    dispatch(setFetchingStatus(true));\r\n\r\n    try {\r\n      const response = await api.getWidgetOnBox(idWidget, boxState.boxToken);\r\n      const widgetAPIData = response.data;\r\n\r\n      dispatch(setWidgetId(idWidget));\r\n      dispatch(setWidgetProperties(widgetAPIData.properties));\r\n      dispatch(setWidgetData(widgetAPIData.data));\r\n      dispatch(setWidgetOption(widgetAPIData.options));\r\n      dispatch(setFetchingState({\r\n        message: 'Widget Edit loaded!',\r\n        severity: 'success',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Edit Widget', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Something wrong while take your widget!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n      return;\r\n    }\r\n  }, [idWidget]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton style={{ display: boxUIState.isBoxEditMode ? null : 'none' }} onClick={handleClick} aria-label=\"settings\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <MenuItem onClick={() => {\r\n          dispatch(setBoxUIEditWidget(true));\r\n          handleEditWidget();\r\n        }}>Edit</MenuItem>\r\n        <MenuItem onClick={handleOpenDialog}>Delete</MenuItem>\r\n      </Menu>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-delete-widget\"\r\n        aria-describedby=\"alert-confirmation-for-delete-widget\"\r\n      >\r\n        <DialogTitle id=\"alert-delete-widget\">{\"You want to delete this widget?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-confirmation-for-delete-widget\">\r\n            Its ok if you want to delete, you can add other widget nicely in the next time!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Wait a minute\r\n          </Button>\r\n          <Button onClick={handleDeleteWidget} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","import { useSetBoxDraft } from \"@pages/BoxPage/Context/boxContextTracked\";\r\nimport { useCallback } from \"react\";\r\n\r\n/**\r\n * useAddWidget\r\n * \r\n * Hook for adding widget to box\r\n * \r\n * @returns {React.RefCallback} useCallback\r\n */\r\nexport function useAddWidget() {\r\n  const setDraft = useSetBoxDraft();\r\n  return useCallback((widgetCreator) => {\r\n    setDraft(draft => {\r\n      draft.boxWidgets.push(widgetCreator);\r\n    });\r\n  }, [setDraft]);\r\n}\r\n\r\n\r\n/**\r\n * useAddWidget\r\n * \r\n * Hook for delete widget to box\r\n * \r\n * @param {String} boxToken\r\n * @returns {React.RefCallback} useCallback\r\n */\r\nexport function useDeleteWidget(boxToken) {\r\n  const setDraft = useSetBoxDraft();\r\n  return useCallback((indexLayoutWidget) => {\r\n    setDraft(draft => {\r\n      const localDelete = JSON.parse(localStorage.getItem(`boxLayout-${boxToken}`)).filter(widget => widget.i !== indexLayoutWidget);\r\n      localStorage.setItem(`boxLayout-${boxToken}`, JSON.stringify(localDelete));\r\n      const index = draft.boxWidgets.findIndex(widget => widget.layout.i === indexLayoutWidget);\r\n      if (index >= 0) draft.boxWidgets.splice(index, 1);\r\n    });\r\n  }, [setDraft]);\r\n}","import {\r\n  Card,\r\n  CardContent, CardHeader, Grid\r\n} from \"@material-ui/core\";\r\nimport clsx from 'clsx';\r\nimport React, { useRef } from \"react\";\r\nimport EditWidget from \"../EditWidget/EditWidget\";\r\nimport useStyles from \"../Styles\";\r\n\r\nexport default function WidgetCardContainer(props) {\r\n  const classess = useStyles();\r\n  const { key } = props;\r\n  const ref = useRef(null);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card key={key} ref={ref} style={{ height: '100%', backgroundColor: props.widgetOptions.color}} className={clsx(classess.widgetRoot)}>\r\n        <CardHeader title={props.widgetTitle} subheader={props.widgetSubtitle}\r\n          action={\r\n            <EditWidget indexLayoutWidget={props.indexWidget} idWidget={props.idWidget} title={props.widgetTitle} subtitle={props.widgetSubtitle} />\r\n          } />\r\n        <CardContent>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} md={12} lg={12}>{props.children}</Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWidgetCardContainer.defaultProps = {\r\n  widgetOptions: {}\r\n}\r\n","import { useAppStateValue } from '@globalContext/AppContextTracked';\r\nimport { choosenWidget } from '@pages/BoxPage/Components/AddWidget/AddWidgetsCatalog';\r\nimport { useBoxState } from '@pages/BoxPage/Context/boxContextTracked';\r\nimport { useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport WidgetCardContainer from './WidgetCardContainer';\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nexport default function WidgetResponsiveGrid(props) {\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const timerOut = useRef();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const [allLayoutsState, setAllLayouts] = useState();\r\n  const [testState, setStateTest] = useState({\r\n    currentBreakpoint: \"lg\",\r\n    compactType: \"vertical\",\r\n    mounted: false,\r\n  });\r\n\r\n  const onBreakpointChange = (breakpoint, cols) => {\r\n    setStateTest(prev => ({\r\n      ...prev,\r\n      currentBreakpoint: breakpoint\r\n    }));\r\n  }\r\n\r\n  const handleLayoutChange = (currentLayouts, allLayouts) => {\r\n    localStorage.setItem(`boxLayout-${boxState.boxToken}`, JSON.stringify(currentLayouts));\r\n    localStorage.setItem(`boxLayout-${boxState.boxToken}-allLayouts`, JSON.stringify(allLayouts));\r\n    setAllLayouts(allLayouts);\r\n    console.info('layout change', allLayouts);\r\n  }\r\n\r\n  useEffect(() => {\r\n    timerOut.current = setTimeout(() => window.dispatchEvent(new Event('resize')), 180);\r\n    return () => {\r\n      clearTimeout(timerOut.current);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [appState.isDrawerOpen, props.initialLayout]);\r\n\r\n  useEffect(() => {\r\n    setStateTest(prev => ({ ...prev, mounted: true }));\r\n    return () => {\r\n      clearTimeout(timerOut.current);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ResponsiveReactGridLayout\r\n        {...props}\r\n        className=\"layout\"\r\n        layouts={allLayoutsState}\r\n        isDraggable={boxUIState.isBoxEditMode}\r\n        isResizable={boxUIState.isBoxEditMode}\r\n        breakpoints={{ lg: 1440, md: 1024, sm: 768, xs: 425, xxs: 320 }}\r\n        cols={{ lg: 12, md: 10, sm: 4, xs: 2, xxs: 1 }}\r\n        onBreakpointChange={onBreakpointChange}\r\n        onLayoutChange={handleLayoutChange}\r\n        measureBeforeMount={false}\r\n        useCSSTransforms={testState.mounted}\r\n        compactType={testState.compactType}\r\n        preventCollision={!testState.compactType}\r\n      >\r\n        {props.initialLayout.map((l, i) => (\r\n          <div key={l.i} data-grid={l}>\r\n            <WidgetCardContainer\r\n              idWidget={boxState.boxWidgets[i]?.widgetId}\r\n              indexWidget={l.i}\r\n              widgetTitle={boxState.boxWidgets[i]?.properties.title}\r\n              widgetSubtitle={boxState.boxWidgets[i]?.properties.subtitle}\r\n              widgetOptions={boxState.boxWidgets[i]?.options}>\r\n\r\n              {/* Showing Widget JSX Component */}\r\n              {choosenWidget(\r\n                boxState.boxWidgets[i]?.widgetId,\r\n                boxState.boxWidgets[i]?.self?.variant,\r\n                boxState.boxWidgets[i]?.properties,\r\n                boxState.boxWidgets[i]?.data,\r\n                boxState.boxWidgets[i]?.options,\r\n              )}\r\n            </WidgetCardContainer>\r\n          </div>\r\n        ))}\r\n\r\n      </ResponsiveReactGridLayout>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nWidgetResponsiveGrid.defaultProps = {\r\n  className: \"layout\",\r\n  rowHeight: 30,\r\n  onLayoutChange: function () { },\r\n  cols: { lg: 12, md: 6, sm: 4, xs: 3, xxs: 1 },\r\n};","import { useAppState } from '@globalContext/AppContextTracked';\r\nimport { Grid } from '@material-ui/core';\r\nimport { setBoxUIShouldRefresh } from '@pages/BoxPage/Redux/BoxUISlice';\r\nimport { resetWidgetUILayout, setWidgetUILayout } from '@pages/BoxPage/Redux/WidgetUISlice';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect } from 'react';\r\nimport { useBoxState } from '../../Context/boxContextTracked';\r\nimport { useWidgetState } from '../../Context/widgetContextTracked';\r\nimport BoxHeader from '../boxHeader';\r\nimport NoWidgetFound from './NoWidgetFound';\r\nimport WidgetResponsiveGrid from './WidgetResponsiveGrid';\r\n\r\n/**\r\n * Loading all widget on box happens here.\r\n * \r\n * \r\n * @returns JSX\r\n */\r\nexport default function WidgetContainer() {\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const boxUIState = useTypedReduxSelector(state => state.boxPageUI);\r\n  const widgetUIState = useTypedReduxSelector(state => state.widgetUI);\r\n  const widgetState = useTypedReduxSelector(state => state.widget);\r\n  const apiCancelToken = generateCancelToken();\r\n  const api = new ApiService(apiCancelToken);\r\n\r\n\r\n  /**\r\n   * Update and save into database\r\n   * widget layout that user made\r\n   * \r\n   * \r\n   * @returns Promise\r\n   */\r\n  const updateWidgetLayout = async () => {\r\n\r\n    if (boxState.boxToken === '' && localStorage.getItem(`boxLayout-${boxState.boxToken}`) === null) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    try {\r\n      let dataUpdate = {\r\n        boxToken: boxState.boxToken,\r\n        widgetUniqueId: widgetState.widgetId,\r\n        widgetLayout: localStorage.getItem(`boxLayout-${boxState.boxToken}`) || JSON.stringify({}),\r\n        widgetBoxLayout: localStorage.getItem(`boxLayout-${boxState.boxToken}-allLayouts`) || JSON.stringify({}),\r\n      }\r\n      dispatch(setFetchingStatus(true));\r\n      const updateLayout = await api.updateWidgetBoxLayout(dataUpdate, apiCancelToken);\r\n      if (updateLayout.data.header.status === 'success') {\r\n        dispatch(\r\n          setFetchingState({\r\n            message: 'layout has been saved',\r\n            severity: 'success',\r\n            isOpen: true,\r\n            fetchingStatus: false,\r\n          })\r\n        );\r\n        dispatch(setBoxUIShouldRefresh(true));\r\n\r\n      }\r\n    } catch (error) {\r\n      dispatch(\r\n        setFetchingState({\r\n          message: 'Something went wrong, please try again!',\r\n          severity: 'error',\r\n          isOpen: true,\r\n          fetchingStatus: false,\r\n        })\r\n      );\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  --------------\r\n   *  Set boxWidget state\r\n   *  --------------\r\n   */\r\n  useEffect(() => {\r\n    if (widgetUIState.widgetsLayout.length !== 0) {\r\n      dispatch(resetWidgetUILayout());\r\n    }\r\n\r\n    boxState.boxWidgets.map((widget) => {\r\n      dispatch(setWidgetUILayout(widget.layout));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [boxState.boxWidgets]);\r\n\r\n  /**\r\n   *  --------------\r\n   *  Save layout into database when switch is false\r\n   *  --------------\r\n   */\r\n  useEffect(() => {\r\n    if (!boxUIState.isBoxEditMode) {\r\n      updateWidgetLayout();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [boxUIState.isBoxEditMode]);\r\n\r\n\r\n  /**\r\n   *  --------------\r\n   *  Cleaning up\r\n   *  --------------\r\n   */\r\n  useEffect(() => {\r\n    return () => {\r\n      apiCancelToken.cancel(\"Widget Container\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={1}>\r\n        <BoxHeader />\r\n      </Grid>\r\n      {\r\n        boxState.boxWidgets.length !== 0 && widgetUIState.widgetsLayout.length !== 0 ?\r\n          (\r\n            <WidgetResponsiveGrid initialLayout={widgetUIState.widgetsLayout} />\r\n          )\r\n          : <NoWidgetFound />\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  quickAddform:{\r\n    flex: 1,\r\n    '& .MuiTextField-root': {\r\n      // margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n\r\n  formConnection: {\r\n    width: '100%',\r\n    flex: 1,\r\n    '& .MuiTextField-root': {\r\n      // margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n  formConnectionField: {\r\n    paddingLeft: theme.spacing(3),\r\n    marginTop: 20,\r\n    marginBottom: 20, \r\n  },\r\n  formConnectionTextField: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  \r\n}));\r\n\r\nexport default useStyles;","import { Divider, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { setBoxByFieldName } from '@pages/BoxPage/Redux/BoxSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React from 'react';\r\nimport useStyles from '../Styles';\r\n\r\n\r\n/**\r\n * -------------\r\n * FormBoxName\r\n * -------------\r\n * \r\n * Handle all data about box. Change or new set is come here\r\n * \r\n * @param {any} props \r\n * @returns {JSX} React.Element\r\n */\r\nexport default function FormBoxName(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n\r\n  const handleFieldChange = (value, stateKey) => {\r\n    dispatch(setBoxByFieldName({\r\n      field: stateKey,\r\n      value: value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid item xs={12} md={12} lg={8}>\r\n        <form className={classes.quickAddform}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <TextField \r\n                disabled={appState.fetchingStatus} \r\n                variant=\"outlined\" \r\n                id=\"box-title\" \r\n                label=\"Box Name\" \r\n                value={boxState.boxName} \r\n                onChange={event => handleFieldChange(event.target.value, 'boxName')} />\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <TextField \r\n                disabled={appState.fetchingStatus} \r\n                variant=\"outlined\" \r\n                id=\"box-sub-title\" \r\n                label=\"Box Tag Name\"\r\n                value={boxState.boxTagName} \r\n                onChange={event => handleFieldChange(event.target.value, 'boxTagName')} />\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <TextField \r\n                disabled={appState.fetchingStatus} \r\n                variant=\"outlined\" \r\n                multiline rows={6} \r\n                id=\"box-description\" \r\n                label=\"Box Description\" \r\n                value={boxState.boxDescription} \r\n                onChange={event => handleFieldChange(event.target.value, 'boxDescription')} />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n      <Grid item xs={12} md={12} lg={3}>\r\n        <Typography variant=\"h6\" component=\"h6\">\r\n          Box Name\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"h4\" color=\"textSecondary\">\r\n          Write your box name there. Make some words that easy to be remembered\r\n        </Typography>\r\n        <br />\r\n        <Typography variant=\"h6\" component=\"h6\">\r\n          Box Description\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"h4\" color=\"textSecondary\">\r\n          Describe your box here. Let them know that you could make some cool stuff with codersbox!\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, Grid, IconButton, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport AddIcons from '@material-ui/icons/AddBox';\r\nimport DeleteIcons from '@material-ui/icons/Clear';\r\nimport { useBoxState } from '@pages/BoxPage/Context/boxContextTracked';\r\nimport { addBoxNewDataField, deleteBoxDataField, setBoxNewDataFieldValue } from '@pages/BoxPage/Redux/BoxSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useStyles from '../Styles';\r\n\r\n\r\n/**\r\n * ---------\r\n * FormDataField\r\n * ---------\r\n * \r\n * Provide Form Data for editing data fields that used on widget\r\n * \r\n * @returns {JSX.Element} React Component \r\n */\r\nexport default function FormDataField() {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n  const [confirmDeleteFieldName, setConfirmDeleteField] = useState(undefined);\r\n  \r\n\r\n  const handleAddNewDataField = e => {\r\n    if (Object.keys(boxState.boxSettings).length !== 0) {\r\n      if (boxState.boxSettings.dataField.length <= 10) {\r\n        dispatch(addBoxNewDataField());\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOnChange = (value, index) => {\r\n    if (Object.keys(boxState.boxSettings).length !== 0) {\r\n      dispatch(setBoxNewDataFieldValue({\r\n        index: index,\r\n        value:value,\r\n      }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <ConfirmDeleteField onOpenChange={value =>setConfirmDelete(value)} fieldName={confirmDeleteFieldName} isOpen={confirmDelete} />\r\n      <Grid item xs={12} md={12} lg={3}>\r\n        <Typography variant=\"h6\" component=\"h6\">\r\n          Data Field\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"h4\" color=\"textSecondary\">\r\n          Tell us what data field's name that you wanna show on our widget. Like <i>'temperature', 'humidity'</i> or else. Or, add new one if it necessary. Dont use whitespace instead.\r\n          Codersbox will trim all white space. <br /> e.g: <br /> <b><i>ambient temp = ambienttemp</i></b>\r\n        </Typography>\r\n        <br />\r\n        <Divider orientation=\"horizontal\" />\r\n        <Button onClick={handleAddNewDataField}>\r\n          <AddIcons />&nbsp;Add New Field\r\n        </Button>\r\n      </Grid>\r\n      <Divider orientation=\"vertical\" flexItem />\r\n      <Grid item xs={12} md={12} lg={8}>\r\n        <form className={classes.quickAddform}>\r\n          <Grid container spacing={3}>\r\n            {Object.keys(boxState.boxSettings).length !== 0 ?\r\n              boxState.boxSettings.dataField.length !== 0 ?\r\n                boxState.boxSettings.dataField.map((field, i) => (\r\n                  <Grid key={i} item xs={12} md={12} lg={12}>\r\n                    <TextField\r\n                      disabled={appState.fetchingStatus}\r\n                      variant=\"outlined\" id={`data-field-${field}`}\r\n                      label={`Data Field ${i+1}`}\r\n                      value={field}\r\n                      InputProps={{\r\n                        endAdornment: <InputAdornment position=\"end\">\r\n                          <IconButton onClick={() => {\r\n                            setConfirmDeleteField(field);\r\n                            setConfirmDelete(true);\r\n                            }}>\r\n                            <DeleteIcons />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }}\r\n                      onChange={event => handleOnChange(event.target.value, i)}/>\r\n                  </Grid>\r\n                )) : (\r\n                  <Grid alignContent=\"center\" item xs={12} md={12} lg={12}>\r\n                    <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\">\r\n                      No Data Field Available here\r\n                    </Typography>\r\n                  </Grid>\r\n                ) : (\r\n                <Grid alignContent=\"center\" item xs={12} md={12} lg={12}>\r\n                  <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\">\r\n                    Failed\r\n                    </Typography>\r\n                </Grid>\r\n              )}\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/**\r\n * ----------\r\n * ConfirmDeleteField\r\n * ----------\r\n * \r\n * Provide Dialog to confirm that user want to delete their field\r\n * \r\n * @param {{onOpenChange: function, isOpen: Boolean, fieldName: String}} props \r\n * @returns {JSX.Element} Dialog Component\r\n */\r\nfunction ConfirmDeleteField(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onOpenChange(false);\r\n  }\r\n\r\n  const handleDeleteDataField = value => {\r\n    if (Object.keys(boxState.boxSettings).length !== 0) {\r\n      if (boxState.boxSettings.dataField.length >= 0) {\r\n        dispatch(deleteBoxDataField(value));\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.isOpen){\r\n      setOpen(true);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.isOpen]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{`Delete for \"${props.fieldName}\" field?`}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          By Deleting this field, all datas belongs to this {props.fieldName} field, won't be shown anymore on any widgets.\r\n          </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => {\r\n          handleDeleteDataField(props.fieldName);\r\n          handleClose();\r\n          }} color=\"primary\">\r\n          Yes, sure\r\n        </Button>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Wait a minute \r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nConfirmDeleteField.defaultProps = {\r\n  onOpenChange: (value) => {},\r\n  fieldName: '',\r\n  isOpen: false\r\n}","import { Checkbox, Divider, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport { setBoxActiveConnection, setBoxConnectionProperties } from '@pages/BoxPage/Redux/BoxSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React from 'react';\r\nimport useStyles from '../Styles';\r\n\r\nexport default function FormConnection() {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n  const boxSettingsState = useTypedReduxSelector(state => state.boxSettings);\r\n\r\n\r\n  const handleActiveConnectionChange = e => {\r\n    dispatch(setBoxActiveConnection(e.target.value));\r\n  }\r\n\r\n  const handleConnectionFieldChange = (value, fieldName, selectedConnection) => {\r\n    dispatch(setBoxConnectionProperties({\r\n      selectedConnection: selectedConnection,\r\n      connectionPropsName: fieldName,\r\n      value: value,\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={12} lg={3}>\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            Box Connection\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"h4\" color=\"textSecondary\">\r\n            Set your connection here. Codersbox just gave you a freedom of connection. If you wish to use\r\n            Firebase as your connection, just write here your token code. So let Codersbox arrange your data to\r\n            your widget.\r\n          </Typography>\r\n          <FormControl className={classes.formConnection} variant=\"outlined\" style={{ minWidth: 220, marginLeft: 0, marginTop: 20 }}>\r\n            <InputLabel id=\"active-connection\">Active Connection</InputLabel>\r\n            <Select\r\n              labelId=\"active-connection\"\r\n              id=\"active-connection\"\r\n              value={boxState.boxSettings.activeConnection}\r\n              onChange={handleActiveConnectionChange}\r\n              label=\"Active Connection\"\r\n            >\r\n              <MenuItem value={null}>\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {boxSettingsState.connectionsList.map((connection, index) => (\r\n                <MenuItem key={index} value={connection}>{connection}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        {/* Divider */}\r\n        <Divider orientation=\"vertical\" flexItem />\r\n\r\n        {/* Right Side */}\r\n        <Grid item xs={12} md={12} lg={8}>\r\n          <FormControl className={classes.formConnection}>\r\n            {/* Generate Radio Field for each connection list */}\r\n            {boxSettingsState.connectionsList.map((connectionName, index) => (\r\n              <FormGroup key={index} className={classes.formConnectionField}>\r\n                <Typography variant=\"h4\" component=\"h2\">\r\n                  {connectionName.toUpperCase()}\r\n                </Typography>\r\n                <Divider variant=\"fullWidth\" />\r\n                {/* Generate Fields here */}\r\n                {boxSettingsState.connectionFields[connectionName].map((field, fieldIndex) => (\r\n                  <React.Fragment key={fieldIndex}>\r\n                    {/* Generate Database type selection for Firebase */}\r\n                    {field === 'databaseType' ? (\r\n                      <FormControl variant=\"outlined\" style={{ minWidth: 220, marginLeft: 0, marginTop: 20 }}>\r\n                        <InputLabel disabled={false} id=\"firebase-database\">Database type</InputLabel>\r\n                        <Select\r\n                          disabled={false}\r\n                          labelId=\"firebase-database\"\r\n                          id=\"firebase-database\"\r\n                          value={boxState.boxSettings.connection[connectionName][field]}\r\n                          onChange={event => handleConnectionFieldChange(event.target.value, field, connectionName)}\r\n                          label=\"Database type\"\r\n                        >\r\n                          <MenuItem value={null}>\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          <MenuItem value={'rtdb'}>Realtime Database</MenuItem>\r\n                          <MenuItem value={'firestore'}>Firestore</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    ) : field === 'TLS' ?\r\n                      (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={boxState.boxSettings.connection[connectionName][field]}\r\n                              onChange={event => handleConnectionFieldChange(event.target.checked, field, connectionName)}\r\n                              name=\"checkedB\"\r\n                              color=\"primary\" />\r\n                          }\r\n                          label=\"Using TLS\"\r\n                        />\r\n                      )\r\n                      :\r\n                      (\r\n                        <TextField\r\n                          //If its not firebase selection \r\n                          type={field === 'password'? 'password' : 'text'}\r\n                          className={classes.formConnectionTextField}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          multiline={field === 'firebaseToken'}\r\n                          rows={field === 'firebaseToken' ? 5 : 1}\r\n                          id={field}\r\n                          label={field}\r\n                          // value={boxState.boxSettings.connection.mqtt.broker}\r\n                          value={boxState.boxSettings.connection[connectionName][field]}\r\n                          onChange={event => handleConnectionFieldChange(event.target.value, field, connectionName)}\r\n                        />\r\n                      )}\r\n                  </React.Fragment>\r\n                ))}\r\n              </FormGroup>\r\n            ))}\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n/** Forms */\r\nimport FormBoxName from './formBoxName';\r\nimport FormDataField from './formDataField';\r\n\r\n/** Icons */\r\nimport BoxIcon from '@material-ui/icons/AllInbox';\r\nimport FieldIcon from '@material-ui/icons/List';\r\nimport DataConnection from '@material-ui/icons/SettingsInputComponent';\r\nimport FormConnection from './formConnection';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nexport default function SettingsTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab icon={<BoxIcon />} label=\"Box\" {...a11yProps(0)} />\r\n          <Tab icon={<FieldIcon />}label=\"Data Field\" {...a11yProps(1)} />\r\n          <Tab icon={<DataConnection />} label=\"Connection\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <FormBoxName />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <FormDataField />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <FormConnection />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect } from 'react';\r\nimport { matchPath } from 'react-router';\r\nimport { setBoxSettingsConnectionFields, setBoxSettingsConnectionList } from '../Redux/BoxSettingsSlice';\r\n\r\n\r\n\r\nexport default function SettingBoxPageContainer(props) {\r\n  const apiCancelToken = generateCancelToken();\r\n  const api = new ApiService(apiCancelToken);\r\n  const dispatch = useAppDispatch();\r\n  const boxState = useTypedReduxSelector(state => state.box);\r\n\r\n  const loadAvailableConnectionField = async () => {\r\n    try {\r\n      const connectionList = await api.getConnectionList();\r\n      const dataList = connectionList.data.data;\r\n      dispatch(setBoxSettingsConnectionFields(dataList.connectionFields));\r\n      dispatch(setBoxSettingsConnectionList(dataList.connectionsList));\r\n    } catch (error) {\r\n      console.error('Box Settings Container', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadAvailableConnectionField();\r\n\r\n    return () => {\r\n      if(boxState.boxId !== 0) {\r\n        apiCancelToken.cancel();\r\n      }\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.children}\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\r\nimport { Grid, Divider } from '@material-ui/core';\r\nimport SettingsTabs from './Components/Tabs';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport Loading from '../BoxPage/Components/loadingBar';\r\nimport { useAppStateValue } from '@globalContext/AppContextTracked';\r\nimport SettingBoxPageContainer from './Components/SettingBoxPageContainer';\r\nimport { useTypedReduxSelector } from '@store/Store';\r\n\r\nconst SettingsHeader = React.lazy(() => import('./Components/header'));\r\n\r\nexport default function BoxSettings(props) {\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  \r\n  return (\r\n    <SettingBoxPageContainer>\r\n      <Grid container spacing={3} direction=\"column\">\r\n        <React.Suspense fallback={<Skeleton variant='rect' width={400} height={40} />}>\r\n          <SettingsHeader />\r\n        </React.Suspense>\r\n        <Divider />\r\n        {appState.fetchingStatus ? (<Loading width={400} height={500} />) : (<SettingsTabs />)}\r\n      </Grid>\r\n    </SettingBoxPageContainer>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/profilebackground.b78c3775.png\";","import { makeStyles } from \"@material-ui/core\";\r\nimport ProfileBackgroundImage from '../../Image/profilebackground.png';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rootBackgroundCard: {\r\n    backgroundImage: `url(${ProfileBackgroundImage})`,\r\n    backgroundColor: '#1976D2',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: '50% 50%',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    top: -50,\r\n    height: 300,\r\n  },\r\n  codersBackground: {\r\n    height: 250,\r\n    width: '100%'\r\n  },\r\n  userAvatar: {\r\n    height: 120,\r\n    width: 120,\r\n    position: 'relative',\r\n    left: theme.spacing(8),\r\n    bottom: theme.spacing(8),\r\n    border: 20,\r\n    borderColor: 'white',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\nexport default useStyles;","import React, { useContext, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./Styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Logo from \"../../Components/Logo.js\";\r\nimport ApiService, { generateCancelToken } from \"../../Service/apiService\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"@globalContext/AuthContext\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Coders.Id\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport default function SignUpPage() {\r\n  const classes = useStyles();\r\n  const login = useContext(AuthContext);\r\n  const route = useHistory();\r\n  const { register, getValues, errors } = useForm({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirmation: \"\",\r\n      remember: false,\r\n    },\r\n  });\r\n\r\n  const onRegisterSuccess = (response) => console.log(response);\r\n  const onRegisterFailed = (error) => console.log(error);\r\n\r\n  const handleOnSignUp = () => {\r\n    let dataUser = {\r\n      fullName: `${getValues().firstName} ${getValues().lastName}`,\r\n      userName: `${getValues().firstName}${getValues().lastName}${Math.floor(\r\n        Math.random() * 100\r\n      )}`,\r\n      email: getValues().email,\r\n      password: getValues().password,\r\n      password_confirmation: getValues().passwordConfirmation,\r\n    };\r\n    if (Object.keys(errors).length === 0) {\r\n      api.getUserCookie()\r\n        .then(() => {\r\n          api.saveNewUser(dataUser).then(onRegisterSuccess).catch(onRegisterFailed);\r\n        })\r\n        .catch(onRegisterFailed);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (login.isLoggedIn) {\r\n      route.push('/dashbox');\r\n    }\r\n\r\n    return () => {\r\n      apiCancelToken.cancel();\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Logo />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up for CodersBox\r\n        </Typography>\r\n        <form className={classes.form} method=\"post\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                inputRef={register({\r\n                  required: \"You must provide your first name!\",\r\n                  pattern: {\r\n                    message: \"You must provide your first name\",\r\n                  },\r\n                })}\r\n                error={!!errors.firstName}\r\n                className={classes.margin}\r\n              />\r\n              {errors.firstName && (\r\n                <span className={classes.error}>\r\n                  {errors.firstName.message}\r\n                </span>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                inputRef={register({\r\n                  required: \"You must provide your last name!\",\r\n                  pattern: {\r\n                    message: \"You must provide your last name\",\r\n                  },\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                inputRef={register({\r\n                  required: \"You must provide the email address!\",\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"You must provide a valid email address!\",\r\n                  },\r\n                })}\r\n                error={!!errors.email}\r\n                className={classes.margin}\r\n              />\r\n              {errors.email && (\r\n                <span className={classes.error}>{errors.email.message}</span>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                inputRef={register({\r\n                  required: \"You must provide a password.\",\r\n                  minLength: {\r\n                    value: 8,\r\n                    message: \"Your password must be greater than 8 characters\",\r\n                  },\r\n                })}\r\n                error={!!errors.password}\r\n              />\r\n              {errors.password && (\r\n                <span className={classes.error}>{errors.password.message}</span>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"passwordConfirmation\"\r\n                label=\"PasswordConfirmation\"\r\n                type=\"password\"\r\n                id=\"passwordConfirmation\"\r\n                autoComplete=\"current-password\"\r\n                inputRef={register({\r\n                  required: \"Your Password Mismatch\",\r\n                  minLength: {\r\n                    value: \"password\",\r\n                    message: \"Your Password Mismatch\",\r\n                  },\r\n                })}\r\n                error={!!errors.passwordConfirmation}\r\n              />\r\n              {errors.password && (\r\n                <span className={classes.error}>\r\n                  {errors.passwordConfirmation?.message}\r\n                </span>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => handleOnSignUp()}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  accountContainer:{\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  accountFieldContainer:{\r\n    flex: 1,\r\n    '& .MuiTextField-root': {\r\n      width: '60%',\r\n    },\r\n  },\r\n  accountCardAction:{\r\n    backgroundColor: '#d7edf5',\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    ...theme.typography.button\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import { Button, Card, CardActions, CardContent, Grid, IconButton, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useStyles from '../Styles';\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport default function FormPassword() {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const [activePassword, setActivePassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [visibilityPassword, setVisibilityPassword] = useState(false);\r\n\r\n  const handleUpdatePassword = async () => {\r\n    try {\r\n      const dataUpdate = {\r\n        activePassword: activePassword,\r\n        password: newPassword,\r\n        password_confirmation: confirmPassword,\r\n      }\r\n      dispatch(setFetchingStatus(true));\r\n      await api.updateUserPassword(dataUpdate);\r\n      dispatch(\r\n        setFetchingState({\r\n          message: 'Password changed successfully',\r\n          isOpen: true,\r\n          severity: 'success',\r\n          fetchingStatus: false,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        setFetchingState({\r\n          message: 'Password changed failed',\r\n          isOpen: true,\r\n          severity: 'error',\r\n          fetchingStatus: false,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => apiCancelToken.cancel();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item lg={4} md={4} xs={12}>\r\n        <Typography variant=\"h5\" >\r\n          Password\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n          Password management\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item lg={8} md={8} xs={12}>\r\n        <Card>\r\n          <CardContent className={classes.accountFieldContainer}>\r\n            <Grid direction=\"column\" container spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  type={visibilityPassword ? \"text\" : \"password\"}\r\n                  onChange={event => setActivePassword(event.target.value)}\r\n                  variant=\"outlined\"\r\n                  id=\"active-password\"\r\n                  label=\"Active Password\"\r\n                  InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                      <IconButton onClick={() => setVisibilityPassword(state => state = !state)}>\r\n                        {visibilityPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }} />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  type={visibilityPassword ? \"text\" : \"password\"}\r\n                  onChange={event => setNewPassword(event.target.value)}\r\n                  variant=\"outlined\"\r\n                  id=\"new-password\"\r\n                  label=\"New Password\"\r\n                  InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                      <IconButton onClick={() => setVisibilityPassword(state => state = !state)}>\r\n                        {visibilityPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }} />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  type={visibilityPassword ? \"text\" : \"password\"}\r\n                  onChange={event => setConfirmPassword(event.target.value)}\r\n                  variant=\"outlined\"\r\n                  id=\"confirm-new-password\"\r\n                  label=\"Re-type new password\"\r\n                  InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                      <IconButton onClick={() => setVisibilityPassword(state => state = !state)}>\r\n                        {visibilityPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions className={classes.accountCardAction}>\r\n            <Button onClick={handleUpdatePassword} variant=\"contained\" color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import { AuthContext } from '@globalContext/AuthContext';\r\nimport { Avatar, Card, CardActions, CardContent, CardHeader, Grid, TextField, Typography } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport useStyles from '../Styles';\r\n\r\nexport default function FormProfile() {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item lg={4} md={4} xs={12}>\r\n        <Typography variant=\"h5\" >\r\n          Profile\r\n          </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\" gutterBottom>\r\n          Profile Information\r\n          </Typography>\r\n      </Grid>\r\n      <Grid item lg={8} md={8} xs={12}>\r\n        <Card>\r\n          <CardContent className={classes.accountFieldContainer}>\r\n            <Typography component=\"h1\" variant=\"subtitle1\" color=\"textSecondary\">\r\n              Email\r\n              </Typography>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"username\">\r\n                  DB\r\n                  </Avatar>\r\n              }\r\n              title={auth.userName}\r\n              subheader={auth.userEmail}\r\n            />\r\n            <br />\r\n            <TextField disabled value={auth.userName} variant=\"outlined\" id=\"username\" label=\"Username\" />\r\n          </CardContent>\r\n          <CardActions className={classes.accountCardAction}>\r\n            {/*  */}\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import { AuthContext } from '@globalContext/AuthContext';\r\nimport { Button, Card, CardActions, CardContent, Grid, IconButton, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch } from '@store/Store';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport useStyles from '../Styles';\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport default function FormTelegram() {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const auth = useContext(AuthContext);\r\n  const [userTelegramID, setUserTelegramID] = useState(auth.userTelegramID);\r\n  const [visibilityTelegramID, setVisibilityTelegramID] = useState(false);\r\n\r\n  const handleUpdateTelegram = async () => {\r\n    try {\r\n      const dataUpdate = {\r\n        telegramID: userTelegramID,\r\n      }\r\n      dispatch(\r\n        setFetchingStatus(true)\r\n      );\r\n      await api.updateUserTelegramID(dataUpdate);\r\n      dispatch(\r\n        setFetchingState({\r\n          message: 'Telegram ID updated successfully',\r\n          isOpen: true,\r\n          severity: 'success',\r\n          fetchingStatus: false,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        setFetchingState({\r\n          message: 'Telegram ID update failed',\r\n          isOpen: true,\r\n          severity: 'error',\r\n          fetchingStatus: false,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => apiCancelToken.cancel();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item lg={4} md={4} xs={12}>\r\n        <Typography variant=\"h5\" >\r\n          Telergam\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n          Connect your telegram account by inserting your ID here. So we can notify you\r\n          for specific event that you have been set\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item lg={8} md={8} xs={12}>\r\n        <Card>\r\n          <CardContent className={classes.accountFieldContainer}>\r\n            <Grid direction=\"column\" container spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  value={userTelegramID}\r\n                  type={visibilityTelegramID ? \"text\" : \"password\"}\r\n                  onChange={event => setUserTelegramID(event.target.value)}\r\n                  variant=\"outlined\"\r\n                  id=\"telegram-ID\"\r\n                  label=\"Telegram ID\"\r\n                  InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                      <IconButton onClick={() => setVisibilityTelegramID(state => state = !state)}>\r\n                        {visibilityTelegramID ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <CardActions className={classes.accountCardAction}>\r\n            <Button onClick={handleUpdateTelegram} variant=\"contained\" color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import { Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nexport default function HeaderPage() {\r\n  return (\r\n    <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"row\">\r\n      <Grid item xs={8} md={10} lg={10}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          {/* {box.boxTitle === '' ? (<Loading width={400} height={40} />) : 'Settings'} */}\r\n          Account\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n          {/* {box.boxSubTitle === '' ? (<Loading width={300} height={20} />) : box.boxTitle} */}\r\n          Setting for your account\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, {  useEffect } from 'react'; //ini urang tambahin titik koma\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './Styles.js';\r\nimport Logo from '../../Components/Logo.js';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Coders box\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport function NotFound() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      window.location.href = \"/\";\r\n    }, 5000);\r\n    return () => {clearTimeout(timer)}\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Logo logoSize=\"medium\" />\r\n        <Typography variant=\"h1\" gutterBottom>\r\n          404\r\n        </Typography>\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          Not Found\r\n        </Typography>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/dashboard-image.dd3a8305.svg\";","import { Divider, Drawer, Grid, IconButton, List, ListItem, ListItemIcon, ListItemText, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { setDrawerState } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetRouteGroup, routes } from '../Route';\r\nimport Logo from './Logo';\r\nimport useStyles from './Styles';\r\n\r\nexport function ListItemLink(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem className={classes.drawerList} button component={Link} {...props} />\r\n  );\r\n}\r\n\r\nexport default function DrawerMenu(props) {\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const routeGroup = GetRouteGroup();\r\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  useEffect(() => {\r\n    if(mobile) {\r\n      dispatch(setDrawerState(false));\r\n    } else {\r\n      dispatch(setDrawerState(true));\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [mobile]);\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={appState.isDrawerOpen}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.drawerToolbar}>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Logo logoType=\"boxicon\" logoSize=\"small\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton color=\"secondary\" onClick={() => dispatch(setDrawerState(!appState.isDrawerOpen))}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      {/* <Divider /> */}\r\n      {/** Menu Goes here */}\r\n      {routeGroup.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n          <Divider className={classes.drawerDivider} />\r\n          <Typography className={classes.drawerDividerTitle} variant=\"h6\">{value}</Typography>\r\n          <List className={classes.drawerListContainer}>\r\n            {routes.map((route, index) =>\r\n              route.isDrawerMenu && route.group === value ?\r\n                (<ListItemLink key={index} to={route.path}>\r\n                  <ListItemIcon>\r\n                    <route.icon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={route.name} />\r\n                </ListItemLink>) : null\r\n            )}\r\n          </List>\r\n        </React.Fragment>\r\n      ))}\r\n\r\n    </Drawer>\r\n  );\r\n}","import React, { useContext } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n/** Pages */\r\nimport LoginPage from './Pages/LoginPage'\r\nimport Dashboard from './Pages/DashboardPage';\r\nimport Box from './Pages/BoxPage';\r\nimport BoxSettings from './Pages/SettingsPage';\r\nimport CodersPage from \"./Pages/CodersPage\";\r\nimport SignUpPage from \"./Pages/SignUpPage\";\r\nimport AccountPage from './Pages/AccountPage';\r\nimport { NotFound } from \"./Pages/UtilPage/NotFound\";\r\n\r\n/** ICON! */\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BoxIcon from '@material-ui/icons/AllInbox';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport CloudUploadRoundedIcon from '@material-ui/icons/CloudUploadRounded';\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport DnsIcon from '@material-ui/icons/Dns';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\n\r\nimport ContainerApps from \"./Container\";\r\nimport { BoxStateProvider } from \"@pages/BoxPage/Context/boxContextTracked\";\r\nimport { AuthContext } from \"@globalContext/AuthContext\";\r\nimport BoxTrashPage from \"@pages/BoxTrashPage\";\r\nimport BoxAPIPage from \"@pages/BoxAPIPage\";\r\n\r\n\r\nexport const routes = [\r\n  // Login and Auth page\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    group: null,\r\n    isPrivate: false, // For public or logged id\r\n    isExact: true,\r\n    isDrawerMenu: false,\r\n    component: LoginPage,\r\n    icon: () => <LockOpenIcon />,\r\n  },\r\n  {\r\n    path: '/signup',\r\n    name: 'SignUp',\r\n    group: null,\r\n    isPrivate: false,\r\n    isExact: true,\r\n    isDrawerMenu: false,\r\n    component: SignUpPage,\r\n    icon: () => <CloudUploadRoundedIcon />,\r\n  },\r\n\r\n  //General page\r\n  {\r\n    path: '/dashbox',\r\n    name: 'Dashbox',\r\n    group: 'Box',\r\n    isPrivate: true,\r\n    isExact: true,\r\n    isDrawerMenu: true,\r\n    component: Dashboard,\r\n    icon: () => <HomeIcon />,\r\n  },\r\n  {\r\n    path: '/boxapi',\r\n    name: 'API',\r\n    group: 'Box',\r\n    isPrivate: true,\r\n    isExact: true,\r\n    isDrawerMenu: true,\r\n    component: BoxAPIPage,\r\n    icon: () => <DnsIcon />,\r\n  },\r\n\r\n  // {\r\n  //   path: '/testpage',\r\n  //   name: 'Test',\r\n  //   group: 'Test',\r\n  //   isPrivate: true,\r\n  //   isExact: true,\r\n  //   isDrawerMenu: true,\r\n  //   component: TestPage,\r\n  //   icon: () => <DnsIcon />,\r\n  // },\r\n\r\n  // Box Page\r\n  {\r\n    path: '/box/:uniqueBoxToken',\r\n    name: 'Box',\r\n    group: 'Box',\r\n    isPrivate: true,\r\n    isExact: true,\r\n    isDrawerMenu: false,\r\n    component: Box,\r\n    icon: () => <BoxIcon />,\r\n  },\r\n  {\r\n    path: '/box/:uniqueBoxToken/settings',\r\n    name: 'Box Settings',\r\n    group: 'Box',\r\n    isPrivate: true,\r\n    isExact: true,\r\n    isDrawerMenu: false,\r\n    component: BoxSettings,\r\n    icon: () => null,\r\n  },\r\n  {\r\n    path: '/trash',\r\n    name: 'Box Trash',\r\n    group: 'Box',\r\n    isPrivate: true,\r\n    isExact: true,\r\n    isDrawerMenu: true,\r\n    component: BoxTrashPage,\r\n    icon: () => <ArchiveIcon />,\r\n  },\r\n\r\n  //Users Page\r\n  {\r\n    path: '/coders/:username',\r\n    name: 'Coders Profile Page',\r\n    group: 'Users',\r\n    isPrivate: true,\r\n    isExact: true,\r\n    isDrawerMenu: false,\r\n    component: CodersPage,\r\n    icon: () => null,\r\n  },\r\n  {\r\n    path: '/account',\r\n    name: 'Account',\r\n    group: 'Users',\r\n    isPrivate: true,\r\n    isExact: true,\r\n    isDrawerMenu: true,\r\n    component: AccountPage,\r\n    icon: () => <AccountIcon />,\r\n  },\r\n\r\n  //Utils Page\r\n  {\r\n    path: '/lost',\r\n    name: 'Lost Page',\r\n    group: 'Utils',\r\n    isPrivate: false,\r\n    isExact: true,\r\n    isDrawerMenu: false,\r\n    component: NotFound,\r\n    icon: () => null,\r\n  },\r\n]\r\n\r\nexport function GetRouteGroup() {\r\n  const test = routes.filter(route => route.isDrawerMenu === true).reduce((prev, current, index) => {\r\n    prev[\"groupset\"] = [...prev[\"groupset\"] || [], current.group];\r\n    return prev;\r\n  });\r\n  let result = [...new Set(test.groupset)];\r\n  return result;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Route page tobe change soon\r\n */\r\n\r\nexport default function RoutePage() {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, index) => (\r\n        <Route key={index} exact={route.isExact} path={route.path} component={route.isPrivate ? WithLoginPage(auth.isLoggedIn)(route.component) : route.component} />\r\n      )\r\n      )}\r\n      <Route path=\"/\" exact={true} render={() => <Redirect to=\"/login\" />} />\r\n      <Route path=\"*\" exact={true} render={() => <Redirect to=\"/lost\" />} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst WithLoginPage = loginState => WrappedPage => class withLogin extends React.Component {\r\n \r\n  render() {\r\n    return loginState ?\r\n      // <BoxContextContainer>\r\n      <BoxStateProvider>\r\n        <ContainerApps>\r\n          <WrappedPage />\r\n        </ContainerApps>\r\n      </BoxStateProvider>\r\n      // </BoxContextContainer>\r\n      : <Redirect to=\"/login\" />;\r\n  }\r\n}\r\n","import { AuthContext } from '@globalContext/AuthContext';\r\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport useStyles from './Styles';\r\n\r\n\r\n\r\nexport default function RightMenu() {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const router = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMenuAccount = () => {\r\n    router.push('/account');\r\n  }\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={() => {\r\n        handleMenuClose();\r\n        // auth.handleGetCodersProfile();\r\n        router.push(`/coders/${auth.userName}`);\r\n      }}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuAccount}>My account</MenuItem>\r\n      <MenuItem onClick={() => {\r\n        auth.handleLogout().then(() => {\r\n          window.location.href = '/';\r\n        });\r\n      }}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Account</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.sectionDesktop}>\r\n        {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n        {/* <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={17} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls={menuId}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleProfileMenuOpen}\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.sectionMobile}>\r\n        <IconButton\r\n          aria-label=\"show more\"\r\n          aria-controls={mobileMenuId}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleMobileMenuOpen}\r\n          color=\"inherit\"\r\n        >\r\n          <MoreIcon />\r\n        </IconButton>\r\n      </div>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </React.Fragment>\r\n  );\r\n}","import { AppBar, IconButton, Toolbar } from '@material-ui/core';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport MenuIcons from '@material-ui/icons/Menu';\r\nimport { setDrawerState } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from './Logo';\r\nimport RightMenu from './RightMenu';\r\nimport useStyles from './Styles';\r\n\r\nexport default function Header(props) {\r\n\tconst classes = useStyles();\r\n\tconst appState = useTypedReduxSelector(state => state.app);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst trigger = useScrollTrigger();\r\n\r\n\treturn (\r\n\t\t<ElevationScroll {...props}>\r\n\t\t\t<AppBar\r\n\t\t\t\tposition=\"sticky\"\r\n\t\t\t\televation={trigger? 4: 0}\r\n\t\t\t\tclassName={clsx(classes.appBar, {\r\n\t\t\t\t\t[classes.appBarShift]: appState.isDrawerOpen,\r\n\t\t\t\t})}>\r\n\t\t\t\t<Toolbar className={clsx(classes.toolbar, props.optStyles)} variant=\"dense\">\r\n\t\t\t\t\t<IconButton className={clsx({ [classes.appBarMenuButtonHide]: appState.isDrawerOpen })} onClick={() => dispatch(setDrawerState(true))} edge=\"start\">\r\n\t\t\t\t\t\t<MenuIcons className={props.optStyles} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Link to=\"/dashbox\">\r\n\t\t\t\t\t\t<Logo onClick={(e) => console.log(e)} logoType=\"white\" />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{/* <Search /> */}\r\n\t\t\t\t\t<div className={classes.grow} />\r\n\t\t\t\t\t<RightMenu />\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</ElevationScroll>\r\n\t);\r\n}\r\n\r\nfunction ElevationScroll(props) {\r\n\tconst { children, window } = props;\r\n\t// Note that you normally won't need to set the window ref as useScrollTrigger\r\n\t// will default to window.\r\n\t// This is only being set here because the demo is in an iframe.\r\n\tconst trigger = useScrollTrigger({\r\n\t\tdisableHysteresis: true,\r\n\t\tthreshold: 0,\r\n\t\ttarget: window ? window() : undefined,\r\n\t});\r\n\t// console.log(trigger,children,window);\r\n\treturn React.cloneElement(children, {\r\n\t\televation: trigger ? 4 : 0,\r\n\t});\r\n}","import { AuthContext } from '@globalContext/AuthContext';\r\nimport DashboardImage from '@globalImages/dashboard-image.svg';\r\nimport { Box, Container, useScrollTrigger } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport clsx from 'clsx';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport DrawerMenu from './Components/Drawer';\r\nimport Header from './Components/Header';\r\nimport { setAppReRender, setUserBox } from './Redux/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from './Redux/Store';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  whiteColor: {\r\n    color: '#FFFFFF',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -240,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  dashboard: {\r\n    backgroundImage: `url(${DashboardImage})`,\r\n    backgroundColor: '#1976D2',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: '50% 30%',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    top: -50,\r\n    height: 350,\r\n  },\r\n\r\n}));\r\n\r\nconst apiCancelToken = generateCancelToken();\r\nconst api = new ApiService(apiCancelToken);\r\n\r\nexport default function ContainerApps(props) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n\r\n  // useEffect(() => {\r\n  //   if (appState.boxes.length === 0) {\r\n  //     if (auth.userName !== undefined && auth.isLoggedIn) {\r\n  //       api.getBoxUser()\r\n  //         .then(({ data }) => {\r\n  //           let userData = data.data;\r\n  //           dispatch(setUserBox(userData.boxes));\r\n  //         })\r\n  //         .then(() => {\r\n  //           dispatch(setAppReRender(true));\r\n  //         });\r\n  //     }\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     apiCancelToken.cancel();\r\n  //   }\r\n\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [auth.isLoggedIn])\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <DrawerMenu />\r\n      <main className={clsx(classes.content, {\r\n        [classes.contentShift]: appState.isDrawerOpen\r\n      })}>\r\n        <Header {...props} optStyles={classes.whiteColor} />\r\n        {location.pathname === '/dashbox' ? (<BoxImage />) : null}\r\n        <Container className={classes.container}>\r\n          {props.children}\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BoxImage() {\r\n  const classes = useStyles();\r\n  const [offset, setOffset] = useState(0);\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window : undefined,\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    function handleScroll() {\r\n      setOffset(window.pageYOffset);\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [trigger]);\r\n\r\n  return <Box style={{ transform: `translateY(${offset * 0.2}px)` }} component=\"div\" className={classes.dashboard} />;\r\n}","import { useAppState } from '@globalContext/AppContextTracked';\r\nimport { Button, ButtonGroup, Tooltip, Typography } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nexport default function BasicTable() {\r\n\r\n  const apiCancelToken = generateCancelToken();\r\n  const api = new ApiService(apiCancelToken);\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const [boxTrashState, setBoxTrashState] = useState([]);\r\n\r\n\r\n  const fetchBoxTrash = async () => {\r\n    try {\r\n      dispatch(setFetchingStatus(true));\r\n      const response = await api.getBoxTrash();\r\n      const boxData = response.data.data;\r\n      setBoxTrashState(boxData);\r\n      dispatch(setFetchingState({\r\n        message: 'Box Trash loaded successfully!',\r\n        severity: 'success',\r\n        isOpen: true,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Trash Page', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Box Trash loaded failed!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleRestore = async (boxToken) => {\r\n    try {\r\n      dispatch(setFetchingStatus(true));\r\n      await api.getBoxTrashRestore(boxToken);\r\n      setBoxTrashState(state => state.filter(box => box.boxToken !== boxToken));\r\n      dispatch(setFetchingState({\r\n        message: 'Box was restored successfully!',\r\n        severity: 'success',\r\n        isOpen: true,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Trash Page', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Box Trash restore failed!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleRemove = async (boxToken, boxDeviceToken) => {\r\n    try {\r\n      dispatch(setFetchingStatus(true));\r\n      await api.getBoxTrashDelete(boxToken, boxDeviceToken);\r\n      setBoxTrashState(state => state.filter(box => box.boxToken !== boxToken));\r\n      dispatch(setFetchingState({\r\n        message: 'Box was deleted permanently',\r\n        severity: 'warning',\r\n        isOpen: true,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Trash Page', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Box Trash delete permanently failed!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n      }));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBoxTrash();\r\n    return () => {\r\n      if (boxTrashState.length !== 0) {\r\n        apiCancelToken.cancel()\r\n      }\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Grid item lg={12} md={12} xs={12}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"Box Trash\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Box Name</TableCell>\r\n              <TableCell align=\"center\">Box Tag Name</TableCell>\r\n              <TableCell align=\"center\">Box Unique Token</TableCell>\r\n              <TableCell align=\"center\">Device Unique Token</TableCell>\r\n              <TableCell align=\"center\">Delete At</TableCell>\r\n              <TableCell align=\"center\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {boxTrashState.length > 0 ?\r\n              boxTrashState.map(box => (\r\n                <TableRow hover key={box.boxToken}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {box.boxName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{box.boxTagName}</TableCell>\r\n                  <TableCell align=\"center\">{box.boxToken}</TableCell>\r\n                  <TableCell align=\"center\">{box.boxDeviceToken}</TableCell>\r\n                  <TableCell align=\"center\">{box.deleteTime}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {appState.fetchingStatus ? (\r\n                      <CircularProgress size={25} color=\"primary\" />\r\n                    ) : (\r\n                      <ButtonGroup variant=\"contained\">\r\n                        <Tooltip title=\"Restore your box to active\">\r\n                          <Button onClick={() => handleRestore(box.boxToken)} color=\"primary\"><RestoreIcon /></Button>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete Your Box Permanently\">\r\n                          <Button onClick={() => handleRemove(box.boxToken, box.boxDeviceToken)} color=\"secondary\"><DeleteForeverIcon /></Button>\r\n                        </Tooltip>\r\n                      </ButtonGroup>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )) : appState.fetchingStatus ? (\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Skeleton animation=\"wave\" />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align=\"center\">\r\n                    <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n                      No Box Trashed\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Grid>\r\n  );\r\n}","import { Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nexport default function HeaderPage() {\r\n  return (\r\n    <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"row\">\r\n      <Grid item xs={8} md={10} lg={10}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Box Trash\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n          All Boxes that no longer active. You can still restore it here\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import {makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  accountContainer:{\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  accountFieldContainer:{\r\n    flex: 1,\r\n    '& .MuiTextField-root': {\r\n      width: '60%',\r\n    },\r\n  },\r\n  accountCardAction:{\r\n    backgroundColor: '#d7edf5',\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    ...theme.typography.button\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import { useAppState } from '@globalContext/AppContextTracked';\r\nimport { Chip, IconButton, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setFetchingState, setFetchingStatus } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function BasicTable() {\r\n  const apiCancelToken = generateCancelToken();\r\n  const api = new ApiService(apiCancelToken);\r\n  const dispatch = useAppDispatch();\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const [boxTrashState, setBoxTrashState] = useState([]);\r\n  const [visibilityContent, setVisbility] = useState(false);\r\n\r\n  const fetchBoxTrash = async () => {\r\n    try {\r\n      dispatch(setFetchingStatus(true));\r\n      const response = await api.getBoxAPI();\r\n      const boxData = response.data.data;\r\n      setBoxTrashState(boxData);\r\n      dispatch(setFetchingState({\r\n        message: 'Box Trash load successfully',\r\n        isOpen: true,\r\n        severity: 'success',\r\n        fetchingStatus: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error('API Page', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Box Trash load failed!',\r\n        isOpen: true,\r\n        severity: 'error',\r\n        fetchingStatus: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBoxTrash();\r\n    return () => {\r\n      if (boxTrashState.length !== 0) {\r\n        apiCancelToken.cancel();\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Grid item lg={12} md={12} xs={12}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"Box Trash\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Box Name</TableCell>\r\n              <TableCell align=\"center\">Box Unique Token</TableCell>\r\n              <TableCell align=\"center\">Device Unique Token</TableCell>\r\n              <TableCell align=\"center\">Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {boxTrashState.length > 0 ?\r\n              boxTrashState.map(box => (\r\n                <TableRow hover key={box.boxToken}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {box.boxName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <TextField\r\n                      value={box.boxToken}\r\n                      type={visibilityContent ? \"text\" : \"password\"}\r\n                      variant=\"outlined\"\r\n                      InputProps={{\r\n                        endAdornment: <InputAdornment position=\"end\">\r\n                          <IconButton onClick={() => setVisbility(state => state = !state)}>\r\n                            {visibilityContent ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton>\r\n                          <IconButton onClick={() => { navigator.clipboard.writeText(box.boxToken) }}>\r\n                            <FileCopyIcon />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <TextField\r\n                      value={box.boxDeviceToken}\r\n                      type={visibilityContent ? \"text\" : \"password\"}\r\n                      variant=\"outlined\"\r\n                      InputProps={{\r\n                        endAdornment: <InputAdornment position=\"end\">\r\n                          <IconButton onClick={() => setVisbility(state => state = !state)}>\r\n                            {visibilityContent ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton>\r\n                          <IconButton onClick={() => { navigator.clipboard.writeText(box.boxDeviceToken) }}>\r\n                            <FileCopyIcon />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{box.boxStatus === 'active' ?\r\n                    <Chip label={box.boxStatus} color=\"primary\" size=\"small\" icon={<CheckIcon />} />\r\n                    :\r\n                    <Chip label={box.boxStatus} color=\"secondary\" size=\"small\" icon={<CancelIcon />} />\r\n                  }</TableCell>\r\n                </TableRow>\r\n              )) : appState.fetchingStatus ? (\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Skeleton animation=\"wave\" />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                  <TableCell align=\"center\"><Skeleton animation=\"wave\" /></TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align=\"center\">\r\n                    <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n                      No Box Trashed\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Grid>\r\n  );\r\n}","import { Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nexport default function HeaderPage() {\r\n  return (\r\n    <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"row\">\r\n      <Grid item xs={8} md={10} lg={10}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Box API page\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"h4\" color=\"textSecondary\">\r\n          Use your box token and device token to send or receive data on your device\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  accountContainer:{\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  accountFieldContainer:{\r\n    flex: 1,\r\n    '& .MuiTextField-root': {\r\n      width: '60%',\r\n    },\r\n  },\r\n  accountCardAction:{\r\n    backgroundColor: '#d7edf5',\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    ...theme.typography.button\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Login from './Login';\r\n\r\nexport default function LoginPage() {\r\n    return (\r\n        <Login />\r\n    );\r\n}\r\n","import React from 'react'\r\nimport SignUp from './SignUp'\r\n\r\nexport default function SignUpPage() {\r\n    return (\r\n        <SignUp />\r\n    );\r\n}\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport ApiService, { generateCancelToken } from '@services/apiService';\r\nimport { setAppReRender, setFetchingMessage, setFetchingState, setFetchingStatus, setUserBox } from '@store/AppSlice';\r\nimport { useAppDispatch, useTypedReduxSelector } from '@store/Store';\r\nimport React, { useEffect } from 'react';\r\nimport CardBox from './CardBox';\r\nimport CardBoxLoading from './Components/CardBoxLoading';\r\nimport QuickAddNewBox from './Components/QuickAddDialog';\r\nimport { setUserBoxes } from './Redux/DashboardSlice';\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n  const apiCancelToken = generateCancelToken();\r\n  const api = new ApiService(apiCancelToken);\r\n  const appState = useTypedReduxSelector(state => state.app);\r\n  const dashboardState = useTypedReduxSelector(state => state.dashboardPage);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleGetUserBox = async () => {\r\n    dispatch(setFetchingStatus(true));\r\n    try {\r\n      const response = await api.getBoxUser();\r\n      dispatch(setUserBoxes(response.data.data.boxes));\r\n      dispatch(setFetchingState({\r\n        message: 'All box has been loaded!',\r\n        severity: 'success',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Dashboard page ', error);\r\n      dispatch(setFetchingState({\r\n        message: 'Box failed to load!',\r\n        severity: 'error',\r\n        isOpen: true,\r\n        fetchingStatus: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (appState.shouldRender) {\r\n      dispatch(setAppReRender(false));\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [appState.shouldRender]);\r\n\r\n  useEffect(() => {\r\n    if (dashboardState.boxes.length === 0) {\r\n      // if (auth.userName !== undefined && auth.isLoggedIn) {\r\n      handleGetUserBox();\r\n      // }\r\n    }\r\n\r\n    return () => {\r\n      if (dashboardState.boxes.length !== 0) {\r\n        apiCancelToken.cancel();\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>Your box</Typography>\r\n\r\n      <Grid container spacing={2}>\r\n        {dashboardState.boxes.length !== 0 ? dashboardState.boxes.map((data, index) => (\r\n          <Grid key={index} item xs={12} md={6} lg={3}>\r\n            <CardBox name={data.boxName} description={data.boxTagName} boxToken={data.boxToken} />\r\n          </Grid>\r\n        )) : null}\r\n        <Grid style={{ display: appState.fetchingStatus ? 'block' : 'none' }} item xs={12} md={4} lg={3}>\r\n          <CardBoxLoading />\r\n        </Grid>\r\n        <QuickAddNewBox />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import { Divider, Grid,} from '@material-ui/core';\r\nimport React from 'react';\r\nimport BasicTable from './Components/BoxApiTable';\r\nimport HeaderPage from './Components/HeaderPage';\r\nimport useStyles from './Styles';\r\n\r\nexport default function BoxAPIPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderPage />\r\n      <Divider />\r\n      <Grid className={classes.accountContainer} container spacing={4}>\r\n        <BasicTable />\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import { useAppDispatch } from \"@store/Store\";\r\nimport React, { useEffect } from \"react\";\r\nimport BoxConnectionManager from \"./BoxConnectionManager\";\r\nimport AddWidget from \"./Components/AddWidget/AddWidget\";\r\nimport BoxContainer from \"./Components/boxContainer\";\r\n//Icons\r\nimport EditWidgetDrawer from \"./Components/EditWidget/EditWidgetDrawer\";\r\nimport WidgetContainer from \"./Components/WidgetContainer/WidgetContainer\";\r\nimport { resetBoxSlice } from \"./Redux/BoxSlice\";\r\nimport { resetBoxUIEditMode } from \"./Redux/BoxUISlice\";\r\n\r\nexport default function Box() {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetBoxSlice());\r\n      dispatch(resetBoxUIEditMode());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <BoxContainer>\r\n        <BoxConnectionManager />\r\n        <WidgetContainer />\r\n        <AddWidget />\r\n        <EditWidgetDrawer />\r\n      </BoxContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Divider, Grid,} from '@material-ui/core';\r\nimport React from 'react';\r\nimport BasicTable from './Components/BoxTrashTable';\r\nimport HeaderPage from './Components/HeaderPage';\r\nimport useStyles from './Styles';\r\n\r\nexport default function BoxTrashPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderPage />\r\n      <Divider />\r\n      <Grid className={classes.accountContainer} container spacing={4}>\r\n        <BasicTable />\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import { Grid, Paper } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyles from './Styles';\r\n\r\nexport default function CodersPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"flex-start\" alignItems=\"center\">\r\n      <Grid item xs={12} md={12} lg={12}>\r\n        <Paper elevation={0} className={classes.rootBackgroundCard} />\r\n      </Grid>\r\n      {/* <Grid item xs={12} md={12} lg={12}>\r\n        <Card className={classes.rootBackgroundCard}>\r\n          <CardMedia\r\n            image={ProfileBackground}\r\n            className={classes.codersBackground}\r\n            title=\"Username\"\r\n          />\r\n          Dimas\r\n        </Card>\r\n      </Grid> */}\r\n      {/* <Grid item>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n          <Card>\r\n            Diams\r\n          </Card>\r\n        </Grid>\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n}","import { Divider, Grid,} from '@material-ui/core';\r\nimport React from 'react';\r\nimport FormPassword from './Components/FormPassword';\r\nimport FormProfile from './Components/FormProfile';\r\nimport FormTelegram from './Components/FormTelegram';\r\nimport HeaderPage from './Components/HeaderPage';\r\nimport useStyles from './Styles';\r\n\r\nexport default function AccountPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderPage />\r\n      <Divider />\r\n      <Grid className={classes.accountContainer} container spacing={4}>\r\n        <FormProfile />\r\n        <Divider flexItem />\r\n        <FormPassword />\r\n        <Divider flexItem />\r\n        <FormTelegram />\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","import AlertBar from '@globalComponents/AlertBar';\r\nimport AuthContextProvider from '@globalContext/AuthContext';\r\n//Components\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport red from '@material-ui/core/colors/red';\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\n//Router\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport store from './Redux/Store';\r\nimport RoutePage from './Route';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: red,\r\n  },\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <AuthContextProvider>\r\n        <Router>\r\n          <ThemeProvider theme={theme}>\r\n            <AlertBar />\r\n            <RoutePage />\r\n          </ThemeProvider>\r\n        </Router>\r\n      </AuthContextProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n  <App />\r\n  </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { WidgetLayout } from \"./WidgetSlice\";\r\n\r\nexport interface WidgetUILayout {\r\n  widgetsLayout: WidgetLayout[];\r\n  useOwnDataField: boolean;\r\n  widgetIndexLayout: number;\r\n}\r\n\r\nconst initialState: WidgetUILayout = {\r\n  widgetsLayout: [],\r\n  useOwnDataField: false,\r\n  widgetIndexLayout: 0,\r\n}\r\n\r\nconst WidgetUISlice = createSlice({\r\n  name: 'WidgetUISlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    resetWidgetUILayout: (state) => {\r\n      state.widgetsLayout = [];\r\n    },\r\n    setWidgetUILayout: (state, action: PayloadAction<WidgetLayout>) => {\r\n      state.widgetsLayout = state.widgetsLayout.concat(action.payload);\r\n    },\r\n    setWidgetUIuseOwnDataField: (state, action: PayloadAction<boolean>) => {\r\n      state.useOwnDataField = action.payload;\r\n    },\r\n    setWidgetIndexLayout: (state, action: PayloadAction<number>) => {\r\n      state.widgetIndexLayout = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  resetWidgetUILayout,\r\n  setWidgetUILayout,\r\n  setWidgetUIuseOwnDataField,\r\n  setWidgetIndexLayout,\r\n} = WidgetUISlice.actions;\r\nexport default WidgetUISlice.reducer;","import produce from 'immer';\r\nimport { useCallback, useState } from 'react';\r\nimport { createContainer } from 'react-tracked';\r\n\r\nexport let initialState = {\r\n\r\n  isBoxEditMode: false,\r\n  shouldBoxRefresh: false,\r\n  mqtt: {},\r\n  /**\r\n   *  --------------\r\n   *  State based on databox from API\r\n   *  --------------\r\n   */\r\n  boxId: 0,\r\n  boxToken: '',\r\n  boxDeviceToken: '',\r\n  boxName: '',\r\n  boxTagName: '',\r\n  boxDescription: '',\r\n  boxActiveStatus: true,\r\n  boxSettings: {\r\n    dataField: [],\r\n    layout: {},\r\n    activeConnection: '',\r\n    connection: {\r\n      mqtt: {\r\n        broker: '',\r\n        subscribeTopic: '',\r\n        publishTopic: '',\r\n        authentication: ''\r\n      },\r\n      firebase: {\r\n        databaseType: '',\r\n        firebaseToken: '',\r\n      },\r\n      codersbox: {\r\n        deviceToken: '',\r\n      }\r\n    }\r\n  },\r\n  boxWidgets: [],\r\n  createdTime: '',\r\n  updatedTime: '',\r\n\r\n  /**\r\n   *  --------------\r\n   *  State for detect cols change\r\n   *  --------------\r\n   */\r\n  boxCols: 0,\r\n\r\n  /**\r\n   *  --------------\r\n   *  State for Box Connection Field\r\n   *  --------------\r\n   * \r\n   *  Used for determine how many fields that should be provided\r\n   *  on Box Settings Page, Connection Tab\r\n   */\r\n  connectionsList: [],\r\n  connectionFields: {},\r\n\r\n  /**\r\n   *  --------------\r\n   *  State for Box Widget Creation\r\n   *  --------------\r\n   * \r\n   *  Used for determine how many fields that should be provided\r\n   *  on Box Settings Page, Connection Tab\r\n   */\r\n  boxWidgetCreator:[],\r\n};\r\n\r\nconst useAllBoxState = () => useState(initialState);\r\n\r\nexport const useSetBoxDraft = () => {\r\n  const setBoxState = useBoxSetState();\r\n  return useCallback(\r\n    (draftUpdater) => {\r\n      setBoxState(produce(draftUpdater));\r\n    },\r\n    [setBoxState],\r\n  );\r\n};\r\n\r\nexport const {\r\n  Provider: BoxStateProvider,\r\n  useTracked: useBoxState,\r\n  useUpdate: useBoxSetState,\r\n  useTrackedState: useBoxStateValue,\r\n} = createContainer(useAllBoxState);\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { string } from \"prop-types\";\r\n\r\nexport type boxcreatorfield = 'boxToken' | 'boxName' | 'boxTagName' | 'boxDescription';\r\nexport interface DashboardBoxUser {\r\n  boxName: string;\r\n  boxTagName: string;\r\n  boxToken: string;\r\n}\r\n\r\nexport interface DashboardBoxCreator {\r\n  boxToken?: string;\r\n  boxName: string;\r\n  boxTagName: string;\r\n  boxDescription: string;\r\n  boxUserId?: number;\r\n}\r\n\r\nexport interface DashboardInitialState {\r\n  isAddNewBox: boolean;\r\n  boxes: DashboardBoxUser[];\r\n  newBoxCreator: DashboardBoxCreator;\r\n}\r\n\r\nconst initialState: DashboardInitialState = {\r\n  isAddNewBox: false,\r\n  boxes: [],\r\n  newBoxCreator: {\r\n    boxToken: '',\r\n    boxName: '',\r\n    boxTagName: '',\r\n    boxDescription: '',\r\n    boxUserId: 0,\r\n  },\r\n};\r\n\r\nconst DashboardSlice = createSlice({\r\n  name: \"DashboardSlice\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setAddNewBox: (state, action: PayloadAction<boolean>) => {\r\n      state.isAddNewBox = action.payload;\r\n    },\r\n    setUserBoxes: (state, action: PayloadAction<DashboardBoxUser[]>) => {\r\n      state.boxes = action.payload;\r\n    },\r\n    setNewBoxCreator: (state, action: PayloadAction<{field: boxcreatorfield, value: string}>) => {\r\n      state.newBoxCreator[action.payload.field] = action.payload.value;\r\n    },\r\n    deleteUserBox: (state, action: PayloadAction<string>) => {\r\n      state.boxes = state.boxes.filter(box => box.boxToken !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddNewBox, setUserBoxes, setNewBoxCreator, deleteUserBox } = DashboardSlice.actions;\r\nexport default DashboardSlice.reducer;\r\n","import { useState } from 'react';\r\nimport { createContainer } from 'react-tracked';\r\n\r\nconst initialState = {\r\n  isDrawerOpen: true,\r\n  isAddNewBox: false,\r\n  isAddNewWidget: false,\r\n  isEditWidget: false,\r\n\r\n  /**\r\n   *  Fetching Resource State\r\n   * \r\n   */\r\n  fetchingStatus: false,\r\n  fetchingMessage: {\r\n    message: '',\r\n    severity: 'info',\r\n    isOpen: false,\r\n  },\r\n\r\n  //Dashboard\r\n  shouldRender: false,\r\n  boxes: [],\r\n};\r\n\r\nconst useAllAppState = () => useState(initialState);\r\n\r\n/**\r\n * App State for managing All UI Interaction in Apps\r\n * \r\n */\r\nexport const {\r\n  Provider: AppStateProvider,\r\n  useTracked: useAppState,\r\n  useUpdate: useAppSetState,\r\n  useTrackedState: useAppStateValue,\r\n} = createContainer(useAllAppState);\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport Cookie from 'js-cookie';\r\n\r\n\r\nexport const COOKIE_LOGIN_STATE = 'codersbox_state';\r\nexport const COOKIE_LOGIN_TOKEN = 'codersbox_session';\r\n\r\ninterface AuthState {\r\n  isLoggedIn: false,\r\n  userName: '',\r\n  userEmail: string,\r\n  userId: number,\r\n  authToken: string,\r\n  userTelegramID: number,\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isLoggedIn: false,\r\n  userName: '',\r\n  userEmail: '',\r\n  userId: 0,\r\n  authToken: '',\r\n  userTelegramID: 0,\r\n}\r\n\r\nconst AuthSlice = createSlice({\r\n  name: 'AuthSlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    handleLogout: (state, action: PayloadAction<AuthState>) => {\r\n      state.isLoggedIn = false;\r\n      state.userEmail = '';\r\n      state.userId = 0;\r\n      state.userName = '';\r\n      state.userTelegramID = 0;\r\n      state.authToken = '';\r\n      Cookie.remove(COOKIE_LOGIN_STATE, { expires: 1, sameSite: 'Lax' });\r\n      Cookie.remove(COOKIE_LOGIN_TOKEN, { expires: 1, sameSite: 'Lax' });\r\n    },\r\n    handleLogin: (state, action: PayloadAction<AuthState>) => {\r\n      state.isLoggedIn = action.payload.isLoggedIn;\r\n      state.userEmail = action.payload.userEmail;\r\n      state.userId = action.payload.userId;\r\n      state.userName = action.payload.userName;\r\n      state.userTelegramID = action.payload.userTelegramID;\r\n      state.authToken = action.payload.authToken;\r\n      Cookie.set(COOKIE_LOGIN_STATE, 'true', { expires: 1, sameSite: 'Lax' });\r\n    },\r\n    handleAutoLogin: (state, action) => { },\r\n  }\r\n});\r\n\r\nexport const {handleLogout, handleLogin} = AuthSlice.actions;\r\nexport default AuthSlice.reducer;","import BoxSlice from \"@pages/BoxPage/Redux/BoxSlice\";\r\nimport BoxUISlice from \"@pages/BoxPage/Redux/BoxUISlice\";\r\nimport WidgetDataSlice from \"@pages/BoxPage/Redux/WidgetDataSlice\";\r\nimport WidgetSlice from \"@pages/BoxPage/Redux/WidgetSlice\";\r\nimport WidgetUISlice from \"@pages/BoxPage/Redux/WidgetUISlice\";\r\nimport DashboardSlice from \"@pages/DashboardPage/Redux/DashboardSlice\";\r\nimport BoxSettingsSlice from \"@pages/SettingsPage/Redux/BoxSettingsSlice\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as useReduxDispatch,\r\n  useSelector as useReduxSelector\r\n} from \"react-redux\";\r\nimport { createTrackedSelector } from \"react-tracked\";\r\nimport AppSlice from \"./AppSlice\";\r\nimport AuthSlice from \"./AuthSlice\";\r\n\r\n\r\nconst store = configureStore({\r\n  reducer:{\r\n    app: AppSlice,\r\n    auth: AuthSlice,\r\n    box: BoxSlice,\r\n    widget: WidgetSlice,\r\n    widgetUI: WidgetUISlice,\r\n    widgetData: WidgetDataSlice,\r\n    boxSettings: BoxSettingsSlice,\r\n    dashboardPage: DashboardSlice,\r\n\r\n    //PagesUI\r\n    boxPageUI: BoxUISlice,\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport const useTypedReduxSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\nexport const useTrackedSelector = createTrackedSelector(useTypedReduxSelector);\r\n\r\nexport const useAppDispatch = () => useReduxDispatch<typeof store.dispatch>();\r\nexport const useAppSelector = <T extends unknown>(selectFunc: (state: RootState) => T) => {\r\n  const state = useTrackedSelector();\r\n  return selectFunc(state);\r\n};\r\n\r\nexport default store;\r\n"],"sourceRoot":""}